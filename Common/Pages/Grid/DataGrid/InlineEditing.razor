@page "/datagrid/inline-editing"

@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.DropDowns
@using BlazorDemos
@using blazor_griddata
@inherits SampleBaseComponent;
@*Hidden:Lines*@
@inject NavigationManager NavigationManager
<PageTitle>Blazor DataGrid Inline Editing Example - Syncfusion Demos</PageTitle>
<HeadContent>
    <meta name="description" content="This example demonstrates the Inline Editing in Blazor DataGrid Component. Explore here for more details." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@

<SampleDescription>
    <p>This sample shows how to use the inline or normal editing mode in DataGrid to perform CRUD operations.</p>
</SampleDescription>
<ActionDescription>
  <p>The Blazor DataGrid Normal editing features allow you to edit the currently selected record by changing the state of the corresponding record to edit. You can carry out the following CRUD operations:</p>
  <ul>
       <li><strong>Add</strong> -  To add new record, click Add toolbar button.</li>
       <li><strong>Edit</strong> - To edit record, double click a row or click toolbar Edit button after selecting a row.</li>
       <li><strong>Delete</strong> - To delete record, click toolbar Delete button after selecting a row.</li>
       <li><strong>Update</strong> - To save the edited changes, click toolbar Update button.</li> 
       <li><strong>Cancel</strong> - To discard the edited changes, click toolbar Cancel button.</li>
   </ul>
   <p>The CRUD operations in DataGrid can be configured using the <a target='_blank' href='https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.Blazor~Syncfusion.Blazor.Grids.GridEditSettings.html'>GridEditSettings</a> component. Any one of the columns should be defined as a primary key using the <code>GridColumn</code> component's <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Grids.GridColumn.html#Syncfusion_Blazor_Grids_GridColumn_IsPrimaryKey'>IsPrimaryKey</a> property. It also has various modes for manipulating the datasource.</p>
   <p>The modes that are available are,</p>
   <ul>
       <li><strong>Dialog</strong></li>
       <li><strong>Batch</strong></li>
   </ul>
   <p>By default, a new row will be added at the top of the DataGrid. You can change it by setting the <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Grids.GridEditSettings.html#Syncfusion_Blazor_Grids_GridEditSettings_NewRowPosition'>NewRowPosition</a> to <b>Bottom</b> in <code>GridEditSettings</code>.</p>
   <p>More information about the Normal editing feature can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/datagrid/editing#normal'>documentation</a> section.</p>
</ActionDescription>

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <SfGrid DataSource="@GridData" Toolbar="@(new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel" })" AllowPaging="true">
                <GridEditSettings AllowAdding="true" AllowDeleting="true" AllowEditing="true"></GridEditSettings>
                <GridColumns>
                    <GridColumn Field=@nameof(Orders.OrderID) HeaderText="Order ID" IsPrimaryKey="true" ValidationRules="@(new ValidationRules{ Required=true, Number=true})" TextAlign="TextAlign.Right" Width="140"></GridColumn>
                    <GridColumn Field=@nameof(Orders.CustomerID) HeaderText="Customer ID" ValidationRules="@(new ValidationRules{ Required=true})" Width="100">
                        <EditTemplate>
                            <SfAutoComplete TItem="Orders" TValue="string" ID="CustomerID" @bind-Value="@((context as Orders).CustomerID)" DataSource="@GridData">
                                <AutoCompleteFieldSettings Value="CustomerID"></AutoCompleteFieldSettings>
                            </SfAutoComplete>
                        </EditTemplate>
                    </GridColumn>
                    <GridColumn Field=@nameof(Orders.Freight) ValidationRules="@(new ValidationRules{ Required=true, Range = new object[]{1, 1000}})" EditType="EditType.NumericEdit" Format="C2" TextAlign="TextAlign.Right" Width="100"></GridColumn>
                    <GridColumn Field=@nameof(Orders.OrderDate) HeaderText="Order Date" Format="d" Type="ColumnType.DateOnly" TextAlign="TextAlign.Right" Width="140"></GridColumn>
                    <GridColumn Field=@nameof(Orders.OrderTime) HeaderText="Order Time" Type="ColumnType.TimeOnly" TextAlign="TextAlign.Right" Width="140"></GridColumn>
                    <GridColumn Field=@nameof(Orders.ShipCountry) HeaderText="Ship Country" EditType="EditType.DropDownEdit" Width="100"></GridColumn>
                </GridColumns>
            </SfGrid>

        </div>
    </div>
</div>

@code{

    public List<Orders> GridData { get; set; }
    //Hidden:Lines
    private string canonicalURL { get; set; }
    //End:Hidden

    protected override void OnInitialized()
    {
        //Hidden:Lines
        canonicalURL = NavigationManager.Uri.Split("?")[0];
        //End:Hidden
        GridData = Orders.GetAllRecords();
    }
}