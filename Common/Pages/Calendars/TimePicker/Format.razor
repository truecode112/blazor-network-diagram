@page "/TimePicker/Time-Format"

@using Syncfusion.Blazor.Calendars
@using Syncfusion.Blazor.DropDowns
@using System.Collections
@using System

@inherits SampleBaseComponent;
@*Hidden:Lines*@
@inject NavigationManager NavigationManager

<PageTitle>Blazor TimePicker Time Format Example - Syncfusion Demos</PageTitle>

<HeadContent>
    <meta name="description" content="This example demonstrates the Time Format in Blazor TimePicker Component. Explore here for more details." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@
<SampleDescription>
   <p>The TimePicker has been customized with <b>24-hour format</b> with <b>60 minutes interval</b>. Click the TimePicker icon to a select a time from 00:00 to 23:00 from the TimePicker popup.</p>
</SampleDescription>
<ActionDescription>
    <p>TimePicker provides an option to customize the display format of the time value using the
      <a href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Calendars.SfTimePicker-1.html#Syncfusion_Blazor_Calendars_SfTimePicker_1_Format' target='_blank'>Format</a> property. It accepts <a href='https://docs.microsoft.com/en-us/dotnet/standard/base-types/standard-date-and-time-format-strings' target='_blank'>standard</a> &<a href='https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings' target='_blank'> custom date and time format strings</a> as specified in MSDN.
    </p>
</ActionDescription>

<div class="col-lg-12">
    <div class="col-lg-8 control-section sb-property-border">
        <div class="control-wrapper">
            <label class="example-label">Select a Time</label>
            <SfTimePicker TValue="DateTime?" Value="@TimeValue" Step=60 Format="@FormatString" ShowClearButton="true"></SfTimePicker>
        </div>
    </div>
    <div class="col-lg-4">
        <div class='property-panel-section'>
            <div class="property-panel-header">Properties</div>
            <div class="property-panel-content">
                <label class="example-label">Choose a format</label>
                <SfDropDownList TItem="TimeFormat" TValue="string" PopupHeight="230px" @bind-Index="@Index" DataSource="@Formats">
                    <DropDownListEvents TValue="string" TItem="TimeFormat" ValueChange="OnChange"></DropDownListEvents>
                    <DropDownListFieldSettings Text="Text" Value="ID"></DropDownListFieldSettings>
                </SfDropDownList>
            </div>
        </div>
    </div>
</div>

@code {
    private int? Index { get; set; } = 0;
    public DateTime? TimeValue { get; set; } = DateTime.Now;
    //Hidden:Lines
    private string canonicalURL { get; set; }
    protected override void OnInitialized()
    {
        canonicalURL = NavigationManager.Uri.Split("?")[0];
    }
    //End:Hidden
    public class TimeFormat
    {
        public string ID { get; set; }

        public string Text { get; set; }
    }
    public string FormatString { get; set; } = "HH:mm";
    private List<TimeFormat> Formats = new List<TimeFormat>() {
        new TimeFormat(){ ID= "format1", Text= "HH:mm" },
        new TimeFormat(){ ID= "format2", Text= "hh:mm tt" }
     };
    public void OnChange(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string, TimeFormat> args)
    {
        this.FormatString = args.ItemData?.Text;
    }
}

<style>
    .control-section {
        min-height: 370px;
    }

    .control-wrapper {
        max-width: 200px;
        margin: 0 auto;
        padding: 50px 0px 0px;
    }
    
    .example-label {
        font-size: 14px;
        margin-bottom: 6px;
    }

    .property-panel-content {
        padding: 0px 0px 15px 0px;
    }

    .property-panel-content:last-child {
        padding: 0px 0px 40px 0px;
    }
</style>