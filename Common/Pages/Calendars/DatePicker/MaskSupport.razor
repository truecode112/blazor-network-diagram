@page "/DatePicker/MaskSupport"

@using Syncfusion.Blazor.Calendars
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Inputs

@inherits SampleBaseComponent;
@*Hidden:Lines*@
@inject NavigationManager NavigationManager

<PageTitle>Blazor DatePicker Mask Support Example - Syncfusion Demos</PageTitle>

<HeadContent>
    <meta name="description" content="This example demonstrates the Mask Support in Blazor DatePicker Component. Explore here for more details." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@
<SampleDescription>
   <p> In this sample demonstrates the Date masking functionality in the DatePicker. It allows you to enter a valid value for each mask pattern of the Date masking.</p>
</SampleDescription>
<ActionDescription>
    <p> DatePicker has an <b>EnableMask</b> property that allows you to enable the Date masking support. The mask pattern is defined based on the provided Date format to the component. If the <a href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Calendars.DatePickerModel.html#Syncfusion_Blazor_Calendars_DatePickerModel_Format' target='_blank'> Format</a> is not specified, the mask pattern is formed based on the default format of the current culture.</p>
</ActionDescription>

<div class="col-lg-12">
    <div class="col-lg-8 control-section sb-property-border">
        <div class="control-wrapper">
            <label class="example-label">Departure Date</label>
            <SfDatePicker TValue="DateTime?" CssClass="@CssClass" Width="350px" @bind-Value="@DateValue" EnableMask=true Format="@FormatString" StrictMode=true ShowClearButton="true">
                <DatePickerMaskPlaceholder Day="day" Month="month" Year="year"></DatePickerMaskPlaceholder>
            </SfDatePicker>
        </div>
    </div>
    <div class="col-lg-4">
        <div class='property-panel-section'>
            <div class="property-panel-header">Properties</div>
            <div class="property-panel-content">
                <label class="example-label">Choose a format</label>
                <SfDropDownList TItem="DateFormat" TValue="string" PopupHeight="230px" @bind-Index="@Index" DataSource="@Formats">
                    <DropDownListEvents TItem="DateFormat" TValue="string" ValueChange="OnChange"></DropDownListEvents>
                    <DropDownListFieldSettings Text="Text" Value="ID"></DropDownListFieldSettings>
                </SfDropDownList>
            </div>
        </div>
    </div>
</div>

<style>
    .control-wrapper {
        max-width: 250px;
        margin: 0 auto;
        padding: 50px 0px 0px;
    }
    
    .example-label {
        font-size: 14px;
        margin-bottom: 6px;
    }

    .property-panel-content {
        padding: 0px 0px 15px 0px;
    }

    .property-panel-content:last-child {
        padding: 0px 0px 40px 0px;
    }
</style>

@code {
    private int? Index { get; set; } = 0;
    public DateTime? DateValue { get; set; } = new DateTime(DateTime.Now.Year, DateTime.Now.Month, 10);
    private string textValue { get; set; }
    public string CssClass { get; set; } = "e-popup-expand";
    //Hidden:Lines
    private string canonicalURL { get; set; }
    protected override void OnInitialized()
    {
        canonicalURL = NavigationManager.Uri.Split("?")[0];
    }
    //End:Hidden
    public class DateFormat
    {
        public string ID { get; set; }

        public string Text { get; set; }
    }
    public string FormatString { get; set; } = "d";
    private List<DateFormat> Formats = new List<DateFormat>() {
        new DateFormat(){ ID= "d", Text= "Short Date" },
        new DateFormat(){ ID= "M", Text= "Month Day" },
        new DateFormat(){ ID= "D", Text= "Long Date" },
        new DateFormat(){ ID= "Y", Text= "Year Month" }
     };
    public void OnChange(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string, DateFormat> args)
    {
        this.FormatString = args.ItemData?.ID;
    }
}
