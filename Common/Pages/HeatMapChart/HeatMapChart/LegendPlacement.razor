@page "/heatmap-chart/legend-placement"

@using Syncfusion.Blazor
@using Syncfusion.Blazor.HeatMap
@using Syncfusion.Blazor.DropDowns
@using sf_blazor_heatmapdata
@using SFHeatMap = Syncfusion.Blazor.HeatMap
@inherits SampleBaseComponent;
@inject NavigationManager NavigationManager
@*Hidden:Lines*@
<PageTitle>Blazor HeatMap Chart Legend Placement Example - Syncfusion Demos</PageTitle>
<HeadContent>
    <meta name="description" content="This example demonstrates the Legend Placement in Blazor HeatMap Chart Component. Explore here for more details." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@

<SampleDescription>
    <p>This sample visualizes the hourly weather forecast for some major European cities. The data label is disabled in this sample, and the Tooltip displays the data point values.</p>
</SampleDescription>
<ActionDescription>
  <p>In this example, you can see how to change the display position of the Heatmap Legend. You can change the display position of Legend to <code>left</code>, <code>right</code>, <code>bottom</code>, and <code>top</code> by using the <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.HeatMap.HeatMapLegendSettings.html#Syncfusion_Blazor_HeatMap_HeatMapLegendSettings_Position'>Position</a> property in <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.HeatMap.HeatMapLegendSettings.html'>HeatMapLegendSettings</a>.</p>
  <p>The Tooltip is enabled in this example. To see the tooltip in action, hover a point or tap on a point in touch-enabled devices. </p> 
</ActionDescription>

<div class="col-lg-9 control-section">
    <div class="row">
        <SfHeatMap DataSource="@DataSource" Theme="@theme">
            <HeatMapTitleSettings Text="Hourly Weather Forecast (in Celsius)">
                <HeatMapTitleTextStyle Size="15px" FontWeight="500" FontStyle="Normal"></HeatMapTitleTextStyle>
            </HeatMapTitleSettings>
            <HeatMapXAxis Labels="@XLabels"
                          LabelRotation="45"
                          LabelIntersectAction="@SFHeatMap.LabelIntersectAction.None">
            </HeatMapXAxis>
            <HeatMapYAxis Labels="@YLabels"></HeatMapYAxis>
            <HeatMapPaletteSettings>
                <HeatMapPalettes>
                    <HeatMapPalette Value="0" Color="#6EB5D0"></HeatMapPalette>
                    <HeatMapPalette Value="10" Color="#7EDCA2"></HeatMapPalette>
                    <HeatMapPalette Value="19" Color="#DCD57E"></HeatMapPalette>
                    <HeatMapPalette Value="22" Color="#DCD57E"></HeatMapPalette>
                </HeatMapPalettes>
            </HeatMapPaletteSettings>
            <HeatMapCellSettings ShowLabel="false" Format="{value} C"></HeatMapCellSettings>
            <HeatMapLegendSettings Position="@CurrentLegentPosition">
                <HeatMapLegendTitle Text="Celsius"></HeatMapLegendTitle>
            </HeatMapLegendSettings>
        </SfHeatMap>
    </div>
</div>
<div class="col-lg-3 property-section">
    <div><h5>Legend Placement</h5></div>
    <SfDropDownList TValue="string" TItem="DataModel" PopupHeight="230px" @bind-Index="@index" Placeholder="Select the Legend Placement" DataSource="@LegendPlacements">
        <DropDownListEvents TValue="string" TItem="DataModel" ValueChange="@(e => { Enum.TryParse<SFHeatMap.LegendPosition>(e.ItemData.Text, out CurrentLegentPosition); })"></DropDownListEvents>
        <DropDownListFieldSettings Text="Text" Value="Id"></DropDownListFieldSettings>
    </SfDropDownList>
</div>

@code{
    //Hidden:Lines
    private string canonicalURL { get; set; }
    //End:Hidden
    private Theme theme { get; set; }
    private int? index { get; set; } = 0;
    SFHeatMap.LegendPosition CurrentLegentPosition = SFHeatMap.LegendPosition.Left;
    string[] XLabels = new string[] { "London", "Berlin", "Madrid", "Paris", "Rome", "Lisbon", "Dublin" };
    string[] YLabels = new string[] { "12AM", "2AM", "4AM", "6AM", "8AM", "10AM", "12PM", "2PM", "4PM", "6PM", "8PM", "10PM" };
    int[,] DataSource = HeatMapData.GetLegendData();
    List<DataModel> LegendPlacements = new List<DataModel>();
    protected override void OnInitialized()
    {
        base.OnInitialized();
        //Hidden:Lines
        canonicalURL = NavigationManager.Uri.Split("?")[0];
        //End:Hidden
        LegendPlacements.Add(new DataModel { Id = "0", Text = "Left" });
        LegendPlacements.Add(new DataModel { Id = "1", Text = "Right" });
        LegendPlacements.Add(new DataModel { Id = "2", Text = "Top" });
        LegendPlacements.Add(new DataModel { Id = "3", Text = "Bottom" });
        theme = HeatmapThemeHelper.GetCurrentHeatmapTheme(NavigationManager.Uri);
    }
    class DataModel
    {
        public string Id { get; set; }
        public string Text { get; set; }
    }
}
<style>
    .col-lg-3.property-section {
        padding-top: 60px;
    }    
</style>