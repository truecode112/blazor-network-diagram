@page "/linear-gauge/step-progress-bar"

@using Syncfusion.Blazor
@using Syncfusion.Blazor.LinearGauge
@using ThemeHelper
@inject NavigationManager NavigationManager
@inherits SampleBaseComponent;
@*Hidden:Lines*@
<PageTitle>Blazor Linear Gauge Step Progress Bar Example - Syncfusion Demos</PageTitle>
<HeadContent>
    <meta name="description" content="This example demonstrates the Step Progress Bar in Blazor Linear Gauge Component. Explore here for more details." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@

<SampleDescription>
    <p>This sample shows a linear gauge that resembles a step progress bar component and indicates shipment status.</p>
</SampleDescription>
<ActionDescription>
    <p>In this example, you can see how to render and configure a new step progress bar component using the linear gauge. This can be accomplished by combining axis, multiple pointers, and multiple ranges.</p>
    <p>More information on the linear gauge can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/linear-gauge/getting-started'>documentation section</a>.</p>
</ActionDescription>

<div class="control-section">
    <SfLinearGauge Orientation="Orientation.Horizontal" Theme="@Theme" Background="transparent">
        <LinearGaugeEvents AxisLabelRendering="AxisLabelChange" />
        <LinearGaugeAxes>
            <LinearGaugeAxis Minimum="5" Maximum="20" OpposedPosition="true">
                <LinearGaugeLine Width="5" />
                <LinearGaugeMajorTicks Height="0" />
                <LinearGaugeMinorTicks Height="0" />
                <LinearGaugeAxisLabelStyle Offset="10">
                    <LinearGaugeAxisLabelFont FontFamily="inherit" Size="16px" />
                </LinearGaugeAxisLabelStyle>
                <LinearGaugePointers>
                    <LinearGaugePointer PointerValue="5" Height="25" Width="25" Placement="Placement.Near" MarkerType="MarkerType.Image" ImageUrl="@(SampleService.WebAssetsPath + "images/linear-gauge/tick-icon.png")"  />
                    <LinearGaugePointer PointerValue="10" Height="25" Width="25" Placement="Placement.Near" MarkerType="MarkerType.Image" ImageUrl="@(SampleService.WebAssetsPath + "images/linear-gauge/tick-icon.png")" />
                    <LinearGaugePointer PointerValue="15" Height="25" Width="25" Placement="Placement.Near" MarkerType="MarkerType.Image" ImageUrl="@(SampleService.WebAssetsPath + "images/linear-gauge/tick-icon.png")" />
                    <LinearGaugePointer PointerValue="20" Height="25" Width="15" Placement="Placement.Center" Position="Position.Cross" Color="#D1D9DD" MarkerType="MarkerType.Circle" Offset="-2" />
                </LinearGaugePointers>
                <LinearGaugeRanges>
                    <LinearGaugeRange Start="5" End="10" StartWidth="5" EndWidth="5" Color="#1FAC8A" />
                    <LinearGaugeRange Start="10" End="15" StartWidth="5" EndWidth="5" Color="#1FAC8A" />
                    <LinearGaugeRange Start="15" End="20" StartWidth="5" EndWidth="5" Color="#D1D9DD" />
                </LinearGaugeRanges>
            </LinearGaugeAxis>
        </LinearGaugeAxes>
    </SfLinearGauge>
</div>
@code {
    public Theme Theme { get; set; }
    //Hidden:Lines
    private string canonicalURL { get; set; }
    //End:Hidden

    private void AxisLabelChange(AxisLabelRenderEventArgs args)
    {
        if (args.Text == "5")
            args.Text = "Ordered";
        else if (args.Text == "10")
            args.Text = "Packed";
        else if (args.Text == "15")
            args.Text = "Shipped";
        else if (args.Text == "20")
            args.Text = "Delivered";
        else
            args.Text = " ";
    }

    protected override void OnInitialized()
    {
        //Hidden:Lines
        canonicalURL = NavigationManager.Uri.Split("?")[0];
        //End:Hidden
        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
    }
}