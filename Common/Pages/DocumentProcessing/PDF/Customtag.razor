@page "/pdf/custom-tag"
@inject Microsoft.JSInterop.IJSRuntime JS
@using System.IO
@using Syncfusion.Blazor.Buttons
@inject HttpClient Http
@inherits SampleBaseComponent;
@*Hidden:Lines*@

@using BlazorDemos.Data.FileFormats.PDF

@*End:Hidden*@
@*Hidden:Lines*@
@inject NavigationManager NavigationManager
<PageTitle>Blazor PDF Library - Customtag Example - Syncfusion Demos</PageTitle>
<HeadContent>
    <meta name="description" content="This sample demonstrates how to create tagged PDF or accessible PDF from the scratch with custom tags." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@

<SampleDescription>
    <p style="font-size:16px">This sample demonstrates how to create tagged PDF or accessible PDF from the scratch with custom tags.</p>
</SampleDescription>
<ActionDescription>
    <p style="font-size:16px">This feature can be used for the people who require assistive technologies when the electronic content is ready. The Essential PDF supports creating tagged PDF with Section 508 compliant. More information about the tagged PDF can be found in this documentation <a target='_blank'
href='https://help.syncfusion.com/file-formats/pdf/working-with-tagged-pdf?_ga=2.212929108.1703522802.1584005056-1302582622.1556169414'>section.</a></p>
</ActionDescription>

<div class="control-section">
    <p style="font-size:16px">Click the button to view a PDF document generated by Essential PDF. Please note that Adobe Reader or its equivalent is required to view the resultant document. </p>
   
    <div class="button-section">
        <div id="button-control">
            <div class="row">
                <div>
                    <SfButton @onclick="GeneratePDF">Create Custom Tag</SfButton>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .radio-control {
        margin: 0 0 5% 0;
    }    

    .control-section .row {
        margin: 10px 0;
    }
</style>

@code {
    
    //Hidden:Lines
    private string canonicalURL { get; set; }

    protected override void OnInitialized()
    {
        canonicalURL = NavigationManager.Uri.Split("?")[0];
    }
    //End:Hidden
    /// <summary>
    /// Create and download the simple PDF document
    /// </summary>
    public async void GeneratePDF(MouseEventArgs args)
    {	   
        Dictionary<string, MemoryStream> fileData = new Dictionary<string, MemoryStream>();
        string fileDataPath = NavigationManager.BaseUri + SampleService.WebAssetsPath;
        byte[] data = await Http.GetByteArrayAsync(fileDataPath + "data/pdf/custom-tag.jpg");
        fileData.Add("custom-tag.jpg", new MemoryStream(data));
        data = await Http.GetByteArrayAsync(fileDataPath + "data/pdf/arial.ttf");
        fileData.Add("arial.ttf", new MemoryStream(data));
        CustomtagService service = new CustomtagService(fileData);
        MemoryStream documentStream = service.CreatePdfDocument();
        service.Close();
        await JS.SaveAs("Customtag.pdf", documentStream.ToArray());        
    }
}