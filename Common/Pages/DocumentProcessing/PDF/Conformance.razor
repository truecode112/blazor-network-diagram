@page "/pdf/conformance"
@inject Microsoft.JSInterop.IJSRuntime JS
@using System.IO
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.DropDowns
@inject HttpClient Http
@inherits SampleBaseComponent;
@*Hidden:Lines*@

@using BlazorDemos.Data.FileFormats.PDF

@*End:Hidden*@
@*Hidden:Lines*@
@inject NavigationManager NavigationManager
<PageTitle>Blazor PDF Library - PDF Conformance Example - Syncfusion Demos</PageTitle>
<HeadContent>
    <meta name="description" content="This sample demonstrates various PDF conformance support in Essential PDF." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@

<SampleDescription>
    <p style="font-size:16px">This sample demonstrates various PDF conformance support in Essential PDF</p>
</SampleDescription>
<ActionDescription>
   <p style="font-size:16px">This feature can be used for reviewing purpose. More information about the PDF conformance can be found in this documentation <a target='_blank' href='https://help.syncfusion.com/file-formats/pdf/working-with-pdf-conformance'>section.</a></p>
</ActionDescription>

<div class="control-section">
    <p style="font-size:16px">Click the button to view a PDF document generated by Essential PDF. Please note that Adobe Reader or its equivalent is required to view the resultant document. </p>
    <div class="dropdown-control">
        <table>
            <tr>
                <td>
                    <h5 class="row" style="font-size:16px">Please select the conformance : </h5>
                </td>
                <td>
                    <div class="drop-control" style="margin-left:4px; width:230px">
                        <SfDropDownList TItem="string" TValue="string" PopupHeight="230px" Placeholder="PDF/A-1a" @bind-Value="@DropVal" DataSource="@ConformanceLevel">
                        </SfDropDownList>
                    </div>
                </td>
            </tr>
        </table>
    </div>
    <div class="button-section">
        <div id="button-control">
            <div class="row">
                <div>
                    <SfButton @onclick="GeneratePDF">Create Conformance PDF</SfButton>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .radio-control {
        margin: 0 0 5% 0;
    }

    .control-section .row {
        margin: 10px 0;
    }
</style>


@code {
    public string DropVal { get; set; }
    List<string> ConformanceLevel = new List<string>() { "PDF/A-1a", "PDF/A-1b", "PDF/A-2a", "PDF/A-2b", "PDF/A-2u", "PDF/A-3a", "PDF/A-3b", "PDF/A-3u", "PDF/A-4", "PDF/A-4e", "PDF/A-4f" };
    //Hidden:Lines
    private string canonicalURL { get; set; }

    protected override void OnInitialized()
    {
        canonicalURL = NavigationManager.Uri.Split("?")[0];
    }
    //End:Hidden
    /// <summary>
    /// Create and download the simple PDF document
    /// </summary>
    public async void GeneratePDF(MouseEventArgs args)
    {
        Dictionary<string, MemoryStream> fileData = new Dictionary<string, MemoryStream>();
        string fileDataPath = NavigationManager.BaseUri + SampleService.WebAssetsPath;
        byte[] data = await Http.GetByteArrayAsync(fileDataPath + "data/pdf/pdf-a.rtf");
        fileData.Add("PDF_A.rtf", new MemoryStream(data));
        data = await Http.GetByteArrayAsync(fileDataPath + "data/pdf/arial.ttf");
        fileData.Add("arial.ttf", new MemoryStream(data));
        data = await Http.GetByteArrayAsync(fileDataPath + "data/pdf/adventure-cycle.jpg");
        fileData.Add("adventure-cycle.jpg", new MemoryStream(data));
        ConformanceService service = new ConformanceService(fileData);
        MemoryStream documentStream = service.CreatePdfDocument(DropVal);
        service.Close();
        await JS.SaveAs("Conformance.pdf", documentStream.ToArray());
    }
}