@page "/pdf/interactive-features"
@inject Microsoft.JSInterop.IJSRuntime JS
@using System.IO
@using Syncfusion.Blazor.Buttons
@inject HttpClient Http
@inherits SampleBaseComponent;
@*Hidden:Lines*@

@using BlazorDemos.Data.FileFormats.PDF

@*End:Hidden*@
@*Hidden:Lines*@
@inject NavigationManager NavigationManager
<PageTitle>Blazor PDF Library - Interactive Features Example - Syncfusion Demos</PageTitle>
<HeadContent>
    <meta name="description" content="This sample demonstrates the creation of interactive invoice with attachment, product total price calculation based on the quantity using PDF JavaScript." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@

<SampleDescription>
   <p style="font-size:16px">This sample demonstrates the creation of interactive invoice with <a target='_blank' href='https://help.syncfusion.com/file-formats/pdf/working-with-attachments'>
attachment</a> and product total price calculation based on the quantity using <a target='_blank' href='https://help.syncfusion.com/file-formats/pdf/working-with-action#javascript-action'> PDF JavaScript</a>.</p>
</SampleDescription>
<ActionDescription>
   <p style="font-size:16px">This example can be used in the real-time invoice generation with print, submit online, or mail the order functionalities.</p>
</ActionDescription>

<div class="control-section">
    <p style="font-size:16px">Click the button to view a PDF document generated by Essential PDF. Please note that Adobe Reader or its equivalent is required to view the resultant document. </p>

    <div class="button-section">
        <div id="button-control">
            <div class="row">
                <div>
                    <SfButton @onclick="GeneratePDF">Generate PDF</SfButton>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .radio-control {
        margin: 0 0 5% 0;
    }

    .control-section .row {
        margin: 10px 0;
    }
</style>

@code {

    //Hidden:Lines
    private string canonicalURL { get; set; }

    protected override void OnInitialized()
    {
        canonicalURL = NavigationManager.Uri.Split("?")[0];
    }
    //End:Hidden
    /// <summary>
    /// Create and download the simple PDF document
    ///<summary>
    protected async void GeneratePDF(MouseEventArgs args)
    {
        Dictionary<string, MemoryStream> fileData = new Dictionary<string, MemoryStream>();
        string fileDataPath = NavigationManager.BaseUri + SampleService.WebAssetsPath;
        byte[] data = await Http.GetByteArrayAsync(fileDataPath + "data/pdf/adventure-cycle.jpg");
        fileData.Add("adventure-cycle.jpg", new MemoryStream(data));
        data = await Http.GetByteArrayAsync(fileDataPath + "data/pdf/adventure-work-cycle.xml");
        fileData.Add("adventure-work-cycle.xml", new MemoryStream(data));
        data = await Http.GetByteArrayAsync(fileDataPath + "data/pdf/product-catalog.pdf");
        fileData.Add("product-catalog.pdf", new MemoryStream(data));
        InteractiveFeaturesService service = new InteractiveFeaturesService(fileData);
        MemoryStream documentStream = service.CreatePdfDocument();
        service.Close();
        await JS.SaveAs("InteractiveFeatures.pdf", documentStream.ToArray());
    }
}
