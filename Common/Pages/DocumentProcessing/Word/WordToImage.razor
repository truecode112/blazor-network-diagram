@page "/word/word-to-image"
@inject Microsoft.JSInterop.IJSRuntime JS
@using System.IO
@using Syncfusion.Blazor.Buttons
@using BlazorDemos.Data.DocumentProcessing.Word
@inherits SampleBaseComponent;
@inject HttpClient Http
@*Hidden:Lines*@
@inject NavigationManager NavigationManager
<PageTitle>Blazor Word (DocIO) Library - Word to Image Example - Syncfusion Demos</PageTitle>
<HeadContent>
    <meta name="description" content="This sample illustrates how to convert Word document to Image using Essential DocIO." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@

<SampleDescription>
    <p style="font-size:16px"> This sample illustrates how to convert Word document to Image using Essential DocIO.</p>
</SampleDescription>
<ActionDescription>
    <p style="font-size:16px">DocIO provides support to render Word document from flow to fixed page model and export as Image. With this support to render Word document,</p>
    <p><ul style="font-size:16px"><li>You can generate invoice and other reports in Image, starting from Word document.</li><li>You can view or print the contents of Word document by converting as Image.</li><li>You can save a page of the document as thumbnail image for reference.</li></ul></p>
    <p style="font-size:16px">More information about Word to Image conversion can be found in this <a href="https://help.syncfusion.com/file-formats/docio/word-to-image">documentation</a> section.</p>
</ActionDescription>

<div class="control-section">
    <p style="font-size:16px">Click the button to view the resultant Image being converted from Word document using Essential DocIO. In this example, we have converted only the first page of the Word document into an image. Also, you can convert entire Word document as Images using Essential DocIO.</p>
    <div class="button-section">
        <div id="button-control">
            <div class="row">
                <div>
                    <SfButton @onclick="ViewTemplate">View Template</SfButton>&nbsp;
                    <SfButton @onclick="ConvertImage">Convert to Image</SfButton>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .control-section .row {
        margin: 10px 0;
    }
</style>

@code {
    MemoryStream documentStream;
    //Hidden:Lines
    private string canonicalURL { get; set; }
    Dictionary<string, MemoryStream> fileData = new Dictionary<string, MemoryStream>();
    protected override void OnInitialized()
    {
        canonicalURL = NavigationManager.Uri.Split("?")[0];
    }
    //End:Hidden

    /// <summary>
    /// Create and download the simple Word document
    /// </summary>
    public async Task ConvertImage(MouseEventArgs args)
    {
        await LoadTemplate();
        WordToImageService service = new WordToImageService(fileData);
        documentStream = service.WordToImage("Generate Image");
        service.Close();
        await JS.SaveAs("WordToImage_Page1.jpeg", documentStream.ToArray());
    }
    /// <summary>
    /// Create and download the template Word document
    /// </summary>
    public async Task ViewTemplate(MouseEventArgs args)
    {
        await LoadTemplate();
        WordToImageService service = new WordToImageService(fileData);
        documentStream = service.WordToImage("View Template");
        service.Close();
        await JS.SaveAs("WordToImage.docx", documentStream.ToArray());
    }
    /// <summary>
    /// Load the template document
    /// </summary>
    public async Task LoadTemplate()
    {
        if (fileData != null && fileData.Count == 0)
        {
            string fileDataPath = NavigationManager.BaseUri + SampleService.WebAssetsPath;
            byte[] data = await Http.GetByteArrayAsync(fileDataPath + "data/word/word-to-image.docx");
            fileData.Add("word-to-image.docx", new MemoryStream(data));
        }
    }
}