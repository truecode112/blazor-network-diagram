@page "/powerpoint/ole-object"
@inject Microsoft.JSInterop.IJSRuntime JS
@using System.IO
@using Syncfusion.Blazor.Buttons
@inject HttpClient Http
@using BlazorDemos.Data.DocumentProcessing.PowerPoint
@inherits SampleBaseComponent;
@*Hidden:Lines*@
@inject NavigationManager NavigationManager
<PageTitle>Blazor PowerPoint (Presentation) Library - OLE Object Example - Syncfusion Demos</PageTitle>
<HeadContent>
    <meta name="description" content="This sample demonstrates how to insert and open a OLE Object in PowerPoint presentation." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@

<SampleDescription>
   <p style="font-size:16px">This sample demonstrates how to insert and open an OLE Object in a PowerPoint presentation.</p> 
</SampleDescription>
<ActionDescription>
  <b style="font-size:16px">Features:</b>
    <br />
    <ul style="font-size:16px">
			<li>Add new OLE Object into a PowerPoint slide.</li>
            <li>Extract a embedded OLE Object data.</li>
            <li>Gets the file path of a linked OLE Object.</li>
			<li>Gets the file name of a OLE Object.</li>
    </ul>
    <br /> 
</ActionDescription>

<div class="control-section">
    <p style="font-size:16px">Click the button to view a PowerPoint presentation generated by Essential Presentation. Please note that Microsoft PowerPoint viewer or its equivalent is required to view the resultant document.</p>
        
    <div class="button-section">
        <div id="button-control">
            <div class="row">
                <div>
                    <SfButton @onclick="InsertOleObject">Create Presentation</SfButton>
                </div>
            </div>
        </div>
    </div>
	<p style="font-size:16px">Click the button to view a embedded OLE document opened by Essential Presentation. Please note that Microsoft Word is required to view the embedded Docx document.</p>
        
    <div class="button-section">
        <div id="button-control">
            <div class="row">
                <div>
                    <SfButton @onclick="ExtractOleObject">Open Embedded File</SfButton>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .control-section .row {
        margin: 10px 0;
    }
</style>

@code {
    MemoryStream documentStream;
    //Hidden:Lines
    private string canonicalURL { get; set; }
    Dictionary<string, MemoryStream> fileData = new Dictionary<string, MemoryStream>();
    protected override void OnInitialized()
    {
        canonicalURL = NavigationManager.Uri.Split("?")[0];
    }
    //End:Hidden

    /// <summary>
    /// Create and download the Presentation document
    /// </summary>
    public async Task ExtractOleObject(MouseEventArgs args)
    {
        await LoadTemplate();
        OLEObjectService service = new OLEObjectService(fileData);
        documentStream = service.ExtractOleObject();
        service.Close();
        await JS.SaveAs("ExtractedOleObject.docx", documentStream.ToArray());       
    }
	
    /// <summary>
    /// Create and download the Presentation document
    /// </summary>
    public async Task InsertOleObject(MouseEventArgs args)
    { 
        await LoadTemplate();
        OLEObjectService service = new OLEObjectService(fileData);
        documentStream = service.InsertOleObject();
        service.Close();
        await JS.SaveAs("InsertOLEObject.pptx", documentStream.ToArray());       
    }
    /// <summary>
    /// Load the template document
    /// </summary>
    public async Task LoadTemplate()
    {
        if (fileData != null && fileData.Count == 0)
        {
            string fileDataPath = NavigationManager.BaseUri + SampleService.WebAssetsPath;
            byte[] data = await Http.GetByteArrayAsync(fileDataPath + "data/powerpoint/ole-template.docx");
            fileData.Add("ole-template.docx", new MemoryStream(data));
            data = await Http.GetByteArrayAsync(fileDataPath + "images/powerpoint/ole-picture.png");
            fileData.Add("ole-picture.png", new MemoryStream(data));
            data = await Http.GetByteArrayAsync(fileDataPath + "data/powerpoint/embedded-ole-object.pptx");
            fileData.Add("embedded-ole-object.pptx", new MemoryStream(data));
    
        }
    }
}