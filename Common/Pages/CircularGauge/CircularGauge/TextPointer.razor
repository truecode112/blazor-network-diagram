@page "/circular-gauge/text-pointer"

@using Syncfusion.Blazor
@using Syncfusion.Blazor.CircularGauge;
@using ThemeHelper
@inject NavigationManager NavigationManager
@inherits SampleBaseComponent;
@*Hidden:Lines*@
<PageTitle>Blazor Circular Gauge Text Pointer Example - Syncfusion Demos</PageTitle>
<HeadContent>
    <meta name="description" content="This example demonstrates the Text Pointer in Blazor Circular Gauge Component. Explore here for more details." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@

<SampleDescription>
    <p>This sample visualizes the performance outcome of a work using the text pointer in the circular gauge.</p>
</SampleDescription>
<ActionDescription>
    <p>In this example, you can see how to use a text to customize the pointer in the circular gauge. The text can be added to the circular gauge's pointer primarily through the use of the <code>Type</code>, <code>MarkerShape</code>, and <code>Text</code> properties in the <a target='_blank' class='code' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.CircularGauge.CircularGaugePointer.html'>CircularGaugePointer</a>.</p>
    <p>More information on the pointers can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/circular-gauge/pointers'>documentation section</a>.</p>
</ActionDescription>

<div class="control-section">
    <SfCircularGauge Theme="@Theme" CenterY="75%" Background="transparent">
        <CircularGaugeAxes>
            <CircularGaugeAxis EndAngle="90" StartAngle="270" Radius="120%" Minimum="0" Maximum="120" RangeGap="3">
                <CircularGaugeAxisLineStyle Width="0" />
                <CircularGaugeAxisMajorTicks Width="0" />
                <CircularGaugeAxisMinorTicks Width="0" />
                <CircularGaugeRanges>
                    <CircularGaugeRange Start="0" End="20" Radius="80%" StartWidth="85" EndWidth="85" Color="#dd3800" />
                    <CircularGaugeRange Start="20.5" End="40" Radius="80%" StartWidth="85" EndWidth="85" Color="#ff4100" />
                    <CircularGaugeRange Start="40.5" End="60" Radius="80%" StartWidth="85" EndWidth="85" Color="#ffba00" />
                    <CircularGaugeRange Start="60.5" End="80" Radius="80%" StartWidth="85" EndWidth="85" Color="#ffdf10" />
                    <CircularGaugeRange Start="80.5" End="100" Radius="80%" StartWidth="85" EndWidth="85" Color="#8be724" />
                    <CircularGaugeRange Start="100.5" End="120" Radius="80%" StartWidth="85" EndWidth="85" Color="#64be00" />
                </CircularGaugeRanges>
                <CircularGaugeAxisLabelStyle>
                    <CircularGaugeAxisLabelFont Size="0" />
                </CircularGaugeAxisLabelStyle>
                <CircularGaugePointers>
                    <CircularGaugePointer Value="82" PointerWidth="10" Radius="60%" NeedleStartWidth="1" NeedleEndWidth="1">
                        <CircularGaugePointerAnimation Enable="false" />
                        <CircularGaugeCap Radius="0" />
                    </CircularGaugePointer>
                    <CircularGaugePointer Value="20" Radius="85%" Type="PointerType.Marker" MarkerShape="GaugeShape.Text" Text="Poor">
                        <MarkerTextStyle Size="18px" FontFamily="inherit" />
                        <CircularGaugePointerAnimation Enable="false" />
                    </CircularGaugePointer>
                    <CircularGaugePointer Value="60" Radius="85%" Type="PointerType.Marker" MarkerShape="GaugeShape.Text" Text="Average">
                        <MarkerTextStyle Size="18px" FontFamily="inherit" />
                        <CircularGaugePointerAnimation Enable="false" />
                    </CircularGaugePointer>
                    <CircularGaugePointer Value="100" Radius="85%" Type="PointerType.Marker" MarkerShape="GaugeShape.Text" Text="Good">
                        <MarkerTextStyle Size="18px" FontFamily="inherit" />
                        <CircularGaugePointerAnimation Enable="false" />
                    </CircularGaugePointer>
                </CircularGaugePointers>
            </CircularGaugeAxis>
        </CircularGaugeAxes>
    </SfCircularGauge>
</div>

@code {
    public Theme Theme { get; set; }
    //Hidden:Lines
    private string canonicalURL { get; set; }
    //End:Hidden

    protected override void OnInitialized()
    {
        //Hidden:Lines
        canonicalURL = NavigationManager.Uri.Split("?")[0];
        //End:Hidden
        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
    }
}