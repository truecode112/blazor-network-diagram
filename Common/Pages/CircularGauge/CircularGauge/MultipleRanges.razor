@page "/circular-gauge/multiple-ranges"

@using Syncfusion.Blazor
@using Syncfusion.Blazor.CircularGauge
@using ThemeHelper
@inject NavigationManager NavigationManager
@inherits SampleBaseComponent;
@*Hidden:Lines*@
<PageTitle>Blazor Circular Gauge Multiple Ranges Example - Syncfusion Demos</PageTitle>
<HeadContent>
    <meta name="description" content="This example demonstrates the Multiple Ranges in Blazor Circular Gauge Component. Explore here for more details." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@

<SampleDescription>
    <p>This sample shows temperature variations in a circular gauge using multiple ranges. In addition, the needle pointer and annotation help in displaying the temperature that has been measured.</p>
</SampleDescription>
<ActionDescription>
    <p>In this example, you can see how to render and configure multiple ranges in the circular gauge. The <a target='_blank' class='code' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.CircularGauge.CircularGaugeRanges.html'>CircularGaugeRanges</a> collection can be used to define multiple ranges, each of which points to a different start and end value.</p>
    <p>More information on the ranges can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/circular-gauge/ranges'>documentation section</a>.</p>
</ActionDescription>

<div class="control-section">
    <SfCircularGauge Theme="@Theme" Background="transparent">
        <CircularGaugeTitleStyle Size="18px" FontFamily="inherit" />
        <CircularGaugeAxes>
            <CircularGaugeAxis StartAngle="230" EndAngle="130" Radius="90%" Minimum="-30" Maximum="120">
                <CircularGaugeAxisLineStyle Width="0" />
                <CircularGaugeAxisMajorTicks Width="0" Interval="10" />
                <CircularGaugeAxisMinorTicks Width="0" />
                <CircularGaugeAxisLabelStyle Position="Position.Inside" AutoAngle="true" Offset="50">
                    <CircularGaugeAxisLabelFont FontFamily="inherit"></CircularGaugeAxisLabelFont>
                </CircularGaugeAxisLabelStyle>
                <CircularGaugeRanges>
                    <CircularGaugeRange Start="-30" End="-20" StartWidth="35" EndWidth="35" Radius="90%" Color="#58ABD5" />
                    <CircularGaugeRange Start="-20" End="-10" StartWidth="35" EndWidth="35" Radius="90%" Color="#58ABD5" />
                    <CircularGaugeRange Start="-10" End="0" StartWidth="35" EndWidth="35" Radius="90%" Color="#58ABD5" />
                    <CircularGaugeRange Start="0" End="10" StartWidth="35" EndWidth="35" Radius="90%" Color="#58D2D5" />
                    <CircularGaugeRange Start="10" End="20" StartWidth="35" EndWidth="35" Radius="90%" Color="#9DD55A" />
                    <CircularGaugeRange Start="20" End="30" StartWidth="35" EndWidth="35" Radius="90%" Color="#9DD55A" />
                    <CircularGaugeRange Start="30" End="40" StartWidth="35" EndWidth="35" Radius="90%" Color="#F1D158" />
                    <CircularGaugeRange Start="40" End="50" StartWidth="35" EndWidth="35" Radius="90%" Color="#F48C6F" />
                    <CircularGaugeRange Start="50" End="60" StartWidth="35" EndWidth="35" Radius="90%" Color="#F48C6F" />
                    <CircularGaugeRange Start="60" End="70" StartWidth="35" EndWidth="35" Radius="90%" Color="#F48C6F" />
                    <CircularGaugeRange Start="70" End="80" StartWidth="35" EndWidth="35" Radius="90%" Color="#F48C6F" />
                    <CircularGaugeRange Start="80" End="90" StartWidth="35" EndWidth="35" Radius="90%" Color="#F48C6F" />
                    <CircularGaugeRange Start="90" End="100" StartWidth="35" EndWidth="35" Radius="90%" Color="#F48C6F" />
                    <CircularGaugeRange Start="100" End="110" StartWidth="35" EndWidth="35" Radius="90%" Color="#F48C6F" />
                    <CircularGaugeRange Start="110" End="120" StartWidth="35" EndWidth="35" Radius="90%" Color="#F48C6F" />
                </CircularGaugeRanges>
                <CircularGaugePointers>
                    <CircularGaugePointer Value="22.5" Radius="45%" PointerWidth="7" Color="#F7B194">
                        <CircularGaugePointerAnimation Enable="false" />
                        <CircularGaugeCap Radius="10" Color="white">
                            <CircularGaugeCapBorder Width="4" Color="#F7B194" />
                        </CircularGaugeCap>
                        <CircularGaugeNeedleTail Length="25%" Color="#F7B194" />
                    </CircularGaugePointer>
                </CircularGaugePointers>
                <CircularGaugeAnnotations>
                    <CircularGaugeAnnotation Angle="180" Radius="20%" ZIndex="1">
                        <ContentTemplate>
                            <div style="font-size:18px;margin-left: -12px;color:#9DD55A">@Temperature</div>
                        </ContentTemplate>
                    </CircularGaugeAnnotation>
                </CircularGaugeAnnotations>
            </CircularGaugeAxis>
        </CircularGaugeAxes>
    </SfCircularGauge>
</div>

@code {
    public Theme Theme { get; set; }
    public string Temperature = string.Format("{0}\u00B0C", "22.5");
    //Hidden:Lines
    private string canonicalURL { get; set; }
    //End:Hidden

    protected override void OnInitialized()
    {
        //Hidden:Lines
        canonicalURL = NavigationManager.Uri.Split("?")[0];
        //End:Hidden
        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
    }
}