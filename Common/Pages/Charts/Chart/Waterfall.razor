@page "/chart/waterfall"

@using Syncfusion.Blazor
@using ThemeHelper
@using Syncfusion.Blazor.Charts

@inject NavigationManager NavigationManager
@inherits SampleBaseComponent;
@*Hidden:Lines*@
<PageTitle>Blazor Charts Waterfall Example - Syncfusion Demos</PageTitle>
<HeadContent>
    <meta name="description" content="This example demonstrates the Waterfall in Blazor Charts Component. Explore here for more details." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@

<SampleDescription>
    <p>This sample visualizes the revenue and profits of a company using the default waterfall series chart. The tooltip provides details on the profits made by each department.</p>
</SampleDescription>
<ActionDescription>
    <p>In this example, you can see how to render and configure the waterfall chart. The waterfall chart explains the gradual change in the quantitative value of an entity that is subject to changes by increments or decrements.</p>
    <p><code>Tooltip</code> Tooltip is enabled in this example. To see the tooltip in action, hover over a point or tap on a point in touch-enabled devices.</p>
    <p>More information about the waterfall series can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/chart/chart-types/waterfall'>documentation section</a>.</p>
</ActionDescription>

<style>

    #waterfall_Series_0_Connector_ {
        stroke-dasharray: 4px 4px;
        stroke-linejoin: round;
        stroke-linecap: round;
        -webkit-animation: dash 1s linear infinite;
        animation: dash 1s linear infinite;
    }

    @@-webkit-keyframes dash {
        100% {
            stroke-dashoffset: -20px;
        }
    }

    @@keyframes dash {
        100% {
            stroke-dashoffset: -20px;
        }
    }
</style>

<div class="control-section" align='center'>
    <SfChart ID="waterfall" Title="Company Revenue and Profit" Width="@Width" Theme="@Theme">
        <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
        <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category" LabelIntersectAction="@AxisLabelRotation" LabelRotation="@Rotation">
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
        </ChartPrimaryXAxis>
        <ChartPrimaryYAxis Minimum="0" Maximum="1250" Interval="250" Title="USD" LabelFormat="{value}K">
            <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
        </ChartPrimaryYAxis>
        <ChartTooltipSettings Enable="true" Header="" Format="<b>${point.x}</b> <br> Product Revenue : <b>${point.y}</b>"></ChartTooltipSettings>
        <ChartLegendSettings Visible="false"></ChartLegendSettings>
        <ChartSeriesCollection>
            <ChartSeries NegativeFillColor="#e56590" DataSource="@ChartPoints" Name="USA" XName="X" Width="2" IntermediateSumIndexes="@IntermediateSumIndexes"
                         SumIndexes="@SumIndexes" YName="Y" Type="ChartSeriesType.Waterfall">
                <ChartMarker>
                    <ChartDataLabel Visible="true">
                    </ChartDataLabel>
                </ChartMarker>
                <ChartSeriesConnector Color="#5F6A6A" Width="2" Length="1"></ChartSeriesConnector>
                <ChartSeriesBorder Width="1" Color="black"></ChartSeriesBorder>
            </ChartSeries>
        </ChartSeriesCollection>
    </SfChart>
</div>

@code{

    //Hidden:Lines
    private string canonicalURL { get; set; }
    //End:Hidden
    private Theme Theme { get; set; }
    public string Width { get; set; } = "90%";
    private Double[] IntermediateSumIndexes { get; set; } = new Double[] { 4 };
    private Double[] SumIndexes { get; set; } = new Double[] { 7 };
    public LabelIntersectAction AxisLabelRotation { get; set; } = LabelIntersectAction.Rotate45;
    public double Rotation { get; set; } = 0;
    public List<WaterfallChartData> ChartPoints { get; set; } = new List<WaterfallChartData>
    {
        new WaterfallChartData { X = "Income", Y = 971 },
        new WaterfallChartData { X = "Sales", Y = -101 },
        new WaterfallChartData { X = "Development", Y = -268 },
        new WaterfallChartData { X = "Revenue", Y = 403 },
        new WaterfallChartData { X = "Balance" },
        new WaterfallChartData { X = "Expense", Y = -136 },
        new WaterfallChartData { X = "Tax", Y = -365 },
        new WaterfallChartData { X = "Net Profit" },
    };

    protected override void OnInitialized()
    {
        //Hidden:Lines
        canonicalURL = NavigationManager.Uri.Split("?")[0];
        //End:Hidden
        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
        if (SampleService.IsDevice)
        {
            AxisLabelRotation = LabelIntersectAction.None;
            Rotation = -45;
            Width = "100%";
        }
    }

    public class WaterfallChartData
    {
        public string X { get; set; }
        public double Y { get; set; }
    }
}


