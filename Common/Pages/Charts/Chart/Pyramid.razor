@page "/chart/pyramid"

@using Syncfusion.Blazor
@using ThemeHelper
@using Syncfusion.Blazor.Charts

@inject NavigationManager NavigationManager
@inherits SampleBaseComponent;
@*Hidden:Lines*@
<PageTitle>Blazor Pyramid Chart Example - Syncfusion Demos</PageTitle>
<HeadContent>
    <meta name="description" content="This example demonstrates the Blazor Pyramid Chart component. Explore here for more details." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@

<SampleDescription>
    <p>This <a target='_blank' href='https://www.syncfusion.com/blazor-components/blazor-charts/chart-types/pyramid-chart'>Blazor Pyramid Chart</a> visualizes food comparison data by using pyramid series.</p>
</SampleDescription>
<ActionDescription>
    <p>In this example, you can see how to render and configure a pyramid chart. This chart is shaped like a triangle, with lines dividing it into sections of varying widths. Depending on the Y coordinate, the width indicates a level of hierarchy among other categories. The <code>DataLabel</code> represents individual data and its value.</p>
    <p><code>Tooltip</code> is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.</p>
    <p>More information about the pyramid series can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/accumulation-chart/chart-types/pyramid/'>documentation section</a>.</p>
</ActionDescription>

<div class="control-section">
    <SfAccumulationChart Title="Food Comparison Chart" Theme="@Theme">
        <AccumulationChartLegendSettings Visible="false">
        </AccumulationChartLegendSettings>
        <AccumulationChartTooltipSettings Header="" Format="${point.x}: <b>${point.y}cal</b>" Enable="true"></AccumulationChartTooltipSettings>
        <AccumulationChartSeriesCollection>
            <AccumulationChartSeries DataSource="@PyramidChartPoints" XName="Foods" YName="Calories" Type="AccumulationType.Pyramid" Width="45%" Height="80%"
                                     NeckWidth="15%" GapRatio="0.03" Name="Food" Explode="true">
                <AccumulationDataLabelSettings Visible="true" TextWrap="@Wrap" MaxWidth="@Width" Position="AccumulationLabelPosition.Outside" Name="DataLabelMappingName">
                    <AccumulationChartDataLabelFont FontWeight="600"></AccumulationChartDataLabelFont>
                        <AccumulationChartConnector Length="20px"></AccumulationChartConnector>
                </AccumulationDataLabelSettings>
            </AccumulationChartSeries>
        </AccumulationChartSeriesCollection>
    </SfAccumulationChart>
</div>
@code{

    //Hidden:Lines
    private string canonicalURL { get; set; }
    //End:Hidden
    private Theme Theme { get; set; }
    public TextWrap Wrap { get; set; } = TextWrap.Normal;
    public double Width { get; set; } = double.NaN;
    public List<PyramidData> PyramidChartPoints { get; set; } = new List<PyramidData>
    {
          new PyramidData { Foods =  "Milk, Youghnut, Cheese", Calories = 435, DataLabelMappingName = "Milk, Youghnut, Cheese: 435 cal" },
          new PyramidData { Foods =  "Vegetables", Calories = 470, DataLabelMappingName = "Vegetables: 470 cal" },
          new PyramidData { Foods =  "Meat, Poultry, Fish", Calories = 475, DataLabelMappingName = "Meat, Poultry, Fish: 475 cal" },
          new PyramidData { Foods =  "Fruits", Calories = 520, DataLabelMappingName = "Fruits: 520 cal" },
          new PyramidData { Foods =  "Bread, Rice, Pasta", Calories = 930, DataLabelMappingName = "Bread, Rice, Pasta: 930 cal" },
    };

    protected override void OnInitialized()
    {
        //Hidden:Lines
        canonicalURL = NavigationManager.Uri.Split("?")[0];
        //End:Hidden
        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
        if(SampleService.IsDevice)
        {
            Wrap = TextWrap.Wrap;
            Width = 80;
            PyramidChartPoints[4].DataLabelMappingName = "Bread, Rice,<br> Pasta: 930 cal";
        }
    }

    public class PyramidData
    {
        public string Foods { get; set; }
        public double Calories { get; set; }
        public string DataLabelMappingName { get; set; }
    }
}

