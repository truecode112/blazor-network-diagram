@page "/chart/pareto"

@using Syncfusion.Blazor
@using ThemeHelper
@using Syncfusion.Blazor.Charts

@inject NavigationManager NavigationManager
@inherits SampleBaseComponent;
@*Hidden:Lines*@
<PageTitle>Blazor Charts Pareto Example - Syncfusion Demos</PageTitle>
<HeadContent>
    <meta name="description" content="This example demonstrates the Pareto in Blazor Charts Component. Explore here for more details." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@

<SampleDescription>
    <p> This sample illustrates a pareto chart with line and column series.</p>
</SampleDescription>
<ActionDescription>
    <p>In this example, you can see how to render and configure a pareto chart. The pareto chart is used to find the cumulative values of the data in different categories. It is a combination of the column and line series. The initial values are shown in the column chart and the cumulative values are shown in the line chart.</p>
    <p><code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover a point or tap on a point in touch enabled devices.</p>
    <p>More information about the pareto series can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/chart/chart-types/pare-to/'>documentation section</a>.</p>
</ActionDescription>

<div class="control-section" align='center'>
    <SfChart Title="Pareto chart - Defects in Shirts" Width="@Width" Theme="@Theme">
        <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
        <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category" Interval="1" LabelIntersectAction="LabelIntersectAction.Rotate45">
            <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
            <ChartAxisMinorTickLines Width="0"></ChartAxisMinorTickLines>
            <ChartAxisMinorGridLines Width="0"></ChartAxisMinorGridLines>
        </ChartPrimaryXAxis>
        <ChartPrimaryYAxis Title="Frequency of Occurence" Minimum="0" Maximum="25" Interval="5">
            <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
            <ChartAxisMajorGridLines Width="1"></ChartAxisMajorGridLines>
            <ChartAxisMinorTickLines Width="0"></ChartAxisMinorTickLines>
            <ChartAxisMinorGridLines Width="1"></ChartAxisMinorGridLines>
        </ChartPrimaryYAxis>
        <ChartTooltipSettings Enable="true" Shared="false"></ChartTooltipSettings>
        <ChartSeriesCollection>
            <ChartSeries DataSource="@ChartPoints" XName="DefectCategory" YName="Y" Name="Defect" Width="2" Type="ChartSeriesType.Pareto">
                <ChartMarker Visible="true"></ChartMarker>
            </ChartSeries>
        </ChartSeriesCollection>
        <ChartLegendSettings Visible="false"></ChartLegendSettings>
    </SfChart>
</div>

@code{

    //Hidden:Lines
    private string canonicalURL { get; set; }
    //End:Hidden
    private Theme Theme { get; set; }
    public string Width { get; set; } = "90%";
    public List<ParetoData> ChartPoints { get; set; } = new List<ParetoData>
    {
        new ParetoData { DefectCategory = "Button Defect", Y = 23 },
        new ParetoData { DefectCategory = "Pocket Defect", Y = 16 },
        new ParetoData { DefectCategory = "Coller Defect", Y = 10 },
        new ParetoData { DefectCategory = "Cuff Defect", Y = 7 },
        new ParetoData { DefectCategory = "Sleeve Defect", Y = 6 }
    };

    protected override void OnInitialized()
    {
        //Hidden:Lines
        canonicalURL = NavigationManager.Uri.Split("?")[0];
        //End:Hidden
        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
        if (SampleService.IsDevice)
        {
            Width = "100%";
        }
    }

    public class ParetoData
    {
        public string DefectCategory { get; set; }
        public double Y { get; set; }
    }
}
