@page "/chart/marker-chart"

@using Syncfusion.Blazor
@using ThemeHelper
@using Syncfusion.Blazor.Charts

@inject NavigationManager NavigationManager
@inherits SampleBaseComponent;
@*Hidden:Lines*@
<PageTitle>Blazor Charts Marker Chart Example - Syncfusion Demos</PageTitle>
<HeadContent>
    <meta name="description" content="This example demonstrates the Marker Chart in Blazor Charts Component. Explore here for more details." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@

<SampleDescription>
    <p>This sample illustrates Facebook users in a chart for different countries over several years. In a line-based series, data points can be annotated using symbols.</p>
</SampleDescription>
<ActionDescription>
    <p>Each data point in a series can be represented by a symbol as a marker. You can customize the shape, size, and color of the symbol with the <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Charts.ChartMarker.html'>ChartMarker</a> class.</p>
    <p><code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover over a point or tap on a point in touch-enabled devices.</p>
    <p>More information about the marker can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/chart/data-markers'>documentation section</a>.</p>
</ActionDescription>

<div class="control-section" align='center'>
    <SfChart Title="FB Penetration of Internet Audience" Width="@Width" Theme="@Theme">
        <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
        <ChartPrimaryXAxis Interval="1" LabelRotation="@Rotation" LabelIntersectAction="@Label" ValueType="Syncfusion.Blazor.Charts.ValueType.Category">
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
        </ChartPrimaryXAxis>
        <ChartPrimaryYAxis LabelFormat="{value}%" Minimum="0" Maximum="75" Interval="15" RangePadding="ChartRangePadding.None">
            <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
        </ChartPrimaryYAxis>
        <ChartTooltipSettings Enable="true" Header="" Format="<b>${point.x}</b> <br> ${series.name} : <b>${point.y}</b>"></ChartTooltipSettings>
        <ChartLegendSettings Visible="true" EnableHighlight="true"></ChartLegendSettings>
        <ChartSeriesCollection>
            <ChartSeries DataSource="@ChartPoints" Name="2007" XName="Country" Width="2"
                         Opacity="1" YName="FBUser_07" Type="ChartSeriesType.Line">
                <ChartMarker Visible="true" Width="8" Height="8" IsFilled="true" Shape="ChartShape.Diamond">
                    <ChartDataLabel Name="TooltipMappingName"></ChartDataLabel>
                </ChartMarker>
            </ChartSeries>
            <ChartSeries DataSource="@ChartPoints" Name="2008" XName="Country" Width="2"
                         Opacity="1" YName="FBUser_08" Type="ChartSeriesType.Line">
                <ChartMarker Visible="true" Width="8" Height="8" IsFilled="true" Shape="ChartShape.Pentagon">
                    <ChartDataLabel Name="TooltipMappingName"></ChartDataLabel>
                </ChartMarker>
            </ChartSeries>
            <ChartSeries DataSource="@ChartPoints" Name="2009" XName="Country" Width="2"
                         Opacity="1" YName="FBUser_09" Type="ChartSeriesType.Line">
                <ChartMarker Visible="true" Width="8" Height="8" IsFilled="true" Shape="ChartShape.Triangle">
                    <ChartDataLabel Name="TooltipMappingName"></ChartDataLabel>
                </ChartMarker>
            </ChartSeries>
        </ChartSeriesCollection>
    </SfChart>
</div>

@code{

    //Hidden:Lines
    private string canonicalURL { get; set; }
    //End:Hidden
    private Theme Theme { get; set; }
    public string Width { get; set; } = "90%";
    public double Rotation { get; set; } = 0;
    public LabelIntersectAction Label { get; set; } = LabelIntersectAction.Rotate45;
    public List<LineChartData> ChartPoints { get; set; } = new List<LineChartData>
    {
        new LineChartData { Country = "World Wide", FBUser_07 = 12, FBUser_08 = 22, FBUser_09 = 38.3, TooltipMappingName = "World Wide"},
        new LineChartData { Country = "Europe", FBUser_07 = 9.9, FBUser_08 = 26, FBUser_09 = 45.2, TooltipMappingName = "Europe" },
        new LineChartData { Country = "Asia Pacific", FBUser_07 = 6.4, FBUser_08 = 9.6, FBUser_09 = 18.2, TooltipMappingName = "Asia Pacific"},
        new LineChartData { Country = "Latin America", FBUser_07 = 4.4, FBUser_08 = 28, FBUser_09 = 46.7, TooltipMappingName = "Latin America"},
        new LineChartData { Country = "Middle East Africa", FBUser_07 = 30, FBUser_08 = 45.7, FBUser_09 = 61.5, TooltipMappingName = "Middle East Africa"},
        new LineChartData { Country = "North America", FBUser_07 = 25.3, FBUser_08 = 35.9, FBUser_09 = 64, TooltipMappingName = "North America"},
    };

    protected override void OnInitialized()
    {
        //Hidden:Lines
        canonicalURL = NavigationManager.Uri.Split("?")[0];
        //End:Hidden
        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
        if (SampleService.IsDevice)
        {
            Label = LabelIntersectAction.None;
            Width = "100%";
            Rotation = -45;
        }
    }

    public class LineChartData
    {
        public string Country { get; set; }
        public double FBUser_07 { get; set; }
        public double FBUser_08 { get; set; }
        public double FBUser_09 { get; set; }
        public string TooltipMappingName { get; set; }
    }

}
