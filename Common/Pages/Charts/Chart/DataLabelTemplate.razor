@page "/chart/datalabel-template"

@using Syncfusion.Blazor
@using ThemeHelper
@using Syncfusion.Blazor.Charts

@inject NavigationManager NavigationManager
@inherits SampleBaseComponent;
@*Hidden:Lines*@
<PageTitle>Blazor Charts Datalabel Template Example - Syncfusion Demos</PageTitle>
<HeadContent>
    <meta name="description" content="This example demonstrates the Datalabel Template in Blazor Charts Component. Explore here for more details." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@

<SampleDescription>
    This sample illustrates data label template support in charts. Each data label for each point is rendered using the template.
</SampleDescription>
<ActionDescription>
    <p>The Blazor Charts data label template feature allows you to change the appearance and behavior of the data label for each data point using the <a target='_blank' href="https://blazor.syncfusion.com/documentation/chart/data-labels#template">Template</a> property in <a target='_blank' href="https://blazor.syncfusion.com/documentation/chart/data-labels">ChartDataLabel</a>.</p>
    <p>More information on the data label template can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/chart/data-label-template'>documentation section</a>.</p>
</ActionDescription>

<div class="control-section" align='center'>
    <SfChart Title="Athletes in Popular School" Width="@Width" Theme="@Theme">
        <ChartSubTitleStyle TextAlignment="Alignment.Far"></ChartSubTitleStyle>
        <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>  
        <ChartPrimaryXAxis EdgeLabelPlacement="EdgeLabelPlacement.Shift" ValueType="Syncfusion.Blazor.Charts.ValueType.Category">
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
             <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
        </ChartPrimaryXAxis>
        <ChartPrimaryYAxis Minimum="0" Maximum="70">
            <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>          
            <ChartAxisMajorGridLines Color="#eaeaea" Width="1"></ChartAxisMajorGridLines>
             <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
        </ChartPrimaryYAxis>
        <ChartSeriesCollection>
            <ChartSeries Name="Boys" DataSource="PopulationDetails" XName="Sports" YName="Boys" ColumnWidth="0.75" ColumnSpacing="0.5" Type="ChartSeriesType.Column">
                <ChartMarker Visible="false" Height="10" Width="10" Shape="ChartShape.Circle">
                    <ChartDataLabel Visible="true" Position="LabelPosition.Outer">
                        <ChildContent>
                            <ChartDataLabelMargin Top="70"></ChartDataLabelMargin>
                        </ChildContent>
                       <Template>
                           @{
                                var data = context as ChartDataPointInfo;
                                <div id='templateWrap' style="background-color:@MalebackgroundColor;border-radius: 3px;">
                                    <img src="@(SampleService.WebAssetsPath + "images/chart/male.png")" width="3" />
                                    <div class='des' style="color:white; font-family:Roboto; font-style: medium; font-size:14px;padding-right:6px">
                                        <span>@data.Y</span>
                                    </div>
                                </div>
                            }                            
                       </Template>                        
                    </ChartDataLabel>
                </ChartMarker>
            </ChartSeries>
            <ChartSeries Name="Girls" DataSource="PopulationDetails" XName="Sports" YName="Girls"  ColumnWidth="0.75" ColumnSpacing="0.5" Type="ChartSeriesType.Column">
                <ChartMarker Visible="false" Height="10" Width="10" Shape="ChartShape.Rectangle">
                    <ChartDataLabel Visible="true" Position="LabelPosition.Outer">
                        <ChildContent>
                            <ChartDataLabelMargin Top="70"></ChartDataLabelMargin>
                        </ChildContent>
                        <Template>
                            @{
                                var data = context as ChartDataPointInfo;
                                <div id='templateWrap' style="background-color:@FebackgroundColor;border-radius: 3px;">
                                    <img src="@(SampleService.WebAssetsPath + "images/chart/female.png")" width="3"/>
                                    <div class='des' style="color:white; font-family:Roboto; font-style: medium; font-size:14px;padding-right:6px">
                                        <span>@data.Y</span>
                                    </div>
                                </div>
                            }                            
                        </Template>
                    </ChartDataLabel>
                </ChartMarker>
            </ChartSeries>
        </ChartSeriesCollection>
        <ChartEvents OnDataLabelRender="LabelRender"></ChartEvents>
        <ChartLegendSettings EnableHighlight="true"></ChartLegendSettings>
    </SfChart>
</div>

    <style>
        #control-container {
            padding: 0px !important;
        }

        #templateWrap img {
            border-radius: 0px;
            width: 24px;
            padding: 4px;
            height: 24px;
        }

        #templateWrap .des{
            float: right;
            padding: 2px;
            line-height: 20px;
            text-align: center;            
        }
    </style>

@code{

    //Hidden:Lines
    private string canonicalURL { get; set; }
    //End:Hidden
    private Theme Theme { get; set; }
    public string Width { get; set; } = "90%";
    public string FebackgroundColor { get; set; } 
    public string MalebackgroundColor { get; set; } 

    public List<ChartData> PopulationDetails { get; set; } = new List<ChartData>
    {
        new ChartData { Sports = "Tennis", Boys = 50, Girls = 38 },
        new ChartData { Sports = "Badminton", Boys = 30, Girls = 40 },
        new ChartData { Sports = "Cycling", Boys = 37, Girls = 20 },
        new ChartData { Sports = "Football", Boys = 60, Girls = 21 },
        new ChartData { Sports = "Hockey", Boys = 15, Girls = 8 },
    };

    protected override void OnInitialized()
    {
        //Hidden:Lines
        canonicalURL = NavigationManager.Uri.Split("?")[0];
        //End:Hidden
        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
        if (SampleService.IsDevice)
        {
            Width = "100%";
        }
    }

    public void LabelRender(TextRenderEventArgs args)
    {
        this.SetTheme(args);
    }

    private void SetTheme(TextRenderEventArgs args)
    {
        if (Theme == Theme.Material)
        {
            MalebackgroundColor = "#00bdae";
            FebackgroundColor = "#404041";
        }
        else if (Theme == Theme.MaterialDark)
        {
            MalebackgroundColor = "#9ECB08";
            FebackgroundColor = "#56AEFF";
        }
        else if (Theme == Theme.Fabric || Theme == Theme.FabricDark)
        {
            MalebackgroundColor = "#4472c4";
            FebackgroundColor = "#ed7d31";
        }
        else if (Theme == Theme.Bootstrap5)
        {
            MalebackgroundColor = "#262E0B";
            FebackgroundColor = "#668E1F";
        }
        else if (Theme == Theme.Bootstrap5Dark)
        {
            MalebackgroundColor = "#5ECB9B";
            FebackgroundColor = "#A860F1";
        }
        else if (Theme == Theme.Fluent)
        {
            FebackgroundColor = "#4C6FB1";
            MalebackgroundColor = "#614570";
        }
        else if (Theme == Theme.FluentDark)
        {
            MalebackgroundColor = "#8AB113";
            FebackgroundColor = "#2A72D5";
        }
        else if (Theme == Theme.Bootstrap4)
        {
            MalebackgroundColor = "#a16ee5";
            FebackgroundColor = "#f7ce69";
        }
        else if (Theme == Theme.Bootstrap || Theme == Theme.BootstrapDark)
        {
            MalebackgroundColor = "#a16ee5";
            FebackgroundColor = "#f7ce69";
        }
        else if (Theme == Theme.Tailwind)
        {
            MalebackgroundColor = "#5A61F6";
            FebackgroundColor = "#65A30D";
        }
        else if (Theme == Theme.TailwindDark)
        {
            FebackgroundColor = "#22D3EE";
            MalebackgroundColor = "#8B5CF6";
        }
        else if (Theme == Theme.HighContrast)
        {
            MalebackgroundColor = "#79ECE4";
            FebackgroundColor = "#E98272";
        }
        else
        {
            MalebackgroundColor = "#a16ee5";
            FebackgroundColor = "#f7ce69";
        }

    }

    public class ChartData
    {
        public string Sports { get; set; }
        public double Boys { get; set; }
        public double Girls { get; set; }
    }

}