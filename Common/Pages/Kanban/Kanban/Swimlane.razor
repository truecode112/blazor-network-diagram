@page "/kanban/swimlane"
@inherits SampleBaseComponent;

@using Syncfusion.Blazor.KanbanDemo
@using Syncfusion.Blazor.Kanban
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.DropDowns
@*Hidden:Lines*@
@inject NavigationManager NavigationManager
<PageTitle>Blazor Kanban Swimlane Example - Syncfusion Demos</PageTitle>
<HeadContent>
    <meta name="description" content="This example demonstrates the Swimlane in Blazor Kanban Component. Explore here for more details." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@

<SampleDescription>
    <p>This example demonstrates the swimlane functionalities of Kanban component. It has provided options in the property panel to sort the cards, enable drag-and-drop across swimlanes, show or hide the empty row, items count and swimlane frozen rows. Also, you can expand/collapse the swimlane row in the Kanban board.</p>
</SampleDescription>
<ActionDescription>
    <p>This sample renders based on the fields mapped to <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Kanban.KanbanSwimlaneSettings.html">KanbanSwimlaneSettings</a>. It provides the following properties:</p>
    <ul>
        <li><a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Kanban.KanbanSwimlaneSettings.html#Syncfusion_Blazor_Kanban_KanbanSwimlaneSettings_KeyField">KeyField</a> - Swimlane header mapped to assignee in this demo.</li>
        <li><a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Kanban.KanbanSwimlaneSettings.html#Syncfusion_Blazor_Kanban_KanbanSwimlaneSettings_SortDirection">SortDirection</a> - Sort direction for sorting the swimlane cards.</li>
        <li><a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Kanban.KanbanSwimlaneSettings.html#Syncfusion_Blazor_Kanban_KanbanSwimlaneSettings_AllowDragAndDrop">AllowDragAndDrop</a> - Enables or disables the drag and drop of the cards across swimlane.</li>
        <li><a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Kanban.KanbanSwimlaneSettings.html#Syncfusion_Blazor_Kanban_KanbanSwimlaneSettings_ShowEmptyRow">ShowEmptyRow</a> - Shows or hides the empty swimlane row.</li>
        <li><a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Kanban.KanbanSwimlaneSettings.html#Syncfusion_Blazor_Kanban_KanbanSwimlaneSettings_ShowItemCount">ShowItemCount</a> - Shows or hides the items count in the swimlane header.</li>
        <li><a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Kanban.KanbanSwimlaneSettings.html#Syncfusion_Blazor_Kanban_KanbanSwimlaneSettings_EnableFrozenRows">EnableFrozenRows</a> - Enables or disables the frozen swimlane rows.</li>
    </ul>
    <p><b>See also</b></p>
    <ul>
       <li><a href='https://blazor.syncfusion.com/documentation/kanban/swimlane' target='_blank'>Blazor Kanban - Swimlane</a></li>
    </ul>
</ActionDescription>

<div class="col-lg-8 control-section">
    <div class="control-section overflow">
        <SfKanban KeyField="Status" DataSource="@cardData" Height="500px">
            <KanbanColumns>
                @foreach (ColumnModel item in columnData)
                {
                    <KanbanColumn HeaderText="@item.HeaderText" KeyField="@item.KeyField"/>
                }
            </KanbanColumns>
            <KanbanCardSettings ContentField="Summary" HeaderField="Id"/>
            <KanbanSwimlaneSettings KeyField="Assignee" AllowDragAndDrop="@allowDragAndDrop" ShowItemCount="@showItemCount" SortDirection="@sortDirection" EnableFrozenRows="@enableFrozenRows"/>
        </SfKanban>
    </div>
</div>
<div class="col-lg-4 property-section">
    <div class="property-panel-section">
        <div class="property-panel-header">Properties</div>
        <div class="property-panel-content">
            <table class="property-panel-table" title="Swimlane Properties">
                <tr>
                    <td>Sort direction</td>
                    <td>
                        <div>
                            <SfDropDownList TItem="KanbanDataModel" TValue="string" DataSource="@SortData" @bind-Index="@index" PopupHeight="200px">
                                <DropDownListFieldSettings Text="Value" Value="Value"></DropDownListFieldSettings>
                                <DropDownListEvents TItem="KanbanDataModel" TValue="string" ValueChange="@ChangeSortOrder"></DropDownListEvents>
                            </SfDropDownList>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>Swimlanes Drag & Drop</td>
                    <td>
                        <SfCheckBox Checked="@allowDragAndDrop" ValueChange="@((args) => { allowDragAndDrop = args.Checked; })" TChecked="bool"></SfCheckBox>
                    </td>
                </tr>
                <tr>
                    <td>Show items count</td>
                    <td>
                        <SfCheckBox Checked="@showItemCount" ValueChange="@((args) => { showItemCount = args.Checked; })" TChecked="bool"></SfCheckBox>
                    </td>
                </tr>
                <tr>
                    <td>Freeze swimlane row</td>
                    <td>
                        <SfCheckBox Checked="@enableFrozenRows" ValueChange="@((args) => { enableFrozenRows = args.Checked; })" TChecked="bool"></SfCheckBox>
                    </td>
                </tr>
            </table>
        </div>
    </div>
</div>

<style>
    .property-panel-section table {
        width: 100%;
    }

    .property-panel-section table tr {
        height: 50px;
    }

    .property-panel-section table td {
        padding-left: 10px;
        width: 50%;
    }
    .overflow {
        overflow: hidden;
    }
</style>

@code{
    private List<KanbanDataModel> cardData = new KanbanDataModel().GetTasks();
    private List<KanbanDataModel> SortData = new KanbanDataModel().SortDropDowns();
    private SortDirection sortDirection { get; set; } = SortDirection.Ascending;
    private bool allowDragAndDrop { get; set; } = false;
    private bool showItemCount { get; set; } = true;
    private bool enableFrozenRows { get; set; } = false;
    private int? index { get; set; } = 0;
    //Hidden:Lines
    private string canonicalURL { get; set; }

    protected override void OnInitialized()
    {
        canonicalURL = NavigationManager.Uri.Split("?")[0];
    }
    //End:Hidden

    private List<ColumnModel> columnData = new List<ColumnModel>() 
    {
        new ColumnModel(){ HeaderText= "To Do", KeyField= new List<string>() { "Open" } },
        new ColumnModel(){ HeaderText= "In Progress", KeyField= new List<string>() { "In Progress"} },
        new ColumnModel(){ HeaderText= "Done", KeyField= new List<string>() { "Close" } }
    };

    private void ChangeSortOrder(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string, KanbanDataModel> args)
    {
        this.sortDirection = (args.Value == "Ascending") ? SortDirection.Ascending : SortDirection.Descending;
    }
}

