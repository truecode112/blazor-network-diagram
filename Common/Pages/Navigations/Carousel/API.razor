@page "/carousel/api"

@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.DropDowns
@inject Microsoft.AspNetCore.Components.NavigationManager UriHelper
@inherits SampleBaseComponent
@inject IJSRuntime JsRuntime;
@*Hidden:Lines*@
<PageTitle>Blazor Carousel API Example - Syncfusion Demos</PageTitle>
<HeadContent>
    <meta name="description" content="This example demonstrates the API in Blazor Carousel Component. Explore here for more details." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@

<SampleDescription>
    <p>This sample demonstrates the properties available in the <a href="https://www.syncfusion.com/blazor-components/blazor-carousel" target="_blank">Blazor Carousel</a> component.</p>
</SampleDescription>
<ActionDescription>
    <p>
        In this demo, you can manually change the properties of the <code>Blazor Carousel</code> component like
        <code>AutoPlay</code>, <code>ButtonsVisibility</code>, <code>ShowIndicators</code>,
        <code>Interval</code>, <code>ShowPlayButton</code>, <code>Loop</code> using the property panel.
    </p>
    <p>
        More information about the properties available in the Blazor Carousel component can be found in this <a target="_blank" href="https://blazor.syncfusion.com/documentation/carousel/getting-started">documentation section</a>.
    </p>
</ActionDescription>

<div class="control-section api-carousel-section">
    <div class="col-lg-9 content-wrapper">
        <div class="carousel-sample">
            <SfCarousel CssClass="api-carousel" AutoPlay="@enableAutoPlay" ShowPlayButton="@showPlayButton" Loop="@isLoop" Interval="@slideInterval" ButtonsVisibility="@buttonsVisibility" ShowIndicators="@showIndicators">
                <ChildContent>
                    <CarouselItem>
                        <Template>
                            <figure class="img-container">
                                <img src="@UriHelper.ToAbsoluteUri($"{SampleService.WebAssetsPath}images/carousel/bridge.png")" alt="bridge" style="height:100%;width:100%;" />
                                <figcaption class="img-caption">Showing 1 of 5</figcaption>
                            </figure>
                        </Template>
                    </CarouselItem>
                    <CarouselItem>
                        <Template>
                            <figure class="img-container">
                                <img src="@UriHelper.ToAbsoluteUri($"{SampleService.WebAssetsPath}images/carousel/trees.png")" alt="spring_trees" style="height:100%;width:100%;" />
                                <figcaption class="img-caption">Showing 2 of 5</figcaption>
                            </figure>
                        </Template>
                    </CarouselItem>
                    <CarouselItem Interval="3000">
                        <Template>
                            <figure class="img-container">
                                <img src="@UriHelper.ToAbsoluteUri($"{SampleService.WebAssetsPath}images/carousel/waterfall.png")" alt="waterfall" style="height:100%;width:100%;" />
                                <figcaption class="img-caption">Showing 3 of 5</figcaption>
                            </figure>
                        </Template>
                    </CarouselItem>
                    <CarouselItem Interval="7000">
                        <Template>
                            <figure class="img-container">
                                <img src="@UriHelper.ToAbsoluteUri($"{SampleService.WebAssetsPath}images/carousel/sea.png")" alt="sea" style="height:100%;width:100%;" />
                                <figcaption class="img-caption">Showing 4 of 5</figcaption>
                            </figure>
                        </Template>
                    </CarouselItem>
                    <CarouselItem>
                        <Template>
                            <figure class="img-container">
                                <img src="@UriHelper.ToAbsoluteUri($"{SampleService.WebAssetsPath}images/carousel/rocks.png")" alt="rocks" style="height:100%;width:100%;" />
                                <figcaption class="img-caption">Showing 5 of 5</figcaption>
                            </figure>
                        </Template>
                    </CarouselItem>
                </ChildContent>
            </SfCarousel>
        </div>
    </div>
    <div class="col-lg-3 property-section">
        <div id="property" class='property-panel-table' title="Properties">
            <table id='property' class='property-panel-table' style="width: 100%;">
                <tbody>
                    <tr style="height: 50px">
                        <td>Enable AutoPlay</td>
                        <td>
                            <SfSwitch TChecked="bool" @bind-Checked="enableAutoPlay"></SfSwitch>
                        </td>
                    </tr>
                    <tr style="height: 50px">
                        <td>Infinite looping</td>
                        <td>
                            <SfSwitch TChecked="bool" @bind-Checked="isLoop"></SfSwitch>
                        </td>
                    </tr>
                    <tr style="height: 50px">
                        <td>Show Indicators</td>
                        <td>
                            <SfSwitch TChecked="bool" @bind-Checked="showIndicators"></SfSwitch>
                        </td>
                    </tr>
                    <tr style="height: 50px">
                        <td>Show Play Button</td>
                        <td>
                            <SfSwitch TChecked="bool" @bind-Checked="showPlayButton"></SfSwitch>
                        </td>
                    </tr>
                    <tr>
                        <td>Show Arrows</td>
                        <td>
                            <SfDropDownList TValue="CarouselButtonVisibility" TItem="DropDownData" @bind-Value="@buttonsVisibility" DataSource="@ArrowData">
                                <DropDownListFieldSettings Text="Name" Value="Value"></DropDownListFieldSettings>
                            </SfDropDownList>
                        </td>
                    </tr>
                    <tr>
                        <td>Slide interval</td>
                        <td>
                            <SfDropDownList TValue="int" TItem="DropDownData" @bind-Value="@slideInterval" DataSource="@IntervalData">
                                <DropDownListFieldSettings Text="Name" Value="IntervalValue"></DropDownListFieldSettings>
                            </SfDropDownList>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>
<style>
    .api-carousel-section .carousel-sample {
        margin: 0 auto 2em;
        max-width: 500px;
        height: 300px;
    }

    .api-carousel-section .property-panel-table td {
        margin: 0;
        padding-bottom: 1em;
    }

    .api-carousel .e-carousel-items .e-carousel-item .img-container {
        height: 100%;
    }

        .api-carousel .e-carousel-items .e-carousel-item .img-container .img-caption {
            color: rgba(255, 255, 255);
            font-style: oblique;
            font-size: 1.5rem;
            margin: 0;
            left: 1.5rem;
            position: absolute;
            text-shadow: 2px 2px 2px rgba(0, 0, 0, 0.5);
            top: 1.5rem;
        }
</style>

@code {
    private CarouselButtonVisibility buttonsVisibility = CarouselButtonVisibility.Visible;
    private bool showIndicators = true;
    private bool showPlayButton;
    private bool enableAutoPlay = true;
    private bool isLoop = true;
    private int slideInterval = 5000;
    //Hidden:Lines
    private string canonicalURL { get; set; }

    protected override void OnInitialized()
    {
        canonicalURL = UriHelper.Uri.Split("?")[0];
    }
    //End:Hidden
    private List<DropDownData> ArrowData { get; set; } = new List<DropDownData>() {
        new DropDownData { Name = "Hidden", Value = CarouselButtonVisibility.Hidden },
        new DropDownData { Name = "Visible", Value = CarouselButtonVisibility.Visible },
        new DropDownData { Name = "On Hover", Value = CarouselButtonVisibility.VisibleOnHover }
    };
    private List<DropDownData> BoolData { get; set; } = new List<DropDownData>() {
        new DropDownData { Name = "True", BoolValue = true },
        new DropDownData { Name = "False", BoolValue = false }
    };
    private List<DropDownData> IntervalData { get; set; } = new List<DropDownData>() {
        new DropDownData { Name = "3 seconds", IntervalValue = 3000 },
        new DropDownData { Name = "5 seconds", IntervalValue = 5000 },
        new DropDownData { Name = "7 seconds", IntervalValue = 7000 }
    };
    public class DropDownData
    {
        public string Name { get; set; }
        public CarouselButtonVisibility Value { get; set; }
        public bool BoolValue { get; set; }
        public int IntervalValue { get; set; }
    }
}