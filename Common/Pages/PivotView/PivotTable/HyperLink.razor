@page "/pivot-table/hyperlink"

@using Syncfusion.Blazor.PivotView
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Inputs
@inherits SampleBaseComponent;
@using BlazorDemos

@inject IJSRuntime JSRuntime;
@*Hidden:Lines*@
@inject NavigationManager NavigationManager
<PageTitle>Blazor Pivot Table Hyperlink Example - Syncfusion Demos</PageTitle>
<HeadContent>
    <meta name="description" content="This example demonstrates the Hyperlink in Blazor Pivot Table Component. Explore here for more details." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@

<SampleDescription>
    <p>This sample demonstrates showing hyperlink options in row headers, column headers, value cells, and summary cells in the pivot table. Also, hyperlink options can be enabled for specific headers and value cells based on the applied condition.</p>
</SampleDescription>
<ActionDescription>
    <p>
        In this sample, hyperlinks are enabled in cells based on the options selected from the <b>Show Hyperlink</b> drop-down list. The following options are available for setting the hyperlinks:
        <table>
            <tr>
                <td style='vertical-align: top;padding: 4px 0;width:200px'><code>All cells :</code></td>
                <td> Allows to set the visibility of hyperlink to all cells.</td>
            </tr>
            <tr>
                <td style='vertical-align: top;padding: 4px 0;'> <code>Row headers :</code></td>
                <td> Allows to set the visibility of hyperlink to row headers.</td>
            </tr>
            <tr>
                <td style='vertical-align: top;padding: 4px 0;'><code>Column headers :</code></td>
                <td> Allows to set the visibility of hyperlink to column headers.</td>
            </tr>
            <tr>
                <td style='vertical-align: top;padding: 4px 0;'> <code>Summary cells :</code></td>
                <td> Allows to set the visibility of hyperlink to summary cells.</td>
            </tr>
            <tr>
                <td style='vertical-align: top;padding: 4px 0;'><code>Value cells :</code></td>
                <td> Allows to set the visibility of hyperlink to value cells.</td>
            </tr>
            <tr>
                <td style='vertical-align: top;padding: 4px 0;'><code>Condition based option :</code></td>
                <td> Allows to set the visibility of hyperlink to value and summary cells based on the applied condition like less than, greater than, equals, etc.</td>
            </tr>
            <tr>
                <td style='vertical-align: top;padding: 4px 0;'><code>Header based option :</code></td>
                <td> Allows to set the visibility of hyperlink to specific row/column based on the given header text.</td>
            </tr>
        </table>
    </p>
    <p>More information on the hyperlink can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/pivot-table/hyper-link/'>documentation section</a>.</p>
</ActionDescription>

<div class="col-lg-8 control-section sb-property-border">
    <div class="content-wrapper">
        <SfPivotView TValue="PivotProductDetails" @ref="Pivot" Height="600" Width="100%" EnableValueSorting=true ShowTooltip=false>
            <PivotViewDataSourceSettings DataSource="@Data" ExpandAll=false EnableSorting=true>
                <PivotViewColumns>
                    <PivotViewColumn Name="Year"></PivotViewColumn>
                </PivotViewColumns>
                <PivotViewRows>
                    <PivotViewRow Name="Country"></PivotViewRow>
                    <PivotViewRow Name="Products"></PivotViewRow>
                </PivotViewRows>
                <PivotViewValues>
                    <PivotViewValue Name="In_Stock" Caption="In Stock"></PivotViewValue>
                    <PivotViewValue Name="Sold" Caption="Units Sold"></PivotViewValue>
                    <PivotViewValue Name="Amount" Caption="Sold Amount"></PivotViewValue>
                </PivotViewValues>
                <PivotViewFilters>
                    <PivotViewFilter Name="Product_Categories" Caption="Product Categories"></PivotViewFilter>
                </PivotViewFilters>
                <PivotViewFormatSettings>
                    <PivotViewFormatSetting Name="Amount" Format="C0" UseGrouping=true></PivotViewFormatSetting>
                </PivotViewFormatSettings>
                <PivotViewDrilledMembers>
                    <PivotViewDrilledMember Name="Country" Items="@(new string[] {"United Kingdom", "United States" })"></PivotViewDrilledMember>
                </PivotViewDrilledMembers>
            </PivotViewDataSourceSettings>
            <PivotViewHyperlinkSettings ShowValueCellHyperlink="@showValueCellHyperlink" ShowHyperlink="@showHyperlink" ShowColumnHeaderHyperlink="@showColumnHeaderHyperlink" ShowRowHeaderHyperlink="@showRowHeaderHyperlink" ShowSummaryCellHyperlink="@showSummaryCellHyperlink" HeaderText="@hyperHeaderText" CssClass="e-custom-class">
                <PivotViewConditionalSettings>
                    <PivotViewConditionalSetting Measure="@measure" Conditions="hyperlinkCondition" Value1="conditionalValue1" Value2="conditionalValue2"></PivotViewConditionalSetting>
                </PivotViewConditionalSettings>
            </PivotViewHyperlinkSettings>
            <PivotViewGridSettings ColumnWidth="120"></PivotViewGridSettings>
            <PivotViewEvents TValue="PivotProductDetails" HyperlinkCellClicked="@HyperlinkClick"></PivotViewEvents>
        </SfPivotView>
    </div>
</div>
<div class="col-lg-4 property-section pivottable-property-section">
    <div class="property-panel-section">
        <div class="property-panel-header" style="padding-bottom:10px; font-size:16px">Properties</div>
        <div class="property-panel-content">
            <table id="property" style="width: 100%;height:100%;" class="property-panel-table">
                <tbody>
                    <tr style="height: 50px">
                        <td colspan="2">
                            <div style="white-space: nowrap;margin-right:10px">
                                Show Hyperlink:
                            </div>
                        </td>
                        <td colspan="2">
                            <div>
                                <SfDropDownList TValue="string" TItem="DropDownData" DataSource="@hyperlinkData" @bind-Value="@hyperlinkMode">
                                    <DropDownListEvents TValue="string" TItem="DropDownData" ValueChange="OnHyperlinkChange"></DropDownListEvents>
                                    <DropDownListFieldSettings Text="Name" Value="Value"></DropDownListFieldSettings>
                                </SfDropDownList>
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
            <br>
            @if (hyperlinkMode == "conditional")
            {
                <table>
                    <tbody>
                        <tr class="text1cls" style="height: 50px;">
                            <td colspan="2">
                                <div style="white-space: nowrap;">
                                    Condition based settings:
                                </div>
                            </td>
                        </tr>
                        <tr class="measurecls" style="height: 50px;">
                            <td colspan="2" style="padding-right: 10px;">
                                <div>
                                    Measures:
                                </div>
                            </td>
                            <td colspan="2">
                                <div>
                                    <SfDropDownList @ref="Fields" TValue="string" TItem="DropDownData" DataSource="@fieldData" Value="@measure" PopupWidth="auto">
                                        <DropDownListFieldSettings Text="Name" Value="Value"></DropDownListFieldSettings>
                                    </SfDropDownList>
                                </div>
                            </td>
                        </tr>
                        <tr class="conditioncls" style="height: 50px;">
                            <td colspan="2" style="padding-right: 10px;">
                                <div>
                                    Condition:
                                </div>
                            </td>
                            <td colspan="2">
                                <div class="conditionscls">
                                    <SfDropDownList @ref="Conditions" TValue="string" TItem="DropDownData" DataSource="@conditionalData" @bind-Value="@condition" PopupWidth="auto">
                                        <DropDownListFieldSettings Text="Name" Value="Value"></DropDownListFieldSettings>
                                    </SfDropDownList>
                                </div>
                            </td>
                        </tr>
                        <tr class="input1cls" style="height: 50px;">
                            <td colspan="2" style="padding-right: 10px;">
                                <div style="white-space: nowrap;">
                                    Value 1:
                                </div>
                            </td>
                            <td colspan="2">
                                <div class="value1cls">
                                    <SfNumericTextBox @ref="Value1" TValue="double" Value="@conditionalValue1" Placeholder="Example: 400"></SfNumericTextBox>
                                </div>
                            </td>
                        </tr>
                        @if (condition == "Between" || condition == "NotBetween")
                        {

                            <tr class="input2cls" style="height: 50px">
                                <td colspan="2" style="padding-right: 10px;">
                                    <div style="white-space: nowrap;">
                                        Value 2:
                                    </div>
                                </td>
                                <td colspan="2">
                                    <div class="value2cls">
                                        <SfNumericTextBox @ref="Value2" TValue="double" Value="conditionalValue2" Placeholder="Example: 4000"></SfNumericTextBox>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            @if (hyperlinkMode == "headertext")
            {
                <table>
                    <tbody>
                        <tr class="text2cls" style="height: 50px;">
                            <td colspan="2">
                                <div style="white-space: nowrap;">
                                    <hr>
                                    Header based settings:
                                </div>
                            </td>
                        </tr>
                        <tr class="textinputcls" style="height: 50px;">
                            <td colspan="2" style="padding-right: 10px;">
                                <div style="white-space: nowrap;">
                                    Header Text:
                                </div>
                            </td>
                            <td colspan="2">
                                <div class="textcls">
                                    <SfTextBox @ref="HeaderText" Value="" Placeholder="Example:'FY 2015.Units Sold'"></SfTextBox>
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
            }
            @if (hyperlinkMode == "conditional" || hyperlinkMode == "headertext")
            {
                <table style="width: 100%;">
                    <tbody>
                        <tr class="updatecls" style="height: 50px;">
                            <td colspan="4">
                                <div style="float:right;margin-right: 4px">
                                    <SfButton IsPrimary="true" OnClick="OnApply">Apply</SfButton>
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
            }
            <hr>
            <div class="Eventlog" style="max-height:200px">
                <table style="width: 100%;">
                    <tbody style="width: 100%">
                        <tr style="height: 50px">
                            <td colspan="2">
                                <div style="white-space: nowrap;">
                                    <b> Event Trace: </b>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="2">
                                <div class="eventarea" style="height: 160px;overflow: auto">
                                    @foreach (String EventTrace in logMessage)
                                    {

                                        <span class="EventLog" id="hyperlink-EventLog" style="word-break: normal;">
                                            <span>
                                                <b>@EventTrace</b> cell click event called
                                            </span>
                                        </span>
                                        <hr>
                                    }
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>

                @if (@showClearButton)
                {
                    <div style="height: 50px;float:right;">
                        <SfButton id="hyperlink-clear" OnClick="Clear"> Clear</SfButton>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<style>
    .e-pivotview {
        min-height: 200px;
    }    

    .pivottable-property-section .text1cls,
    .pivottable-property-section .text2cls {
        font-weight: bold;
        margin-top: 20px;
    }

    .pivottable-property-section {
        overflow: auto;
    }

    .e-hyperlinkcell.e-custom-class:hover {
        color: red;
    }

    .EventLog b {
        color: #388e3c;
    }

    .pivottable-property-section hr {
        margin: 1px 10px 10px 0px;
        border-top: 1px solid #eee;
    }

    .EventLog hr {
        margin-bottom: 1px;
    }       

    .property-panel-table td {
        width: auto;
    }

    .property-panel-table div {
        padding-left: unset;
    }
</style>

@code {
    public SfPivotView<PivotProductDetails> Pivot;
    public SfDropDownList<string, DropDownData> Fields;
    public SfDropDownList<string, DropDownData> Conditions;
    public SfNumericTextBox<double> Value1;
    public SfNumericTextBox<double> Value2;
    public SfTextBox HeaderText;
    public List<PivotProductDetails> Data { get; set; }
    private List<String> logMessage = new List<string>();
    private string[] drilledMembers = new string[] { "United States" };
    private bool showHyperlink { get; set; } = false;
    private bool showRowHeaderHyperlink { get; set; } = false;
    private bool showColumnHeaderHyperlink { get; set; } = false;
    private bool showValueCellHyperlink { get; set; } = true;
    private bool showSummaryCellHyperlink { get; set; } = false;
    private string hyperHeaderText { get; set; } = null;
    private string measure { get; set; } = "In_Stock";
    private double conditionalValue1 { get; set; } = 0;
    private double conditionalValue2 { get; set; } = 0;
    private Condition hyperlinkCondition { get; set; } = Syncfusion.Blazor.PivotView.Condition.Equals;
    private string hyperlinkMode { get; set; } = "valuecells";
    private string condition { get; set; } = "Equals";
    private bool showClearButton = false;
    //Hidden:Lines
    private string canonicalURL { get; set; }
    //End:Hidden
    protected override void OnInitialized()
    {
        //Hidden:Lines
        canonicalURL = NavigationManager.Uri.Split("?")[0];
        //End:Hidden
        this.Data = PivotProductDetails.GetProductData();
    }
    private void HyperlinkClick(HyperCellClickEventArgs args)
    {
        AxisSet CellInfo = args.Data as AxisSet;
        if(CellInfo.Type == "grand sum" && CellInfo.Axis == "row")
        {
            logMessage.Add("Summary Row Header");
        }
        else if(CellInfo.Type == "grand sum" && CellInfo.Axis == "column")
        {
            logMessage.Add("Summary Column Header");
        }
        else if (CellInfo.IsSum)
        {
            logMessage.Add("Summary Value");
        }
        else if (CellInfo.Axis == "column" && CellInfo.Index == null)
        {
            logMessage.Add("Value Header");
        }
        else if (CellInfo.Axis == "value")
        {
            logMessage.Add("Value");
        }
        else if (CellInfo.Axis == "row")
        {
            logMessage.Add("Row Header");
        }
        else if (CellInfo.Axis == "column")
        {
            logMessage.Add("Column Header");
        }       
        showClearButton = true;
    }
    private void OnHyperlinkChange(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string, DropDownData> args)
    {
        if (args.Value == "allcells")
        {
            showHyperlink = true;
            showRowHeaderHyperlink = showColumnHeaderHyperlink = showValueCellHyperlink = showSummaryCellHyperlink = false;
        }
        else if (args.Value == "rowheader")
        {
            showHyperlink = showColumnHeaderHyperlink = showValueCellHyperlink = showSummaryCellHyperlink = false;
            showRowHeaderHyperlink = true;
        }
        else if (args.Value == "columnheader")
        {
            showHyperlink = showRowHeaderHyperlink = showValueCellHyperlink = showSummaryCellHyperlink = false;
            showColumnHeaderHyperlink = true;
        }
        else if (args.Value == "valuecells")
        {
            showHyperlink = showRowHeaderHyperlink = showColumnHeaderHyperlink = showSummaryCellHyperlink = false;
            showValueCellHyperlink = true;
        }
        else if (args.Value == "summarycells")
        {
            showHyperlink = showRowHeaderHyperlink = showColumnHeaderHyperlink = showValueCellHyperlink = false;
            showSummaryCellHyperlink = true;
        }
        hyperHeaderText = null;
        measure = hyperlinkMode == "conditional" ? "In_Stock" : null;
        hyperlinkCondition = Syncfusion.Blazor.PivotView.Condition.LessThan;
        conditionalValue1 = conditionalValue2 = 0;
    }
    private void Clear(Microsoft.AspNetCore.Components.Web.MouseEventArgs args)
    {
        logMessage = new List<string>();
        showClearButton = false;
    }
    public void OnApply(Microsoft.AspNetCore.Components.Web.MouseEventArgs args)
    {
        showHyperlink = showRowHeaderHyperlink = showColumnHeaderHyperlink = showValueCellHyperlink = showSummaryCellHyperlink = false;
        if (hyperlinkMode == "conditional")
        {
            hyperHeaderText = null;
            measure = Fields.Value;
            hyperlinkCondition = (Syncfusion.Blazor.PivotView.Condition)Enum.Parse(typeof(Syncfusion.Blazor.PivotView.Condition), Conditions.Value, true);
            conditionalValue1 = Value1.Value;
            conditionalValue2 = Value2 != null ? Value2.Value : 0;
        }
        else if (hyperlinkMode == "headertext")
        {
            hyperHeaderText = HeaderText.Value;
            measure = null;
            hyperlinkCondition = Syncfusion.Blazor.PivotView.Condition.LessThan;
            conditionalValue1 = conditionalValue2 = 0;
        }
    }
    private List<DropDownData> hyperlinkData = new List<DropDownData>() {
        new DropDownData { Value = "allcells", Name = "All cells" },
        new DropDownData { Value = "rowheader", Name = "Row headers" },
        new DropDownData { Value = "columnheader", Name = "Column headers" },
        new DropDownData { Value = "valuecells", Name = "Value cells" },
        new DropDownData { Value = "summarycells", Name = "Summary cells" },
        new DropDownData { Value = "conditional", Name = "Condition based option" },
        new DropDownData { Value = "headertext", Name = "Header based option" },
    };
    private List<DropDownData> fieldData = new List<DropDownData>()
    {
        new DropDownData { Value = "In_Stock", Name = "In Stock" },
        new DropDownData { Value = "Sold", Name = "Units Sold" },
        new DropDownData { Value = "Amount", Name = "Sold Amount" }
    };
    private List<DropDownData> conditionalData = new List<DropDownData>()
   {
        new DropDownData { Value = "Equals", Name = "Equals" },
        new DropDownData { Value = "NotEquals", Name = "NotEquals" },
        new DropDownData { Value = "GreaterThan", Name = "GreaterThan" },
        new DropDownData { Value = "GreaterThanOrEqualTo", Name = "GreaterThanOrEqualTo" },
        new DropDownData { Value = "LessThan", Name = "LessThan" },
        new DropDownData { Value = "LessThanOrEqualTo", Name = "LessThanOrEqualTo" },
        new DropDownData { Value = "Between", Name = "Between" },
        new DropDownData { Value = "NotBetween", Name = "NotBetween" },
    };
    public class DropDownData
    {
        public string Name { get; set; }
        public string Value { get; set; }
    }
}