@page "/range-slider/vertical-orientation"

@using Syncfusion.Blazor.Inputs;
@inherits SampleBaseComponent;
@*Hidden:Lines*@
@inject NavigationManager NavigationManager
<PageTitle>Blazor Range Slider Vertical Orientation Example - Syncfusion Demos</PageTitle>
<HeadContent>
    <meta name="description" content="This example demonstrates the Vertical Orientation in Blazor Range Slider Component. Explore here for more details." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@

<SampleDescription>
    <p>This sample demonstrates the rendering of the <a href='https://www.syncfusion.com/blazor-components/blazor-range-slider' target='_blank'>Blazor Range Slider</a> component <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Inputs.SfSlider-1.html#Syncfusion_Blazor_Inputs_SfSlider_1_Orientation'>Orientation</a> in the vertical direction. Drag the thumb over the bar to select the values between <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Inputs.SfSlider-1.html#Syncfusion_Blazor_Inputs_SfSlider_1_Min'>Min</a> and <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Inputs.SfSlider-1.html#Syncfusion_Blazor_Inputs_SfSlider_1_Max'>Max</a>.</p>
</SampleDescription>
<ActionDescription>
    <p>The <code>Range Slider</code> component allows to select a value or range of values in-between a <code>Min</code> and <code>Max</code> range by dragging the thumb over the slider bar in vertical direction. Three types of <code>Range Sliders</code> in vertical orientation are:</p>
    <ul>
        <li><code>Default</code> - Allows to select a single value.</li>
        <li><code>MinRange</code> - Allows to select a single value. It highlights a range selection from the minimum value to the current handle value.</li>
        <li><code>Range</code> - Allows to select a range of values with two handles that are linked by a range selection.</li>
        <li><code>Reverse</code> - Allows to render the component in  reverse order. To utilise this, set the maximum value to the <code>Min</code> property and set the minimum value to the <code>Max</code> property.</li>
    </ul>
    <p>The drag interval is used to drag both handles using the range bar, which is applicable only to the <code>Range Slider</code>.</p>
    <p>In this demo, the Default, MinRange, and Range Slider types can be seen with vertical orientation.</p>
</ActionDescription>

<div class="control-section">
    <div class="content-wrapper">
        <table>
            <tbody>
                <tr>
                    <td>
                        <div class="slider-wrap">
                            <label>Default Slider</label>
                            @*Initialize the Default Slider component with vertical orientation*@
                            <SfSlider Orientation="@SliderOrientation.Vertical" Value="30">
                                <SliderTicks Placement="Placement.Before" LargeStep="20"></SliderTicks>
                                <SliderTooltip Placement="TooltipPlacement.After" IsVisible="true"></SliderTooltip>
                            </SfSlider>
                        </div>
                    </td>
                    <td>
                        <div class="slider-wrap">
                            <label>MinRange Slider</label>
                            @*Initialize the MinRange Slider component with vertical orientation*@
                            <SfSlider Type=SliderType.MinRange Orientation="@SliderOrientation.Vertical" Value="30">
                                <SliderTicks Placement="Placement.Before" LargeStep="20"></SliderTicks>
                                <SliderTooltip Placement="TooltipPlacement.After" IsVisible="true"></SliderTooltip>
                            </SfSlider>
                        </div>
                    </td>
                    <td>
                        <div class="slider-wrap">
                            <label>Range Slider</label>
                            @*Initialize the Range Slider component with vertical orientation*@
                            <SfSlider Orientation="@SliderOrientation.Vertical" Type=SliderType.Range Value="@Range">
                                <SliderTicks Placement="Placement.Before" LargeStep="20"></SliderTicks>
                                <SliderTooltip Placement="TooltipPlacement.After" IsVisible="true"></SliderTooltip>
                            </SfSlider>
                        </div>
                    </td>
                    <td>
                        <div class="slider-wrap">
                            <label>Reverse Slider</label>
                            @*Initialize the Reverse Slider component with vertical orientation*@
                            <SfSlider Min="100" Max="0" Orientation="@SliderOrientation.Vertical" Type=SliderType.Range Value="@Range">
                                <SliderTicks Placement="Placement.Before" LargeStep="20"></SliderTicks>
                                <SliderTooltip Placement="TooltipPlacement.After" IsVisible="true"></SliderTooltip>
                            </SfSlider>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

@code {
    // Specifies the value of the Range Slider.
    int[] Range = { 30, 70 };
    //Hidden:Lines
    private string canonicalURL { get; set; }

    protected override void OnInitialized()
    {
        canonicalURL = NavigationManager.Uri.Split("?")[0];
    }
    //End:Hidden
}

<style>
    /* Sampel specific styles */
    .content-wrapper {
        width: 61%;
        margin: 0 auto;
        min-width: 185px;
    }

    .slider-wrap {
        height: 375px;
        width: 80%;
        margin: 0 auto;
    }

    .content-wrapper label {
        font-size: 13px;
        font-weight: 500;
    }

    .content-wrapper td {
        text-align: center;
    }

    .content-wrapper table {
        width: 100%
    }
</style>
