@page "/progress-bar/progress-segment"
@using Syncfusion.Blazor.ProgressBar
@inject NavigationManager Navigation
@using Syncfusion.Blazor
@inherits SampleBaseComponent;
@*Hidden:Lines*@
<PageTitle>Blazor Progress Bar Progress Segment Example - Syncfusion Demos</PageTitle>
<HeadContent>
    <meta name="description" content="This example demonstrates the Progress Segment in Blazor Progress Bar Component. Explore here for more details." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@

<SampleDescription>
    <p>This example uses a linear and circular progress bar to show the segmented progress of a task.</p>
</SampleDescription>
<ActionDescription>
    <p>With the use of the <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.ProgressBar.SfProgressBar.html#Syncfusion_Blazor_ProgressBar_SfProgressBar_SegmentCount'>SegmentCount</a> and <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.ProgressBar.SfProgressBar.html#Syncfusion_Blazor_ProgressBar_SfProgressBar_GapWidth'>GapWidth</a> properties, this example for Blazor Progress Bar control shows the task's segmented progress.</p>
    <p>More information about the segements in progress bar can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/progress-bar/customization#segments'>documentation section</a>.</p>
</ActionDescription>

<div class="control-section">
    <div class="row linear-parent">
        <div>
            <div class="col-lg-12 col-sm-12 progressbar-mode"></div>
            <SfProgressBar @ref="LinearInstance" Type="ProgressType.Linear" ID="LinearSegment"
                           Height="30" Width="70%" SegmentCount="50" GapWidth="5"
                           Value="@Value" Minimum="0" Maximum="100" CornerRadius="CornerType.Square"
                           Theme="@CurrentTheme"
                           TrackThickness="15"
                           ProgressThickness="15"
                           TrackColor="@ColorTrack">
                <ProgressBarAnimation Enable="true" Duration="2000" Delay="0" />
            </SfProgressBar>
        </div>
        <div>
            <div class="col-lg-12 col-sm-12 progressbar-mode"></div>
            <SfProgressBar @ref="CircularInstance" Type="ProgressType.Circular" ID="CircularSegment"
                           Height="200px" Width="200px" TrackThickness="15" ProgressThickness="15"
                           Value="@Value" Minimum="0" Maximum="100" StartAngle="220"
                           EndAngle="140" SegmentCount="50" GapWidth="5"
                           CornerRadius="CornerType.Square"
                           Theme="@CurrentTheme"
                           TrackColor="@ColorTrack">
                <ProgressBarAnnotations>
                    <ProgressBarAnnotation>
                        <ContentTemplate>
                            @AnnotationContent
                        </ContentTemplate>
                    </ProgressBarAnnotation>
                </ProgressBarAnnotations>
                <ProgressBarAnimation Enable="true" Duration="2000" Delay="0" />
            </SfProgressBar>
        </div>
    </div>
</div>
@code {
    public Theme CurrentTheme { get; set; }
    public RenderFragment AnnotationContent { get; set; }
    public string ColorTrack { get; set; } = null;
    public SfProgressBar LinearInstance, CircularInstance;
    public int Value { get; set; } = 100;
    private string currentUri;
    //Hidden:Lines
    private string canonicalURL { get; set; }
    //End:Hidden

    protected override void OnInitialized()
    {
        //Hidden:Lines
        canonicalURL = Navigation.Uri.Split("?")[0];
        //End:Hidden
        currentUri = Navigation.Uri;
        if (currentUri.Contains("fabric-dark"))
        {
            CurrentTheme = Theme.FabricDark;
            AnnotationContent = @<div id='point1' style='font-size:24px;font-weight:bold;color:#9A9A9A'><span>100%</span></div>;
        }
        else if (currentUri.Contains("fabric"))
        {
            CurrentTheme = Theme.Fabric;
            AnnotationContent = @<div id='point1' style='font-size:24px;font-weight:bold;color:#0078D6'><span>100%</span></div>;
        }
        else if (currentUri.Contains("bootstrap-dark"))
        {
            CurrentTheme = Theme.BootstrapDark;
            AnnotationContent = @<div id='point1' style='font-size:24px;font-weight:bold;color:#9A9A9A'><span>100%</span></div>;
        }
        else if (currentUri.Contains("bootstrap5-dark"))
        {
            CurrentTheme = Theme.Bootstrap5Dark;
            AnnotationContent = @<div id='point1' style='font-size:24px;font-weight:bold;color:#0D6EFD'><span>100%</span></div>;
        }
        else if (currentUri.Contains("bootstrap5"))
        {
            CurrentTheme = Theme.Bootstrap5;
            AnnotationContent = @<div id='point1' style='font-size:24px;font-weight:bold;color:#0D6EFD'><span>100%</span></div>;
        }
        else if (currentUri.Contains("fluent-dark"))
        {
            CurrentTheme = Theme.FluentDark;
            AnnotationContent = @<div id='point1' style='font-size:24px;font-weight:bold;color:#0D6EFD'><span>100%</span></div>;
        }
        else if (currentUri.Contains("fluent"))
        {
            CurrentTheme = Theme.Fluent;
            AnnotationContent = @<div id='point1' style='font-size:24px;font-weight:bold;color:#0D6EFD'><span>100%</span></div>;
        }
        else if (currentUri.Contains("bootstrap4"))
        {
            CurrentTheme = Theme.Bootstrap4;
            AnnotationContent = @<div id='point1' style='font-size:24px;font-weight:bold;color:#007bff'><span>100%</span></div>;
        }
        else if (currentUri.Contains("bootstrap"))
        {
            CurrentTheme = Theme.Bootstrap;
            AnnotationContent = @<div id='point1' style='font-size:24px;font-weight:bold;color:#317ab9'><span>100%</span></div>;
        }
        else if (currentUri.Contains("highcontrast"))
        {
            CurrentTheme = Theme.HighContrast;
            ColorTrack = "#969696";
            AnnotationContent = @<div id='point1' style='font-size:24px;font-weight:bold;color:#FFD939'><span>100%</span></div>;
        }
        else if (currentUri.Contains("tailwind-dark"))
        {
            CurrentTheme = Theme.TailwindDark;
            AnnotationContent = @<div id='point1' style='font-size:24px;font-weight:bold;color:#22D3EE'><span>100%</span></div>;
        }
        else if (currentUri.Contains("tailwind"))
        {
            CurrentTheme = Theme.Tailwind;
            AnnotationContent = @<div id='point1' style='font-size:24px;font-weight:bold;color:#4F46E5'><span>100%</span></div>;
        }
        else if (currentUri.Contains("material-dark"))
        {
            CurrentTheme = Theme.MaterialDark;
            AnnotationContent = @<div id='point1' style='font-size:24px;font-weight:bold;color:#9A9A9A'><span>100%</span></div>;
        }
        else if (currentUri.Contains("material"))
        {
            CurrentTheme = Theme.Material;
            AnnotationContent = @<div id='point1' style='font-size:24px;font-weight:bold;color:#e91e63'><span>100%</span></div>;
        }
    }
}

<style>
    #control-container {
        padding: 0px !important;
    }

    .linear-parent {
        text-align: center;
        width: 75%;
        margin: auto;
    }

    .linear-button {
        text-align: center;
        padding: 2%;
    }

    .progressbar-mode {
        text-align: left;
        font-family: Roboto-Regular;
        font-size: 14px;
        color: #3D3E3C;
        margin-left: 10px;
        margin-top: 5%;
        padding: 0px;
        top: 20px;
    }

    #reLoad {
        border-radius: 4px;
        text-transform: capitalize;
    }
</style>