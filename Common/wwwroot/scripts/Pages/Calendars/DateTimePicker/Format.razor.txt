@page "/DateTime-Picker/Format"

@using Syncfusion.Blazor.Calendars
@using Syncfusion.Blazor.DropDowns
@inherits SampleBaseComponent;
@*Hidden:Lines*@
@inject NavigationManager NavigationManager

<PageTitle>Blazor DateTime Picker Format Example - Syncfusion Demos</PageTitle>

<HeadContent>
    <meta name="description" content="This example demonstrates the Format in Blazor DateTime Picker Component. Explore here for more details." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@
<SampleDescription>
   <p> In this example, the DateTimePicker has been configured with the <b>dd-MMM-yy hh:mm tt</b> date format.</p>
</SampleDescription>
<ActionDescription>
    <p>Date Formats example explains the support of custom date format in the DateTimePicker component by using the <a href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Calendars.DateTimePickerModel-1.html#Syncfusion_Blazor_Calendars_DateTimePickerModel_1_Format' target='_blank'> Format</a> property. Use the <a href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Calendars.DateTimePickerModel-1.html#Syncfusion_Blazor_Calendars_DateTimePickerModel_1_TimeFormat' target='_blank'> TimeFormat</a> property to format the displayed time value in the popup list.</p>
</ActionDescription>

<div class="col-lg-12">
    <div class="col-lg-8 control-section sb-property-border">
        <div class="control-wrapper">
            <label class="example-label">Select Date and Time</label>
            <SfDateTimePicker TValue="DateTime?" CssClass="@CssClass" Value="@DateTimeValue" Format="@FormatString" ShowClearButton="true"></SfDateTimePicker>
        </div>
    </div>
    <div class="col-lg-4">
        <div class='property-panel-section'>
            <div class="property-panel-header">Properties</div>
            <div class="property-panel-content">
                <label class="example-label">Choose a format</label>
                <SfDropDownList TItem="DateFormat" TValue="string" PopupHeight="230px" @bind-Index="@Index" DataSource="@Formats">
                    <DropDownListEvents TValue="string" TItem="DateFormat" ValueChange="OnChange"></DropDownListEvents>
                    <DropDownListFieldSettings Text="Text" Value="ID"></DropDownListFieldSettings>
                </SfDropDownList>
            </div>
        </div>
    </div>
</div>

<style>
    .control-section {
        min-height: 370px;
    }

    .control-wrapper {
        max-width: 275px;
        margin: 0 auto;
        padding: 50px 0px 0px;
    }
    
    .example-label {
        font-size: 14px;
        margin-bottom: 6px;
    }

    .property-panel-content {
        padding: 0px 0px 15px 0px;
    }

    .property-panel-content:last-child {
        padding: 0px 0px 40px 0px;
    }
</style>

@code{
    private int? Index { get; set; } = 0;
    public DateTime DateTimeValue { get; set; } = DateTime.Now;
    private string textValue { get; set; }
    public string CssClass { get; set; } = "e-popup-expand";
   
    //Hidden:Lines
    private string canonicalURL { get; set; }
    protected override void OnInitialized()
    {
        canonicalURL = NavigationManager.Uri.Split("?")[0];
    }
    //End:Hidden
    public class DateFormat
    {
        public string ID { get; set; }

        public string Text { get; set; }
    }
    public string FormatString { get; set; } = "dd-MMM-yy hh:mm tt";
    private List<DateFormat> Formats = new List<DateFormat>() {
        new DateFormat(){ ID= "format1", Text= "dd-MMM-yy hh:mm tt" },
        new DateFormat(){ ID= "format2", Text= "yyyy-MM-dd HH:mm" }
     };
    public void OnChange(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string, DateFormat> args)
    {
        this.FormatString = args.ItemData?.Text;
    }
}