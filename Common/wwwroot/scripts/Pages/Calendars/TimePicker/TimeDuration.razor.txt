@page "/TimePicker/Time-Duration"

@using Syncfusion.Blazor.Calendars;

@inherits SampleBaseComponent;
@*Hidden:Lines*@
@inject NavigationManager NavigationManager

<PageTitle>Blazor TimePicker Time Duration Example - Syncfusion Demos</PageTitle>

<HeadContent>
    <meta name="description" content="This example demonstrates the Time Duration in Blazor TimePicker Component. Explore here for more details." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@
<SampleDescription>
    <p>The following example demonstrates the popup list element in specific time duration. Click/Touch the TimePicker popup icon to select the desired value.</p>
</SampleDescription>
<ActionDescription>
    <p>The Time Duration example illustrates, how to customize or disable the time values in the time list popup by using the <a href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Calendars.TimePickerEvents-1.html#Syncfusion_Blazor_Calendars_TimePickerEvents_1_OnItemRender' target='_blank'>OnItemRender</a> event. Here, all the time values have additional information on duration between them in sequence and some of the values are disabled through <a href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Calendars.TimePickerEvents-1.html#Syncfusion_Blazor_Calendars_TimePickerEvents_1_OnItemRender' target='_blank'>OnItemRender</a> event by adding the <b>e-disabled</b> class. By using the <a href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Calendars.SfTimePicker-1.html#Syncfusion_Blazor_Calendars_SfTimePicker_1_ScrollTo' target='_blank'>ScrollTo</a> property, you can set the scroll position to the given value when no value is selected or the selected value is not available in the timepicker popup list.</p>
</ActionDescription>

<div class="control-section col-lg-12">
    <div class="control-wrapper">
        <label class="example-label">Select a Time</label>
        <SfTimePicker TValue="DateTime?" ScrollTo="@ScrollValue" @ref="@TimePickerObj" ShowClearButton="true">
            <TimePickerEvents TValue="DateTime?" OnItemRender="@ItemRenderHandler" OnOpen="@open"></TimePickerEvents>
        </SfTimePicker>
    </div>
</div>

<style>
    .control-wrapper {
        max-width: 200px;
        margin: 0 auto;
        padding: 50px 0px 0px;
    }

    .example-label {
        font-size: 14px;
        margin-bottom: 6px;
    }
</style>

@code {
    SfTimePicker <DateTime?> TimePickerObj;
    private DateTime? ScrollValue { get; set; }
    private DateTime? StartTime;
    private TimeSpan? Minutes;
    //Hidden:Lines
    private string canonicalURL { get; set; }
    protected override void OnInitialized()
    {
        canonicalURL = NavigationManager.Uri.Split("?")[0];
    }
    //End:Hidden
    private void open(PopupEventArgs args)
    {
        if (TimePickerObj.Value != null)
        {
            ScrollValue = TimePickerObj.Value;
        }
    }
    private void ItemRenderHandler(ItemEventArgs<DateTime?> args)
    {
        if (args.Value.Value.Hour == 0 && args.Value.Value.Minute == 0 && args.Value.Value.Second == 0)
        {
            StartTime = args.Value;
        }
        Minutes = (args.Value - StartTime) / 60000;
        if ((Minutes.Value.TotalMilliseconds / 60) % 3 == 0)
        {
            args.IsDisabled = true;
        }
    }
}