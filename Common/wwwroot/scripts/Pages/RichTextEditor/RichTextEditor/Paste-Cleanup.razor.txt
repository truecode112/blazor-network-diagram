
@page "/rich-text-editor/paste-cleanup"
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.RichTextEditor
@inherits SampleBaseComponent;
@*Hidden:Lines*@
@inject NavigationManager NavigationManager
<PageTitle>Blazor Rich Text Editor Paste Cleanup Example - Syncfusion Demos</PageTitle>
<HeadContent>
    <meta name="description" content="This example demonstrates the Paste Cleanup in Blazor Rich Text Editor Component. Explore here for more details." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@

<SampleDescription>
    <p>This example demonstrates the paste options in Rich Text Editor control. 
       The Blazor Rich Text Editor offers built-in option to paste content from Microsoft Word, Microsoft Outlook, Microsoft Excel and other websites by filtering out tags, attributes, and styles. 
       Copy content from Microsoft Office or other website and paste it into the editor, where it is cleaned up and pasted based on the settings in the properties panel.
   </p>
</SampleDescription>
<ActionDescription>
    <p>The Rich Text Editor allows to paste the HTML content from Microsoft Word, Microsoft Outlook, Microsoft Excel and other websites. The editor cleanup (filters tags, attributes, and styles) the pasted HTML content as follows,</p>
    <ul>
        <li>The unformatted HTML element (MOS XML format) content to standard HTML elements.</li>
        <li>The Microsoft Office prefixed style properties is converted to proper CSS style properties.</li>
        <li>The unwanted tags, CSS styles, and comments are removed from the copied content.</li>
    </ul>
    <p>The Rich Text Editor cleanup (filters tags, attributes, and styles) the pasted content based on properties of <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.RichTextEditor.RichTextEditorPasteCleanupSettings.html">RichTextEditorPasteCleanupSettings</a>.</p>
    <ul>
        <li>
            <p>Select any option in <code>Format Option</code> drop down list for the paste content.
            <ul>
                <li>Select the <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.RichTextEditor.RichTextEditorPasteCleanupSettings.html#Syncfusion_Blazor_RichTextEditor_RichTextEditorPasteCleanupSettings_Prompt">Prompt</a> option to invoke prompt dialog with paste options on pasting the content in editor.</li>
                <li>Select the <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.RichTextEditor.RichTextEditorPasteCleanupSettings.html#Syncfusion_Blazor_RichTextEditor_RichTextEditorPasteCleanupSettings_PlainText">Plain Text</a> option to paste the content as plain text.</li>
                <li>Select the <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.RichTextEditor.RichTextEditorPasteCleanupSettings.html#Syncfusion_Blazor_RichTextEditor_RichTextEditorPasteCleanupSettings_KeepFormat">Keep Format</a> option to keep the same format in the copied content.</li>
                <li>Select the <code>Clean Format</code> option to remove the style format in the copied content.</li>
            </ul>
            </p>
        </li>
        <li>
            <p>Fill the <code>Denied Tags</code> text box to ignore the tags when pasting HTML content. For example:
            <ul>
                <li><b>['a[!href]']</b> - paste the content by filtering anchor tags that don’t have the 'href' attribute.</li>
                <li><b>['a[href, target]']</b> - paste the content by filtering anchor tags that have the 'href' and 'target' attributes.</li>
            </ul>
            </p>
        </li>
        <li>
            <p>Fill the <code>Denied Attributes</code> to paste the content by filtering out these attributes from the content. For example:
            <ul>
                <b>['id', 'title']</b> - This will remove the attributes 'id' and 'title' from all tags.
            </ul>
            </p>
        </li>
        <li>
            <p>Fill the <code>Allowed Style properties</code> to paste the content by accepting these style attributes and removing other attributes. For example:
                <ul>
                <b>['color', 'margin']</b> - This will allow only the style properties 'color' and 'margin' in each pasted element.
                </ul>
            </p>
        </li>
    </ul>
</ActionDescription>

<div class="col-lg-8 control-section">
    <div class="">
        <SfRichTextEditor Value="@Value">
            <RichTextEditorPasteCleanupSettings Prompt="@Prompt" PlainText="@Plaintext" KeepFormat="@Keepformat" DeniedAttributes="@Deniedattr"
                                                AllowedStyleProperties="@Allowedstyle" DeniedTags="@Deniedtags" />
        </SfRichTextEditor>
    </div>
</div>
<div class="col-lg-4 property-section">
    <div title="Properties">
        <table id="property" title="Properties">
            <tbody>
                <tr>
                    <td>
                        <div>Format Option</div>
                    </td>
                    <td>
                        <div>
                            <SfDropDownList @ref="DropObj" TItem="PasteOptions" TValue="string" PopupHeight="200px" @bind-Value="pasteDefaultValue" DataSource="@Options">
                                <DropDownListFieldSettings Text="Text" Value="ID" />
                                <DropDownListEvents TValue="string" TItem="PasteOptions" ValueChange="valueChange" />
                            </SfDropDownList>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div>Denied Tags </div>
                    </td>
                    <td>
                        <div>
                            <input type="text" @bind="@deniedTagsText" class="e-input" @onblur="deniedTagsblur" placeholder="img[!href], h1" />
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div>Denied Attributes </div>
                    </td>
                    <td>
                        <div>
                            <input type="text" @bind="@deniedAttributesText" class="e-input" @onblur="deniedAttributesblur" placeholder="id, title" />
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div>Allowed Style Properties </div>
                    </td>
                    <td>
                        <div>
                            <input type="text" @bind="@allowedStylePropertiesText" class="e-input" @onblur="allowedStylePropertiesblur" placeholder="href, style" />
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

<style>
    .property-section table td {
        width: 50%;
    }

    .property-section table div {
        padding-left: 10px;
        padding-top: 10px;
    }
</style>

@code {
    SfDropDownList<string, PasteOptions> DropObj;

    private string pasteDefaultValue { get; set; } = "prompt";
    private bool Prompt = true;
    private bool Plaintext = false;
    private bool Keepformat = false;

    private string deniedTagsText;
    private string deniedAttributesText;
    private string allowedStylePropertiesText;

    private string[] Deniedtags { get; set; }
    private string[] Deniedattr { get; set; }
    //Hidden:Lines
    private string canonicalURL { get; set; }

    protected override void OnInitialized()
    {
        canonicalURL = NavigationManager.Uri.Split("?")[0];
    }
    //End:Hidden
    private string[] Allowedstyle { get; set; } = new string[]
    {
        "background", "background-color", "border", "border-bottom", "border-left", "border-radius",
        "border-right", "border-style", "border-top", "border-width", "clear", "color", "cursor",
        "direction", "display", "float", "font", "font-family", "font-size", "font-weight", "font-style",
        "height", "left", "line-height", "margin", "margin-top", "margin-left",
        "margin-right", "margin-bottom", "max-height", "max-width", "min-height", "min-width",
        "overflow", "overflow-x", "overflow-y", "padding", "padding-bottom", "padding-left", "padding-right",
        "padding-top", "position", "right", "table-layout", "text-align", "text-decoration", "text-indent",
        "top", "vertical-align", "visibility", "white-space", "width"
    };

    private string Value { get; set; } = @"<p>Rich Text Editor is a WYSIWYG editing control that will reduce the effort for users while trying to express their formatting word content as HTML or Markdown format.</p><p><b>Paste Cleanup properties:</b></p><ul><li><p>Prompt - specifies whether to enable the prompt when pasting in Rich Text Editor.</p></li><li><p>PlainText - specifies whether to paste as plain text or not in Rich Text Editor.</p></li><li><p>KeepFormat- specifies whether to keep or remove the format when pasting in Rich Text Editor.</p></li><li><p>DeniedTags - specifies the tags to restrict when pasting in Rich Text Editor.</p></li><li><p>DeniedAttributes - specifies the attributes to restrict when pasting in Rich Text Editor.</p></li><li><p>AllowedStyleProperties - specifies the allowed style properties when pasting in Rich Text Editor.</p></li></ul>";

    private class PasteOptions
    {
        public string ID { get; set; }
        public string Text { get; set; }
    }

    private List<PasteOptions> Options = new List<PasteOptions>()
    {
        new PasteOptions(){ ID= "prompt", Text= "Prompt" },
        new PasteOptions(){ ID= "plainText", Text= "Plain Text" },
        new PasteOptions(){ ID= "keepFormat", Text= "Keep Format" },
        new PasteOptions(){ ID= "cleanFormat", Text= "Clean Format" },
    };

    private void valueChange(@Syncfusion.Blazor.DropDowns.ChangeEventArgs<string, PasteOptions> args)
    {
        if (args.Value == "prompt")
        {
            this.Prompt = true;
        }
        else if (args.Value == "plainText")
        {
            this.Prompt = false;
            this.Plaintext = true;
        }
        else if (args.Value == "keepFormat")
        {
            this.Prompt = false;
            this.Plaintext = false;
            this.Keepformat = true;
        }
        else if (args.Value == "cleanFormat")
        {
            this.Prompt = false;
            this.Plaintext = false;
            this.Keepformat = false;
        }
    }

    private void deniedTagsblur(Microsoft.AspNetCore.Components.Web.FocusEventArgs e)
    {
        if (this.deniedTagsText != null)
        {
            this.Deniedtags = this.deniedTagsText.Split(',');
        }
    }

    private void deniedAttributesblur(Microsoft.AspNetCore.Components.Web.FocusEventArgs e)
    {
        if (this.deniedAttributesText != null)
        {
            this.Deniedattr = this.deniedAttributesText.Split(',');
        }
    }

    private void allowedStylePropertiesblur(Microsoft.AspNetCore.Components.Web.FocusEventArgs e)
    {
        if (this.allowedStylePropertiesText != null)
        {
            this.Allowedstyle = this.allowedStylePropertiesText.Split(',');
        }
    }
}