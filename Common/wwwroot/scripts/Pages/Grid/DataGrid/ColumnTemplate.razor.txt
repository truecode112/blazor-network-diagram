@page "/datagrid/column-template"

@using Syncfusion.Blazor.Grids
@using BlazorDemos
@using blazor_griddata
@inherits SampleBaseComponent;
@inject Microsoft.AspNetCore.Components.NavigationManager UriHelper
@*Hidden:Lines*@
@inject NavigationManager NavigationManager
<PageTitle>Blazor DataGrid Column Template Example - Syncfusion Demos</PageTitle>
<HeadContent>
    <meta name="description" content="This example demonstrates the Column Template in Blazor DataGrid Component. Explore here for more details." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@

<SampleDescription>
 <p>This sample shows how to use the DataGrid component's column template feature.</p>   
</SampleDescription>
<ActionDescription>
    <p>Using the <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Grids.GridColumn.html#Syncfusion_Blazor_Grids_GridColumn_Template'>Template</a> property, the Blazor DataGrid allows you to use a custom layout to display custom element values or content for each column. To specify custom content, use the <a target='_blank' href='https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.Blazor.Grids.GridColumn.html'>GridColumn</a> component's of <code>Template</code> component. You can access the data within the <code>Template</code> by using the implicit named parameter <strong>Context</strong>.</p>
   <p>In this demo, the column template displays an <b>Employee Image</b> column with an employee photo.</p>
   <p>More information about the Column Template feature can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/datagrid/columns#column-template'>documentation</a> section.</p>
</ActionDescription>

@*Hidden:Lines*@
<style>
    .image img {
        height: 55px;
        width: 55px;
        border-radius: 50px;
        box-shadow: inset 0 0 1px #e0e0e0, inset 0 0 14px rgba(0,0,0,0.2);
    }
</style>
@*End:Hidden*@

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <SfGrid DataSource="@GridData" Height="359">
                <GridColumns>
                    <GridColumn HeaderText="Employee Image" Width="120">
                        <Template>
                            @{
                                var EmployeeInfo = (context as Employee);
                                <div class="image">
                                    <img src="@UriHelper.ToAbsoluteUri($"{SampleService.WebAssetsPath}images/data-grid/{EmployeeInfo.EmployeeID}.png")" alt="@EmployeeInfo.EmployeeID" />
                                </div>
                            }
                        </Template>
                    </GridColumn>
                    <GridColumn Field=@nameof(Employee.EmployeeID) HeaderText="Employee ID" TextAlign="TextAlign.Right" Width="120"></GridColumn>
                    <GridColumn Field=@nameof(Employee.FirstName) HeaderText="Name" Width="120"></GridColumn>
                    <GridColumn Field=@nameof(Employee.Title) Width="150"></GridColumn>
                    <GridColumn Field=@nameof(Employee.HireDate) HeaderText="Hire Date" Format="d" Type="ColumnType.Date" TextAlign="TextAlign.Right"  Width="160"></GridColumn>
                </GridColumns>
            </SfGrid>
        </div>
    </div>
</div>

@code{

    public List<Employee> GridData { get; set; }
    //Hidden:Lines
    private string canonicalURL { get; set; }
    //End:Hidden

    protected override void OnInitialized()
    {
        //Hidden:Lines
        canonicalURL = NavigationManager.Uri.Split("?")[0];
        //End:Hidden
        GridData = Employee.GetAllRecords();
    }
}
