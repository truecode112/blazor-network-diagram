@page "/signature/default-functionalities"

@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Buttons
@inherits SampleBaseComponent
@*Hidden:Lines*@
@inject NavigationManager NavigationManager
<PageTitle>Blazor Signature Default Functionalities Example - Syncfusion Demos</PageTitle>
<HeadContent>
    <meta name="description" content="This example demonstrates the Default Functionalities in Blazor Signature Component. Explore here for more details." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@

<SampleDescription>
    <p>This sample demonstrates the basic rendering of the <b>Blazor Signature</b> component with the save and clear option.</p>
</SampleDescription>
<ActionDescription>
    <p>The Blazor Signature component used to capture smooth and realistic signatures by allowing users to draw signatures.
        In this sample, you can draw the signature. Use the <b>Save</b> button to store the signature as an image file, and the <b>Clear</b> button to erase the signature.</p>
    <p> More information about Blazor Signature component can be found in this <a target="_blank" href="https://blazor.syncfusion.com/documentation/signature/getting-started/">documentation</a> section.</p>
</ActionDescription>

<div class="control-section">
    <div id="signature-control">
        <div class='e-sign-heading'>
            <span id="signdescription">Sign below</span>
            <span class="e-btn-options">
                <SfButton @ref="saveButton" Disabled="saveDisabled" IsPrimary="true" class="e-sign-save" @onclick="onSave">Save</SfButton>
                <SfButton @ref="clearButton" Disabled="clearDisabled" IsPrimary="true" class="e-sign-clear" @onclick="onClear">Clear</SfButton>
            </span>
        </div>
        <SfSignature @ref="signature" Changed="OnChange" style="height:100%; width: 100%;"></SfSignature>
    </div>
</div>

@code{
    private SfSignature signature;
    private SfButton saveButton;
    private SfButton clearButton;
    private bool saveDisabled = true;
    private bool clearDisabled = true;
    //Hidden:Lines
    private string canonicalURL { get; set; }

    protected override void OnInitialized()
    {
        canonicalURL = NavigationManager.Uri.Split("?")[0];
    }
    //End:Hidden

    private void OnChange()
    {
        clearDisabled = false;
        saveDisabled = false;
    }

    private async Task onSave()
    {
        await signature.SaveAsync();
        clearDisabled = true;
    }

    private async Task onClear()
    {
        await signature.ClearAsync();
        saveDisabled = true;
    }
}


<style>
    #signature-control h4 {
        margin-bottom: 20px;
        text-align: center;
    }

    #signdescription {
        font-size: 14px;
        padding-bottom: 10px;
    }

    .e-sign-clear {
        margin-left: 5px;
    }

    .e-btn-options {
        float: right;
        margin-bottom: 10px;
    }

    #signature-control {
        width: 100%;
        margin: 0;
        height: 270px;
    }

    .e-bigger #signature-control h4 {
        font-size: 20px;
    }
</style>