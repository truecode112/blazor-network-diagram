@page "/arc-gauge/customer-satisfaction-score"

@using Syncfusion.Blazor
@using Syncfusion.Blazor.CircularGauge
@using ThemeHelper
@inject NavigationManager NavigationManager
@inherits SampleBaseComponent;

@*Hidden:Lines*@
<PageTitle>Blazor Arc Gauge Example | Customer Satisfaction Score | Syncfusion Demos</PageTitle>

<HeadContent>
    <meta name="description" content="This example demonstrates the Customer Satisfaction Score in Blazor Arc Gauge Component. Explore here for more details." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@

<SampleDescription>
    <p>This sample shows an arc gauge with a real-time scenario of a customer satisfaction score ranging from 0 to 10.</p>
</SampleDescription>
<ActionDescription>
    <p>In this example, you can see how to render an arc gauge showing customer satisfaction score. You can use <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.CircularGauge.CircularGaugeAxis.html">CircularGaugeAxes</a>, <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.CircularGauge.CircularGaugeRange.html">CircularGaugeRanges</a>, <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.CircularGauge.CircularGaugeAnnotation.html">CirculargaugeAnnotations</a>, <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.CircularGauge.CircularGaugeLegendSettings.html">CircularGaugeLegendSettings</a> and <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.CircularGauge.CircularGaugeTooltipSettings.html">CircularGaugeTooltipSettings</a> oriented properties to customize the appearance of the arc gauge, in order to achieve the desired outcome.</p>
    <p>More information on the arc gauge can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/circular-gauge/getting-started'>documentation section</a>.</p>
</ActionDescription>

<div class="control-section" align="center">
<SfCircularGauge Title="Customer Satisfaction Score" Height="400px" AllowMargin="false" CenterY="63%" Theme="@Theme">
        <CircularGaugeTitleStyle Size="18px" FontFamily="inherit" FontWeight="@FontWeight"></CircularGaugeTitleStyle>
         <CircularGaugeLegendSettings Width="55%" Shape="GaugeShape.Circle" Alignment="Alignment.Center" ToggleVisibility="true" Visible="true" Position="LegendPosition.Bottom">
            <CircularGaugeLegendTextStyle FontFamily="inherit" Size="12px"></CircularGaugeLegendTextStyle>
        </CircularGaugeLegendSettings>
        <CircularGaugeAxes>
            <CircularGaugeAxis StartAngle="270" EndAngle="90" Minimum="0" Maximum="10" Radius="125%">
            <CircularGaugeAxisLineStyle Width="0"></CircularGaugeAxisLineStyle>
            <CircularGaugeAxisLabelStyle Position="Position.Outside" Offset="-18">
                <CircularGaugeAxisLabelFont Size="12px" FontFamily="inherit">
                </CircularGaugeAxisLabelFont>
            </CircularGaugeAxisLabelStyle>
            <CircularGaugeAxisMajorTicks Height="12" Width="1.5" Interval="2" Offset="16">
            </CircularGaugeAxisMajorTicks>
            <CircularGaugeAxisMinorTicks Height="0" Width="0">
            </CircularGaugeAxisMinorTicks>
            <CircularGaugeRanges>
                    <CircularGaugeRange Start="0" End="2" StartWidth="40" EndWidth="40" Color="#F03E3E" Radius="90%" LegendText="Poor"></CircularGaugeRange>
                <CircularGaugeRange Start="6.5" End="9.5" StartWidth="120" EndWidth="120" Color="#0477c2" Radius="120%" LegendText="Average Score"></CircularGaugeRange>
                <CircularGaugeRange Start="2" End="6" StartWidth="40" EndWidth="40" Color="#f6961e" Radius="90%" LegendText="Satisfied"></CircularGaugeRange>
                    <CircularGaugeRange Start="6" End="8" StartWidth="40" EndWidth="40" Color="#FFDD00" Radius="90%" LegendText="Good"></CircularGaugeRange>
                    <CircularGaugeRange Start="8" End="10" StartWidth="40" EndWidth="40" Color="#30B32D" Radius="90%" LegendText="Excellent"></CircularGaugeRange>
            </CircularGaugeRanges>
            <CircularGaugeTooltipSettings  Enable="true">
                 <TooltipTemplate>
                     <div style="font-size:18px;background:white;color:#595959;border:1px solid #e8e8e8;">Current Score: 7.5 </div>
                 </TooltipTemplate>
            </CircularGaugeTooltipSettings >
            <CircularGaugePointers>
                <CircularGaugePointer Value="7.5" Radius="80%" NeedleEndWidth="2" PointerWidth="5">
                    <CircularGaugeCap Radius="8">
                        <CircularGaugeCapBorder Width="2"></CircularGaugeCapBorder>
                    </CircularGaugeCap>
                </CircularGaugePointer>
                <CircularGaugePointer Type="PointerType.Marker" MarkerShape="GaugeShape.Rectangle" MarkerWidth="40" MarkerHeight="0.5" Radius="78%" Value="6.5" Color="#0477c2">
                        <CircularGaugePointerAnimation Enable="false"></CircularGaugePointerAnimation>
                </CircularGaugePointer>
                <CircularGaugePointer Type="PointerType.Marker" MarkerShape="GaugeShape.Rectangle" MarkerWidth="40" MarkerHeight="0.5" Radius="78%" Value="9.5" Color="#0477c2">
                        <CircularGaugePointerAnimation Enable="false"></CircularGaugePointerAnimation>
                </CircularGaugePointer>
            </CircularGaugePointers>
            <CircularGaugeAnnotations>
                <CircularGaugeAnnotation Angle="40" ZIndex="1" Radius="-9%">
                    <ContentTemplate>
                        <div style="font-size:16px;margin-top:5px;font-family:inherit;">7.5</div>
                    </ContentTemplate>
                </CircularGaugeAnnotation>
            </CircularGaugeAnnotations>
        </CircularGaugeAxis>
    </CircularGaugeAxes>
</SfCircularGauge>
</div>

@code {
    //Hidden:Lines
    private string canonicalURL { get; set; }
    //End:Hidden

    public Theme Theme { get; set; }
    public string FontWeight = "500";

    protected override void OnInitialized()
    {
        //Hidden:Lines
        canonicalURL = NavigationManager.Uri.Split("?")[0];
        //End:Hidden
        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
        if (Theme == Theme.Bootstrap5 || Theme == Theme.Bootstrap5Dark || Theme == Theme.Tailwind || Theme == Theme.TailwindDark)
        {
            FontWeight = "500";
        }
        else if (Theme == Theme.Fluent ||Theme == Theme.FluentDark)
        {
            FontWeight = "600";
        }
        else
        {
            FontWeight = "normal";
        }
    }    
}