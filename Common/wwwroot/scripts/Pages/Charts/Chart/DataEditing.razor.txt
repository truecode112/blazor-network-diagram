@page "/chart/data-editing"

@using Syncfusion.Blazor
@using ThemeHelper
@using Syncfusion.Blazor.Charts

@inject NavigationManager NavigationManager
@inherits SampleBaseComponent;
@*Hidden:Lines*@
<PageTitle>Blazor Charts Data Editing Example - Syncfusion Demos</PageTitle>
<HeadContent>
    <meta name="description" content="This example demonstrates the Data Editing in Blazor Charts Component. Explore here for more details." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@

<SampleDescription>
    <p>This sample shows the behavior of the data editing in the chart. Drag and drop the points to change the data values dynamically.</p>
</SampleDescription>
<ActionDescription>
    <p>In this example, you can see how to drag and drop the data points in the chart by setting <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Charts.ChartDataEditSettings.html#Syncfusion_Blazor_Charts_ChartDataEditSettings_Enable'>Enable</a> property in <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Charts.ChartDataEditSettings.html'>ChartDataEditSettings</a> to <b>true</b>. Also, you can set data editing’s minimum and maximum range using the <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Charts.ChartDataEditSettings.html#Syncfusion_Blazor_Charts_ChartDataEditSettings_MinY'>MinY</a> and <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Charts.ChartDataEditSettings.html#Syncfusion_Blazor_Charts_ChartDataEditSettings_MaxY'>MaxY</a> properties.</p> 
     <code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    <p>More information about the data editing can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/chart/data-editing/'>documentation section</a>.</p>
</ActionDescription>

<div class="control-section" align='center'>
    <SfChart Title="Electricity - Production" Width="@Width" Theme="@Theme">
        <ChartArea>
            <ChartAreaBorder Width="0"></ChartAreaBorder>
        </ChartArea>
        <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category" LabelFormat="yyyy"
                           IntervalType="IntervalType.Years" EdgeLabelPlacement="EdgeLabelPlacement.Shift">
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
        </ChartPrimaryXAxis>
        <ChartPrimaryYAxis LabelFormat="{value}B" Title="Production(Billion in kWh)" RangePadding="ChartRangePadding.None" Minimum="0" Maximum="100"
                           Interval="20">
            <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
        </ChartPrimaryYAxis>
        <ChartTooltipSettings Enable="true"></ChartTooltipSettings>
        <ChartSeriesCollection>
            <ChartSeries DataSource="@ConsumerDetails" XName="Period" Width="2"
                         Opacity="1" YName="ProductA_Sales" Name="Renewable" Type="ChartSeriesType.Column">
                <ChartMarker Visible="true" Width="7" Height="7">
                </ChartMarker>
                <ChartDataEditSettings Enable="true"></ChartDataEditSettings>
            </ChartSeries>
            <ChartSeries DataSource="@ConsumerDetails" Name="Non-Renewable" XName="Period" Width="2"
                         Opacity="1" YName="ProductB_Sales" Type="ChartSeriesType.Line">
                <ChartMarker Visible="true" Width="7" Height="7" IsFilled="true">
                </ChartMarker>
                <ChartDataEditSettings Enable="true"></ChartDataEditSettings>
            </ChartSeries>
        </ChartSeriesCollection>
        <ChartLegendSettings Visible="true"></ChartLegendSettings>
    </SfChart>
</div>

@code{

    //Hidden:Lines
    private string canonicalURL { get; set; }
    //End:Hidden
    private Theme Theme { get; set; }
    public string Width { get; set; } = "90%";
    public List<ChartData> ConsumerDetails { get; set; } = new List<ChartData>
    {
        new ChartData { Period = 2005, ProductA_Sales = 21, ProductB_Sales = 28 },
        new ChartData { Period = 2006, ProductA_Sales = 24, ProductB_Sales = 44 },
        new ChartData { Period = 2007, ProductA_Sales = 36, ProductB_Sales = 48 },
        new ChartData { Period = 2008, ProductA_Sales = 38, ProductB_Sales = 50 },
        new ChartData { Period = 2009, ProductA_Sales = 54, ProductB_Sales = 66 },
        new ChartData { Period = 2010, ProductA_Sales = 57, ProductB_Sales = 78 },
        new ChartData { Period = 2011, ProductA_Sales = 70, ProductB_Sales = 84 },
    };

    protected override void OnInitialized()
    {
        //Hidden:Lines
        canonicalURL = NavigationManager.Uri.Split("?")[0];
        //End:Hidden
        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
        if (SampleService.IsDevice)
        {
            Width = "100%";
        }
    }

    public class ChartData
    {
        public double Period { get; set; }
        public double ProductA_Sales { get; set; }
        public double ProductB_Sales { get; set; }
    }
}