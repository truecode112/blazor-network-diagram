@page "/chart/range-bar"

@using Syncfusion.Blazor
@using ThemeHelper
@using Syncfusion.Blazor.Charts

@inject NavigationManager NavigationManager
@inherits SampleBaseComponent;
@*Hidden:Lines*@
<PageTitle>Blazor Charts Range Bar Example - Syncfusion Demos</PageTitle>
<HeadContent>
    <meta name="description" content="This example demonstrates the Range Bar in Blazor Charts Component. Explore here for more details." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@

<SampleDescription>
    <p>This sample shows the maximum and minimum temperatures for several months with the default range column series inverted. The tooltip shows the information for each data point.</p>
</SampleDescription>
<ActionDescription>
    <p>In this example, you can see how to render and configure the range column chart in an inverted manner. You can use <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Charts.SfChart.html#Syncfusion_Blazor_Charts_SfChart_IsTransposed'>IsTransposed</a> property to invert your chart.</p>
    <p><code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover over a point or tap on a point in touch-enabled devices.</p>
</ActionDescription>

<div class="control-section" align='center'>
    <SfChart Title="Temperature Variation" IsTransposed="true" Width="@Width" Theme="@Theme">        
        <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
        <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category">
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
        </ChartPrimaryXAxis>
        <ChartPrimaryYAxis Title="Temperature (In Fahrenheit)" EdgeLabelPlacement="EdgeLabelPlacement.Shift" LabelFormat="{value}˚F">
            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
            <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
        </ChartPrimaryYAxis>
        <ChartSeriesCollection>
            <ChartSeries TooltipMappingName="Text" DataSource="@ChartPoints" XName="Month" High="CA_HighTemp" Low="CA_LowTemp" ColumnSpacing="0.1" Type="ChartSeriesType.RangeColumn">
                <ChartMarker>
                    <ChartDataLabel Visible="true" Position="LabelPosition.Outer">
                    </ChartDataLabel>
                </ChartMarker>
            </ChartSeries>            
        </ChartSeriesCollection>
        <ChartTooltipSettings Header="<b>${point.tooltip}</b>" EnableMarker="false" Enable="true" Format="Temperature : <b>${point.low} - ${point.high}</b>"></ChartTooltipSettings>
    </SfChart>
</div>

@code{

    //Hidden:Lines
    private string canonicalURL { get; set; }
    //End:Hidden
    private Theme Theme { get; set; }
    public string Width { get; set; } = "90%";
    public List<RangeBarChartData> ChartPoints = new List<RangeBarChartData>
    {
        new RangeBarChartData { Month = "Jan", CA_LowTemp = 28, CA_HighTemp = 72, Text = "January", CO_LowTemp = 38, CO_HighTemp = 78 },
        new RangeBarChartData { Month = "Feb", CA_LowTemp = 25, CA_HighTemp = 75, Text = "February", CO_LowTemp = 38, CO_HighTemp = 78 },
        new RangeBarChartData { Month = "Mar", CA_LowTemp = 18, CA_HighTemp = 65, Text = "March", CO_LowTemp = 27, CO_HighTemp = 78 },
        new RangeBarChartData { Month = "Apr", CA_LowTemp = 22, CA_HighTemp = 69, Text = "April", CO_LowTemp = 38, CO_HighTemp = 78 },
        new RangeBarChartData { Month = "May", CA_LowTemp = 56, CA_HighTemp = 87, Text = "May", CO_LowTemp = 28, CO_HighTemp = 79 },
        new RangeBarChartData { Month = "Jun", CA_LowTemp = 48, CA_HighTemp = 75, Text = "June", CO_LowTemp = 38, CO_HighTemp = 78 },
        new RangeBarChartData { Month = "Jul", CA_LowTemp = 40, CA_HighTemp = 78, Text = "July", CO_LowTemp = 37, CO_HighTemp = 66 },
        new RangeBarChartData { Month = "Aug", CA_LowTemp = 35, CA_HighTemp = 73, Text = "August", CO_LowTemp = 38, CO_HighTemp = 78 },
        new RangeBarChartData { Month = "Sep", CA_LowTemp = 43, CA_HighTemp = 64, Text = "September", CO_LowTemp = 25, CO_HighTemp = 52 },
        new RangeBarChartData { Month = "Oct", CA_LowTemp = 38, CA_HighTemp = 77, Text = "October", CO_LowTemp = 38, CO_HighTemp = 78 },
        new RangeBarChartData { Month = "Nov", CA_LowTemp = 28, CA_HighTemp = 54, Text = "November", CO_LowTemp = 20, CO_HighTemp = 60 },
        new RangeBarChartData { Month = "Dec", CA_LowTemp = 29, CA_HighTemp = 56, Text = "December", CO_LowTemp = 20, CO_HighTemp = 60 }
    };

    protected override void OnInitialized()
    {
        //Hidden:Lines
        canonicalURL = NavigationManager.Uri.Split("?")[0];
        //End:Hidden
        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
        if (SampleService.IsDevice)
        {
            Width = "100%";
        }
    }

    public class RangeBarChartData
    {
        public string Month { get; set; }
        public double CA_LowTemp { get; set; }
        public double CA_HighTemp { get; set; }
        public string Text { get; set; }
        public double CO_LowTemp { get; set; }
        public double CO_HighTemp { get; set; }
    }

}
