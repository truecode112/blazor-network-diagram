@page "/chart/line-zone"

@using Syncfusion.Blazor.Charts
@using Syncfusion.Blazor
@using ThemeHelper

@inject NavigationManager NavigationManager
@inherits SampleBaseComponent;
@*Hidden:Lines*@
<PageTitle>Blazor Charts Line Zone Example - Syncfusion Demos</PageTitle>
<HeadContent>
    <meta name="description" content="This example demonstrates the Line Zone in Blazor Charts Component. Explore here for more details." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@

<SampleDescription>
    <p> This sample visualizes the annual mean rainfall in Australia with multi-colored line series in the chart. Data points are enhanced with segments and tooltips.</p>
</SampleDescription>
<ActionDescription>
    <p> In this example, you can see how to render and configure the points in a particular range by using <code>MultiColoredLine</code> series. Points under the range can be customized with <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Charts.ChartSegment.html#Syncfusion_Blazor_Charts_ChartSegment_Color'>Color</a>, and <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Charts.ChartSegment.html#Syncfusion_Blazor_Charts_ChartSegment_DashArray'>DashArray</a> properties in <code>ChartSegment</code>.</p>
    <p> <code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover a point or tap on a point in touch enabled devices.</p>
</ActionDescription>

<div class="control-section" align='center'>
    <SfChart Title="Annual Mean Rainfall in Australia" Width="@Width" Theme="@Theme">
        <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
        <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.DateTime" LabelFormat="yyyy" IntervalType="IntervalType.Years" EdgeLabelPlacement="EdgeLabelPlacement.Shift">
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
        </ChartPrimaryXAxis>
        <ChartPrimaryYAxis LabelFormat="{value}mm" RangePadding="ChartRangePadding.None" Minimum="200" Maximum="800" Interval="100">
            <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
        </ChartPrimaryYAxis>
        <ChartTooltipSettings Header="<b>Rainfall</b>" Enable="true" Shared="true" EnableMarker="false" Format="${point.x} : <b>${point.y}</b>"></ChartTooltipSettings>        
        <ChartAnnotations>
            <ChartAnnotation Region="Regions.Series" X="@HighValue" Y="10%">
                <ContentTemplate>
                    <div style="width:80px; padding: 5px;">
                        <table style="width: 100%">
                            <tr>
                                <td class="chartPadding blueCircle">
                                    High
                                </td>
                            </tr>
                        </table>
                    </div>
                </ContentTemplate>
            </ChartAnnotation>
            <ChartAnnotation Region="Regions.Series" X="@MediumValue" Y="@Y">
                <ContentTemplate>
                    <div style="width:80px; padding: 5px;">
                        <table style="width: 100%">
                            <tr>                                
                                <td class="chartPadding greenCircle">
                                    Medium
                                </td>
                            </tr>
                        </table>
                    </div>
                </ContentTemplate>
            </ChartAnnotation>
             <ChartAnnotation Region="Regions.Series" X="@LowValue" Y="85%">
                 <ContentTemplate>
                     <div style="width:80px; padding: 5px;">
                         <table style="width: 100%">
                             <tr>
                                 <td class="chartPadding redCircle">
                                     Low
                                 </td>
                             </tr>
                         </table>
                     </div>
                 </ContentTemplate>
             </ChartAnnotation>
        </ChartAnnotations>
        <ChartSeriesCollection>
            <ChartSeries DataSource="@ChartPoints" XName="Period" Width="2"
                         SegmentAxis="Segment.Y" YName="RainfallInfo" Type="ChartSeriesType.MultiColoredLine">
                <ChartSegments>
                    <ChartSegment Value="450" Color="red">
                    </ChartSegment>
                    <ChartSegment Value="500" Color="green"></ChartSegment>
                    <ChartSegment Color="blue"></ChartSegment>
                </ChartSegments>
            </ChartSeries>
        </ChartSeriesCollection>
    </SfChart>
</div>
<style>
    .chartCircle {
        width: 10px;
        height: 10px;
        border-radius: 15px;
    }
    .blueCircle {
        color: blue;
        font-weight: bold;
    }
    .greenCircle {
        color: green;
        font-weight: bold;
    }
    .redCircle {
        color: red;
        font-weight: bold;
    }
    .chartPadding {
        padding-left: 5px;
        font-size: 14px;
    }
    ellipse[id*=_Trackball_0] {
        stroke-opacity: 1;
    }
    ellipse[id*=_Trackball_1] {
        stroke-width: 1.2 !important;
        stroke: white !important;
    }
</style>

@code{

    //Hidden:Lines
    private string canonicalURL { get; set; }
    //End:Hidden
    private Random randomNum = new Random();
    public string Width { get; set; } = "90%";
    private int[] annualMean = { 380, 410, 310, 540, 510, 330, 490, 470, 472, 460, 550, 420, 380, 430, 385, 520, 580, 420, 350, 505,
        535, 410, 204, 400, 415, 408, 415, 350, 375, 500, 390, 450, 440, 350, 400, 365, 490, 400, 520, 510,
        395, 380, 404, 400, 500, 390, 610, 380, 390, 420, 440, 570, 600, 380, 410, 405, 480, 320, 420, 440,
        320, 280, 320, 400, 390, 460, 470, 490, 420, 480, 410, 420, 580, 410, 380, 480, 360, 650, 680, 720,
        580, 480, 520, 440, 420, 430, 380, 520, 410, 540, 400, 390, 460, 470, 490, 420, 480, 470, 490, 330,
        520, 480, 580, 590, 600, 310, 480, 500, 400, 508, 480, 460, 700, 705, 480, 410, 480};
    private string HighValue { get; set; } = "70%";
    private string MediumValue { get; set; } = "25%";
    private string LowValue { get; set; } = "93%";
    private string Y { get; set; } = "47%";
    private Theme Theme { get; set; }
    public List<LineChartData> ChartPoints { get; set; }

    protected override void OnInitialized()
    {
        //Hidden:Lines
        canonicalURL = NavigationManager.Uri.Split("?")[0];
        //End:Hidden
        ChartPoints = this.GetData();
        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
        if (SampleService.IsDevice)
        {
            Width = "100%";
            Y = "40%";
            MediumValue = "27%";
        }
    }

    private List<LineChartData> GetData()
    {
        List<LineChartData> chartData = new List<LineChartData>();
        for (int i = 0; i < annualMean.Length; i++)
        {
            chartData.Add(new LineChartData
            {
                Period = new DateTime(1900, 1, 1).AddYears(i),
                RainfallInfo = annualMean[i]
            });
        }
        return chartData;
    }

    public class LineChartData
    {
        public DateTime Period { get; set; }
        public double RainfallInfo { get; set; }
    }
}