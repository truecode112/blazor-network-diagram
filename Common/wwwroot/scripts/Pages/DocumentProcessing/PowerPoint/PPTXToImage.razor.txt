@page "/powerpoint/pptx-to-image"
@inject Microsoft.JSInterop.IJSRuntime JS
@using System.IO
@using Syncfusion.Blazor.Buttons
@using BlazorDemos.Data.DocumentProcessing.PowerPoint
@inject HttpClient Http
@inherits SampleBaseComponent;
@*Hidden:Lines*@
@inject NavigationManager NavigationManager
<PageTitle>Blazor PowerPoint (Presentation) Library - PPTX To Image Example - Syncfusion Demos</PageTitle>
<HeadContent>
    <meta name="description" content="This sample demonstrates how to convert the PowerPoint slide to an image." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@

<SampleDescription>
    <p style="font-size:16px">This sample demonstrates how to convert the PowerPoint slide to an image.</p>
</SampleDescription>
<ActionDescription>
   <b style="font-size:16px">Features:</b>
    <br />
    <ul style="font-size:16px">	
	<li>Convert all slide elements like text, shape, SmartArt diagram, table, etc., along with its formatting.</li>
    <li>Charts in a slide can be converted to image.</li>
	<li>Slides can be converted to JPEG, PNG formats.</li>
    </ul>
    <br />
</ActionDescription>

<div class="control-section">
    <p style="font-size:16px">Click the button to view a PowerPoint presentation generated by Essential Presentation. Please note that Microsoft PowerPoint viewer or its equivalent is required to view the resultant document.</p>

    <div class="button-section">
        <div id="button-control">
            <div class="row">
                <div>
                    <SfButton @onclick="PPTXToImageInput">Input Template</SfButton>
                    <SfButton @onclick="PresentationToImage">Convert To Image</SfButton>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .control-section .row {
        margin: 10px 0;
    }
</style>

@code {
    MemoryStream documentStream;
    //Hidden:Lines
    private string canonicalURL { get; set; }
    Dictionary<string, MemoryStream> fileData = new Dictionary<string, MemoryStream>();
    protected override void OnInitialized()
    {
        canonicalURL = NavigationManager.Uri.Split("?")[0];
    }
    //End:Hidden

    /// <summary>
    /// Convert and download the Presentation Image
    /// </summary>
    public async Task PresentationToImage(MouseEventArgs args)
    {
        await LoadTemplate();
        PPTXToImageService service = new PPTXToImageService(fileData);
        documentStream = service.ImageConversion();
        service.Close();
        await JS.SaveAs("Slide1.jpg", documentStream.ToArray());
    }

    /// <summary>
    /// Create and download the Presentation document
    /// </summary>
    public async Task PPTXToImageInput(MouseEventArgs args)
    {
        await LoadTemplate();
        PPTXToImageService service = new PPTXToImageService(fileData);
        documentStream = service.ImageInput();
        service.Close();
        await JS.SaveAs("InputTemplate.pptx", documentStream.ToArray());
    }
    /// <summary>
    /// Load the template document
    /// </summary>
    public async Task LoadTemplate()
    {
        if (fileData != null && fileData.Count == 0)
        {
            string fileDataPath = NavigationManager.BaseUri + SampleService.WebAssetsPath;
            byte[] data = await Http.GetByteArrayAsync(fileDataPath + "data/powerpoint/template.pptx");
            fileData.Add("template.pptx", new MemoryStream(data));
        }
    }
}