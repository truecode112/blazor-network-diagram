@page "/pdf/table-features"
@inject Microsoft.JSInterop.IJSRuntime JS
@using System.IO
@using Syncfusion.Blazor.Buttons
@inject HttpClient Http
@inherits SampleBaseComponent;
@*Hidden:Lines*@

@using BlazorDemos.Data.FileFormats.PDF

@*End:Hidden*@
@*Hidden:Lines*@
@inject NavigationManager NavigationManager
<PageTitle>Blazor PDF Library - Table Features Example - Syncfusion Demos</PageTitle>
<HeadContent>
    <meta name="description" content="This sample demonstrates the creation of richly formatted table to keep your data organized for both basic and advanced operation on cells, rows and columns along with headers and footers." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@

<SampleDescription>
    <p style="font-size:16px">This sample demonstrates the creation of richly formatted table to keep your data organized for both basic and advanced operation on cells, rows and columns along with headers and footers.</p>
</SampleDescription>
<ActionDescription>
   <p style="font-size:16px">More information about the document settings can be found in this documentation <a target='_blank'
href='https://help.syncfusion.com/file-formats/pdf/working-with-tables?_ga=2.224412378.1703522802.1584005056-1302582622.1556169414'> section.</a></p>
</ActionDescription>

<div class="control-section">
    <p style="font-size:16px">Click the button to view a PDF document generated by Essential PDF. Please note that Adobe Reader or its equivalent is required to view the resultant document. </p>

    <div class="button-section">
        <div id="button-control">
            <div class="row">
                <div>
                    <SfButton @onclick="TableFeaturesPDF">Create Table</SfButton>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .radio-control {
        margin: 0 0 5% 0;
    }

    .control-section .row {
        margin: 10px 0;
    }
</style>

@code {  
    
    //Hidden:Lines
    private string canonicalURL { get; set; }

    protected override void OnInitialized()
    {
        canonicalURL = NavigationManager.Uri.Split("?")[0];
    }
    //End:Hidden
    /// <summary>
    /// Create and download the simple PDF document
    ///<summary>
    protected async void TableFeaturesPDF(MouseEventArgs args)
    {	
        Dictionary<string, MemoryStream> fileData = new Dictionary<string, MemoryStream>();
        string fileDataPath = NavigationManager.BaseUri + SampleService.WebAssetsPath;
        byte[] data = await Http.GetByteArrayAsync(fileDataPath + "data/pdf/products.xml");
        fileData.Add("products.xml", new MemoryStream(data));
        data = await Http.GetByteArrayAsync(fileDataPath + "data/pdf/report.xml");
        fileData.Add("report.xml", new MemoryStream(data));
        TableFeaturesService service = new TableFeaturesService(fileData);        
        MemoryStream documentStream = service.TableFeaturesPDF();
        service.Close();
        await JS.SaveAs("TableFeatures.pdf", documentStream.ToArray());
    }
}
