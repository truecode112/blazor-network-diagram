@page "/excel/yearly-sales"
@inject Microsoft.JSInterop.IJSRuntime JS
@using System.IO;

@using Syncfusion.Blazor.Buttons
@inherits SampleBaseComponent;

@*Hidden:Lines*@

@using BlazorDemos.Data.FileFormats.XlsIO

@*End:Hidden*@
@*Hidden:Lines*@
@inject NavigationManager NavigationManager
<PageTitle>Blazor Excel (XlsIO) Library - Yearly Sales Example - Syncfusion Demos</PageTitle>
<HeadContent>
    <meta name="description" content="This sample demonstrates how to create a simple Excel report for yearly sales with data, charts, formulas, and cell formatting using .NET Excel (XlsIO) library." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@

<SampleDescription>
  <p>This sample demonstrates how to create a simple Excel report for yearly sales with data, charts, formulas, and cell formatting using XlsIO.</p>  
</SampleDescription>
<ActionDescription>
   <p>A yearly sales report is used for visualizing a company’s yearly growth. This demo shows the product sales of a company for each month in a specific year by visualizing the data with charts.</p>
<p style='display: block'><b>Features:</b></p>
<p>This sample demonstrates the following features:</P>
<ul>
<li>Cell formattings</li>
<li>Chart</li>
<li>Number formats</li>
<li>Formulas</li>
</ul>
</ActionDescription>

<div class="control-section">
    <p style="font-weight:normal">Click the button to view an Excel spreadsheet generated by Essential XlsIO. Please note that the Microsoft Excel Viewer or Microsoft Excel is required to view the resultant document.</p>

    <div class="button-section">
        <div id="button-control">
            <div class="row">
                <div>
                    <SfButton @onclick="YearlySalesXlsIO">Create Document</SfButton>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .control-section .row {
        margin: 10px 0;
    }
</style>

@code {
    MemoryStream excelStream;
    //Hidden:Lines
    private string canonicalURL { get; set; }

    protected override void OnInitialized()
    {
        canonicalURL = NavigationManager.Uri.Split("?")[0];
    }
    //End:Hidden

    /// <summary>
    /// Create and download the Excel document with attendance tracker
    /// </summary>
    public async Task YearlySalesXlsIO()
    {
        YearlySalesService service = new YearlySalesService();
        excelStream = service.YearlySalesXlsIO();
        await JS.SaveAs("YearlySales.xlsx", excelStream.ToArray());
    }
}