@page "/linear-gauge/marker-pointer"

@using Syncfusion.Blazor
@using Syncfusion.Blazor.LinearGauge
@using Syncfusion.Blazor.Buttons
@using ThemeHelper
@inject NavigationManager NavigationManager
@inherits SampleBaseComponent;
@*Hidden:Lines*@
<PageTitle>Blazor Linear Gauge Marker Pointer Example - Syncfusion Demos</PageTitle>
<HeadContent>
    <meta name="description" content="This example demonstrates the Marker Pointer in Blazor Linear Gauge Component. Explore here for more details." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@

<SampleDescription>
    <p>This sample shows the various marker pointer shapes available in the linear gauge. Additionally, multiple marker pointer, animation and drag support are enabled.</p>
</SampleDescription>
<ActionDescription>
    <p>In this example, you can see how to render and configure marker pointer in the linear gauge. The <a target='_blank' class='code' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.LinearGauge.LinearGaugePointers.html'>LinearGaugePointers</a> collection is useful for displaying multiple pointers. The properties available in <a target='_blank' class='code' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.LinearGauge.LinearGaugePointer.html'>LinearGaugePointer</a> help in the customization of the marker pointer in the linear gauge. Drag pointers are assisted by the <a target='_blank' class='code' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.LinearGauge.LinearGaugeEvents.html#properties'>OnDrag</a> and <a target='_blank' class='code' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.LinearGauge.LinearGaugeEvents.html#properties'>OnDragEnd</a> events.</p>
    <p>More information on the marker pointer can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/linear-gauge/pointers#marker-pointer'>documentation section</a>.</p>
</ActionDescription>

<style>
    .divclass {
        padding: 6px;
        color: white;
        border: solid #0074E3;
        cursor: pointer;
    }
</style>

<div class="control-section">
    <div class="row">
        <div class="col-xs-12 col-sm-12 col-lg-12 col-md-12">
            <div align="center" style="margin: auto;width: 30%;padding: 10px;">
                <table>
                    <tbody>
                        <tr>
                            <td>
                                <div class="divclass" style="width:86px;color:@HorizontalTextColor;font-size:15px;border: 2px solid #0074E3;background-color:@HorizontalBackgroundColor;text-align=center;" @onclick="HorizontalGauge">
                                    Horizontal
                                </div>
                            </td>
                            <td>
                                <div class="divclass" style="width:86px;color:@VerticalTextColor;font-size:15px;border: 2px solid #0074E3;background-color:@VerticalBackgroundColor;text-align:center;" @onclick="VerticalGauge">
                                    Vertical
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <pre style="background-color: inherit; border:hidden"></pre>
    <div class="row">
        <div align="center" style="float: left;padding: 25px;"></div>
        <div class="@ClassStyle" align="center">
            <SfLinearGauge Title="Inverted triangle" Orientation="@GaugeOrientation" Theme="@Theme" Height="@Height" Width="@Width" Background="transparent">
                <LinearGaugeTitleStyle FontFamily="inherit" FontWeight="499"></LinearGaugeTitleStyle>
                <LinearGaugeEvents OnDrag="OnInvertedTriangleDrag" OnDragEnd="OnInvertedTriangleDragEnd" />
                <LinearGaugeAxes>
                    <LinearGaugeAxis Minimum="0" Maximum="100" OpposedPosition="true">
                        <LinearGaugeLine Width="5" />
                        <LinearGaugeMajorTicks Interval="20" Height="7" Width="1" />
                        <LinearGaugeMinorTicks Interval="10" Height="3" />
                        <LinearGaugeAxisLabelStyle>
                            <LinearGaugeAxisLabelFont FontFamily="inherit" />
                        </LinearGaugeAxisLabelStyle>
                        <LinearGaugePointers>
                            <LinearGaugePointer PointerValue="@InvertedTrianglePointerValue" Height="5" Width="5" EnableDrag="true" Placement="Placement.Near" Type="Point.Bar" AnimationDuration="@PointerAnimation" Offset="12" Color="#0074E3" />
                            <LinearGaugePointer EnableDrag="true" PointerValue="@InvertedTrianglePointerValue" Height="15" Width="15" Placement="Placement.Near" MarkerType="MarkerType.Triangle" AnimationDuration="@PointerAnimation" />
                        </LinearGaugePointers>
                    </LinearGaugeAxis>
                </LinearGaugeAxes>
            </SfLinearGauge>
        </div>
        <div class="@ClassStyle" align="center">
            <SfLinearGauge Title="Circle" Orientation="@GaugeOrientation" Theme="@Theme" Height="@Height" Width="@Width" Background="transparent">
                <LinearGaugeEvents OnDrag="OnCircleDrag" OnDragEnd="OnCircleDragEnd" />
                <LinearGaugeTitleStyle FontWeight="499" FontFamily="inherit" />
                <LinearGaugeAxes>
                    <LinearGaugeAxis Minimum="0" Maximum="100" OpposedPosition="true">
                        <LinearGaugeLine Width="5" />
                        <LinearGaugeMajorTicks Interval="20" Height="7" Width="1" />
                        <LinearGaugeMinorTicks Interval="10" Height="3" />
                        <LinearGaugeAxisLabelStyle>
                            <LinearGaugeAxisLabelFont FontFamily="inherit" />
                        </LinearGaugeAxisLabelStyle>
                        <LinearGaugePointers>
                            <LinearGaugePointer PointerValue="@CirclePointerValue" Height="5" Width="5" EnableDrag="true" Placement="Placement.Near" Type="Point.Bar" AnimationDuration="@PointerAnimation" Offset="12" Color="#0074E3" />
                            <LinearGaugePointer EnableDrag="true" PointerValue="@CirclePointerValue" Height="15" Width="15" Placement="Placement.Near" MarkerType="MarkerType.Circle" AnimationDuration="@PointerAnimation" />
                        </LinearGaugePointers>
                    </LinearGaugeAxis>
                </LinearGaugeAxes>
            </SfLinearGauge>
        </div>
        <div class="@ClassStyle" align="center">
            <SfLinearGauge Title="Diamond" Orientation="@GaugeOrientation" Theme="@Theme" Height="@Height" Width="@Width" Background="transparent">
                <LinearGaugeEvents OnDrag="OnDiamondDrag" OnDragEnd="OnDiamondDragEnd" />
                <LinearGaugeTitleStyle FontWeight="499" FontFamily="inherit" />
                <LinearGaugeAxes>
                    <LinearGaugeAxis Minimum="0" Maximum="100" OpposedPosition="true">
                        <LinearGaugeLine Width="5" />
                        <LinearGaugeMajorTicks Interval="20" Height="7" Width="1" />
                        <LinearGaugeMinorTicks Interval="10" Height="3" />
                        <LinearGaugeAxisLabelStyle>
                            <LinearGaugeAxisLabelFont FontFamily="inherit" />
                        </LinearGaugeAxisLabelStyle>
                        <LinearGaugePointers>
                            <LinearGaugePointer PointerValue="@DiamondPointerValue" Height="5" Width="5" EnableDrag="true" Placement="Placement.Near" Type="Point.Bar" AnimationDuration="@PointerAnimation" Offset="12" Color="#0074E3" />
                            <LinearGaugePointer EnableDrag="true" PointerValue="@DiamondPointerValue" Height="15" Width="15" Placement="Placement.Near" MarkerType="MarkerType.Diamond" AnimationDuration="@PointerAnimation" />
                        </LinearGaugePointers>
                    </LinearGaugeAxis>
                </LinearGaugeAxes>
            </SfLinearGauge>
        </div>
        <div class="@ClassStyle" align="center">
            <SfLinearGauge Title="Rectangle" Orientation="@GaugeOrientation" Theme="@Theme" Height="@Height" Width="@Width" Background="transparent">
                <LinearGaugeEvents OnDrag="OnRectangleDrag" OnDragEnd="OnRectangleDragEnd" />
                <LinearGaugeTitleStyle FontWeight="499" FontFamily="inherit" />
                <LinearGaugeAxes>
                    <LinearGaugeAxis Minimum="0" Maximum="100" OpposedPosition="true">
                        <LinearGaugeLine Width="5" />
                        <LinearGaugeMajorTicks Interval="20" Height="7" Width="1" />
                        <LinearGaugeMinorTicks Interval="10" Height="3" />
                        <LinearGaugeAxisLabelStyle>
                            <LinearGaugeAxisLabelFont FontFamily="inherit" />
                        </LinearGaugeAxisLabelStyle>
                        <LinearGaugePointers>
                            <LinearGaugePointer PointerValue="@RectanglePointerValue" Height="5" Width="5" EnableDrag="true" Placement="Placement.Near" Type="Point.Bar" AnimationDuration="@PointerAnimation" Offset="12" Color="#0074E3" />
                            <LinearGaugePointer EnableDrag="true" PointerValue="@RectanglePointerValue" Height="5" Width="15" Placement="Placement.Near" MarkerType="MarkerType.Rectangle" Offset="@Offset" AnimationDuration="@PointerAnimation" />
                        </LinearGaugePointers>
                    </LinearGaugeAxis>
                </LinearGaugeAxes>
            </SfLinearGauge>
        </div>
        <div class="@ClassStyle" align="center">
            <SfLinearGauge Title="Multiple pointers" Orientation="@GaugeOrientation" Theme="@Theme" Height="@Height" Width="@Width" Background="transparent">
                <LinearGaugeEvents OnDrag="OnMultipleDrag" OnDragEnd="OnMultipleDragEnd" />
                <LinearGaugeTitleStyle FontWeight="499" FontFamily="inherit" />
                <LinearGaugeAxes>
                    <LinearGaugeAxis Minimum="0" Maximum="100" OpposedPosition="true">
                        <LinearGaugeLine Width="5" />
                        <LinearGaugeMajorTicks Interval="20" Height="7" Width="1" />
                        <LinearGaugeMinorTicks Interval="10" Height="3" />
                        <LinearGaugeAxisLabelStyle>
                            <LinearGaugeAxisLabelFont FontFamily="inherit" />
                        </LinearGaugeAxisLabelStyle>
                        <LinearGaugePointers>
                            <LinearGaugePointer PointerValue="@MultiplePointerValueOne" Height="5" Width="5" EnableDrag="true" Placement="Placement.Near" Type="Point.Bar" AnimationDuration="@PointerAnimation" Offset="12" Color="#0074E3" />
                            <LinearGaugePointer PointerValue="@MultiplePointerValueOne" Height="15" Width="15" Placement="Placement.Near" MarkerType="MarkerType.Triangle" EnableDrag="true" AnimationDuration="@PointerAnimation" />
                            <LinearGaugePointer PointerValue="@MultiplePointerValueTwo" Height="15" Width="15" EnableDrag="true" Placement="Placement.Near" MarkerType="MarkerType.Diamond" AnimationDuration="@PointerAnimation" />
                        </LinearGaugePointers>
                    </LinearGaugeAxis>
                </LinearGaugeAxes>
            </SfLinearGauge>
        </div>
    </div>
</div>

@code {
    public Theme Theme { get; set; }
    public string VerticalBackgroundColor = "#0074E3";
    public string HorizontalBackgroundColor = "white";
    public string VerticalTextColor = "white";
    public string HorizontalTextColor = "black";
    public string Offset = "0";
    public string Width = "150px";
    public string Height = "350px";
    public string ClassStyle = "col-xs-4 col-sm-4 col-lg-2 col-md-2 ";
    public Orientation GaugeOrientation = Orientation.Vertical;
    public double InvertedTrianglePointerValue = 40;
    public double CirclePointerValue = 20;
    public double DiamondPointerValue = 50;
    public double RectanglePointerValue = 30;
    public double MultiplePointerValueOne = 10;
    public double MultiplePointerValueTwo = 100;
    public double PointerAnimation = 1500;
    //Hidden:Lines
    private string canonicalURL { get; set; }
    //End:Hidden

    public void OnInvertedTriangleDragEnd(PointerDragEventArgs args)
    {
        InvertedTrianglePointerValue = args.CurrentValue;
    }

    public void OnCircleDragEnd(PointerDragEventArgs args)
    {
        CirclePointerValue = args.CurrentValue;
    }

    public void OnDiamondDragEnd(PointerDragEventArgs args)
    {
        DiamondPointerValue = args.CurrentValue;
    }

    public void OnRectangleDragEnd(PointerDragEventArgs args)
    {
        RectanglePointerValue = args.CurrentValue;
    }

    public void OnMultipleDragEnd(PointerDragEventArgs args)
    {
        if (args.PointerIndex == 1)
        {
            MultiplePointerValueOne = args.CurrentValue;
        }
        else
        {
            MultiplePointerValueTwo = args.CurrentValue;
        }
    }

    public void OnInvertedTriangleDrag(PointerDragEventArgs args)
    {
        InvertedTrianglePointerValue = args.CurrentValue;
        PointerAnimation = 0;
    }

    public void OnCircleDrag(PointerDragEventArgs args)
    {
        CirclePointerValue = args.CurrentValue;
        PointerAnimation = 0;
    }

    public void OnDiamondDrag(PointerDragEventArgs args)
    {
        DiamondPointerValue = args.CurrentValue;
        PointerAnimation = 0;
    }

    public void OnRectangleDrag(PointerDragEventArgs args)
    {
        RectanglePointerValue = args.CurrentValue;
        PointerAnimation = 0;
    }

    public void OnMultipleDrag(PointerDragEventArgs args)
    {
        if (args.PointerIndex == 1)
        {
            MultiplePointerValueOne = args.CurrentValue;
        }
        else
        {
            MultiplePointerValueTwo = args.CurrentValue;
        }
        PointerAnimation = 0;
    }

    private void VerticalGauge()
    {
        PointerAnimation = 1500;
        Width = "150px";
        Height = "350px";
        VerticalBackgroundColor = "#0074E3";
        HorizontalBackgroundColor = "white";
        VerticalTextColor = "white";
        HorizontalTextColor = "black";
        ClassStyle = "col-xs-4 col-sm-4 col-lg-2 col-md-2";
        Offset = "0";
        GaugeOrientation = Orientation.Vertical;
    }

    private void HorizontalGauge()
    {
        PointerAnimation = 1500;
        Width = "450px";
        Height = "150px";
        ClassStyle = "";
        VerticalBackgroundColor = "white";
        HorizontalBackgroundColor = "#0074E3";
        VerticalTextColor = "black";
        HorizontalTextColor = "white";
        Offset = "-5";
        GaugeOrientation = Orientation.Horizontal;
    }

    protected override void OnInitialized()
    {
        //Hidden:Lines
        canonicalURL = NavigationManager.Uri.Split("?")[0];
        //End:Hidden
        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
    }
}