@page "/file-manager/azure"

@using Syncfusion.Blazor.FileManager;

@inject IJSRuntime JsRuntime;

@inherits SampleBaseComponent;
@*Hidden:Lines*@
@inject NavigationManager NavigationManager
<PageTitle>Blazor File Manager Azure Blob Storage Example - Syncfusion Demos</PageTitle>
<HeadContent>
    <meta name="description" content="This example demonstrates the Azure Blob Storage in Blazor File Manager Component. Explore here for more details." />
	<link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@

<SampleDescription>
    <p>
        This sample demonstrates how to use the <a target="_blank" href="https://github.com/SyncfusionExamples/azure-aspcore-file-provider">Azure file system provider</a> with the File Manager component to perform file operations. This supports all basic file operations such as create, rename, delete, refresh and more.
    </p>
</SampleDescription>
<ActionDescription>
    <p>
        This sample explains the Azure file system provider that allows users to access and manage the blobs from the <code>Azure blob storage</code>. To start the service, you need to create an <a target="_blank" href="https://learn.microsoft.com/en-us/azure/storage/common/storage-account-create?tabs=azure-portal">Azure blob storage account</a>. Refer to more details <a target="_blank" href="https://learn.microsoft.com/en-IN/azure/storage/blobs/storage-quickstart-blobs-dotnet?culture=en-in&country=in&tabs=visual-studio%2Cmanaged-identity%2Croles-azure-portal%2Csign-in-azure-cli%2Cidentity-visual-studio">here</a>.
    </p>
    <p>Checkout this <a target="_blank" href="https://github.com/SyncfusionExamples/azure-aspcore-file-provider">Azure file system provider</a> from the GitHub repository to connect with azure blob storage.</p>
    <p>Provide the details such as the <code>account name</code>, <code>password</code>, and <code>blob name</code> in the <code>RegisterAzure</code> method.</p>
    <p>Accessed the blob storage account using <code>BlobContainerClient</code> class and <code>BlobServiceClient</code> method of Azure. Reads the storage files using the <code>GetFilesAsync</code> method to perform the file operations in the File Manager component.</p>
</ActionDescription>

<div class="control-section">
    @* Initialization of File Manager component with Azure file provider *@
    <SfFileManager TValue="FileManagerDirectoryContent" ShowFileExtension="false">
        <FileManagerAjaxSettings Url="https://ej2-azure-aspcore-service.azurewebsites.net/api/AzureFileManager/AzureFileoperations"
                                 UploadUrl="https://ej2-azure-aspcore-service.azurewebsites.net/api/AzureFileManager/AzureUpload"
                                 DownloadUrl="https://ej2-azure-aspcore-service.azurewebsites.net/api/AzureFileManager/AzureDownload"
                                 GetImageUrl="https://ej2-azure-aspcore-service.azurewebsites.net/api/AzureFileManager/AzureGetImage">
        </FileManagerAjaxSettings>
        <FileManagerToolbarSettings Items="@Items"></FileManagerToolbarSettings>
        <FileManagerContextMenuSettings Layout="@LayoutItems" Visible="true"></FileManagerContextMenuSettings>
    </SfFileManager>
</div>

@*Hidden:Lines*@
@code {
    private string canonicalURL { get; set; }

    protected override void OnInitialized()
    {
        canonicalURL = NavigationManager.Uri.Split("?")[0];
    }
    public string[] Items = new string[] { "NewFolder", "Cut", "Copy", "Paste", "Delete", "Download", "Rename", "SortBy", "Refresh", "Selection", "View", "Details" };
    public string[] LayoutItems = new string[] { "SortBy", "View", "Refresh", "|", "Paste", "|", "NewFolder", "|", "Details", "|", "SelectAll" };
}
<style>
    .bootstrap5 .e-filemanager .e-large-icons .e-list-img, .bootstrap5-dark .e-filemanager .e-large-icons .e-list-img,
    .bootstrap4 .e-filemanager .e-large-icons .e-list-img {
        border: none !important;
    }
</style>
@*End:Hidden*@