@page "/gantt-chart/tooltip-template"
@using Syncfusion.Blazor.Gantt
@inject Microsoft.AspNetCore.Components.NavigationManager UriHelper
@inherits SampleBaseComponent;
@*Hidden:Lines*@
@inject NavigationManager NavigationManager
<PageTitle>Blazor Gantt Chart Tooltip Template Example - Syncfusion Demos</PageTitle>
<HeadContent>
    <meta name="description" content="This example demonstrates the Tooltip Template in Blazor Gantt Chart Component. Explore here for more details." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@

<SampleDescription>
    <p>This sample demonstrates the Gantt tooltip template and the editing tooltip template feature. In this sample, the taskbar tooltip and the taskbar editing tooltip are customized.</p>
</SampleDescription>
<ActionDescription>
    <p>The default tooltip in the Gantt Chart component can be customized using the <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Gantt.GanttTooltipSettings-1.html#Syncfusion_Blazor_Gantt_GanttTooltipSettings_1_TaskbarTemplate'>GanttTooltipSettings.TaskbarTemplate</a> component.</p>
    <p>The taskbar editing tooltip in the Gantt Chart component can be customized using the <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Gantt.GanttTooltipSettings-1.html#Syncfusion_Blazor_Gantt_GanttTooltipSettings_1_EditingTemplate'>GanttTooltipSettings.EditingTemplate</a> component.</p>
    <p>The tooltip can be enabled or disabled using the <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Gantt.GanttTooltipSettings-1.html#Syncfusion_Blazor_Gantt_GanttTooltipSettings_1_ShowTooltip'>GanttTooltipSettings.ShowTooltip</a> property. More information about tooltip template features can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/gantt-chart/tooltip/#tooltip-template'>documentation</a> section.</p>
</ActionDescription>

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <SfGantt DataSource="@TaskCollection" Height="450px" Width="100%" TreeColumnIndex="1" ProjectStartDate="@ProjectStart" ProjectEndDate="@ProjectEnd" WorkUnit="WorkUnit.Hour">
                <GanttTaskFields Id="TaskId" Name="TaskName" StartDate="StartDate" EndDate="EndDate" Duration="Duration" Progress="Progress"
                                 ParentID="ParentId" TaskType="TaskType">
                </GanttTaskFields>
                <GanttColumns>
                    <GanttColumn Field="TaskId" Width="100"></GanttColumn>
                    <GanttColumn Field="TaskName" Width="250" ClipMode="Syncfusion.Blazor.Grids.ClipMode.EllipsisWithTooltip"></GanttColumn>
                    <GanttColumn Field="StartDate" HeaderText="Start Date" MinWidth="120"></GanttColumn>
                    <GanttColumn Field="EndDate" HeaderText="End Date" MinWidth="120"></GanttColumn>
                    <GanttColumn Field="Duration" HeaderText="Duration" MinWidth="120"></GanttColumn>
                    <GanttColumn Field="Progress" HeaderText="Progress" MinWidth="120"></GanttColumn>
                    <GanttColumn Field="TaskType" Width="100"></GanttColumn>
                </GanttColumns>
                <GanttEditSettings AllowTaskbarEditing="true"></GanttEditSettings>
                <GanttTooltipSettings ShowTooltip="true" TValue="TaskData">
                    <TaskbarTemplate>
                        <table>
                            @{
                                if ((context as TaskData).ResourceName != null)
                                {
                                    var template = (context as TaskData);
                                    <tr>
                                        <td rowspan="3" style="padding:3px">
                                            <img src="@UriHelper.ToAbsoluteUri($"{SampleService.WebAssetsPath}images/gantt/{template.ResourceName.Trim().Replace(" ","").ToLower()}.png")" />
                                        </td>
                                        <td style="padding:3px">Task Done By:</td>
                                        <td style="padding:3px">@(template.ResourceName)</td>
                                    </tr>
                                    <tr>
                                        <td style="padding:3px">Starts On:</td>
                                        <td style="padding:3px">@(template.StartDate.ToString("MM/dd/yyyy"))</td>
                                    </tr>
                                    <tr>
                                        <td style="padding:3px">Ends On:</td>
                                        <td style="padding:3px">@(template.EndDate.ToString("MM/dd/yyyy"))</td>
                                    </tr>
                                }
                                else
                                {
                                    <tr>
                                        <td style="padding:3px">Starts On:</td>
                                        <td style="padding:3px">@((context as TaskData).StartDate.ToString("MM/dd/yyyy"))</td>
                                    </tr>
                                    <tr>
                                        <td style="padding:3px">Ends On:</td>
                                        <td style="padding:3px">@((context as TaskData).EndDate.ToString("MM/dd/yyyy"))</td>
                                    </tr>
                                }
                            }
                        </table>
                    </TaskbarTemplate>
                    <EditingTemplate>
                        <table>
                            @{
                                var template = (context as TaskData);
                                if (TaskbarEditAction == "LeftResizing")
                                {
                                     <tr>
                                       <td style="padding:3px">@(template.StartDate.ToString("MMM dd, yyyy"))</td>
                                     </tr>
                                     <tr>
                                       <td style="padding:6px">@(template.Duration) days</td>
                                     </tr>
                                }
                                else if (TaskbarEditAction == "RightResizing")
                                {
                                     <tr>
                                       <td style="padding:3px">@(template.EndDate.ToString("MMM dd, yyyy"))</td>
                                     </tr>
                                     <tr>
                                       <td style="padding:6px">@(template.Duration) days</td>
                                     </tr>
                                }
                                else if (TaskbarEditAction == "ChildDrag" || TaskbarEditAction == "ParentDrag")
                                {
                                     <tr>
                                       <td style="padding:3px">@(template.StartDate.ToString("MMM dd, yyyy"))</td>
                                     </tr>
                                     <tr>
                                       <td style="padding:3px">@(template.EndDate.ToString("MMM dd, yyyy"))</td>
                                     </tr>
                                }
                                else if (TaskbarEditAction == "ProgressResizing")
                                {
                                     <tr>
                                       <td style="padding:3px">@(template.Progress) %</td>
                                     </tr>
                                }
                            }
                     </table>
                </EditingTemplate>
                </GanttTooltipSettings>
                <GanttLabelSettings LeftLabel="TaskName" TValue="TaskData"></GanttLabelSettings>
                <GanttSplitterSettings Position="40%"></GanttSplitterSettings>
                <GanttEvents TaskbarEditing="TaskbarEditingHandler" TValue="TaskData"></GanttEvents>
            </SfGantt>
        </div>
    </div>
</div>

@code{
    private DateTime ProjectStart = new DateTime(2021, 3, 23);
    private DateTime ProjectEnd = new DateTime(2021, 7, 28);
    private string TaskbarEditAction { get; set; }
    private List<TaskData> TaskCollection { get; set; }
    //Hidden:Lines
    private string canonicalURL { get; set; }
    //End:Hidden
    protected override void OnInitialized()
    {
        //Hidden:Lines
        canonicalURL = NavigationManager.Uri.Split("?")[0];
        //End:Hidden
        this.TaskCollection = GetTaskCollection();
    }

    public class TaskData
    {
        public int TaskId { get; set; }
        public string TaskName { get; set; }
        public string TaskType { get; set; }
        public DateTime StartDate { get; set; }
        public DateTime EndDate { get; set; }
        public string Duration { get; set; }
        public int Progress { get; set; }
        public int? ParentId { get; set; }
        public string ResourceName { get; set; }
    }
    private void TaskbarEditingHandler(TaskbarEditingEventArgs<TaskData> args)
    {
        TaskbarEditAction = args.Action;
    }
    public static List<TaskData> GetTaskCollection()
    {
        List<TaskData> Tasks = new List<TaskData>() {
            new TaskData() {
                TaskId = 1,
                TaskName = "Project initiation",
                StartDate = new DateTime(2021, 03, 28),
                EndDate = new DateTime(2021, 07, 28),
                TaskType ="FixedDuration",
                Duration="4",
            },
            new TaskData() {
                TaskId = 2,
                TaskName = "Identify site location",
                StartDate = new DateTime(2021, 03, 29),
                Progress = 30,
                ParentId = 1,
                Duration="2",
                ResourceName="Rose Fuller"
            },
            new TaskData() {
                TaskId = 3,
                TaskName = "Perform soil test",
                StartDate = new DateTime(2021, 03, 29),
                ParentId = 1,
                Duration="4",
                Progress = 30,
                TaskType="FixedWork",
                ResourceName="Margaret Buchanan"
            },
            new TaskData() {
                TaskId = 4,
                TaskName = "Soil test approval",
                StartDate = new DateTime(2021, 03, 29),
                Duration = "1",
                Progress = 30,
                ParentId = 1,
                ResourceName="Fuller King",
                TaskType="FixedWork"
            },
            new TaskData() {
                TaskId = 5,
                TaskName = "Market research",
                StartDate = new DateTime(2021, 03, 29),
                EndDate = new DateTime(2021, 04, 2),
                TaskType="FixedDuration",
                Duration="4"
            },
            new TaskData() {
                TaskId = 6,
                TaskName = "Demand analysis",
                StartDate = new DateTime(2021, 03, 29),
                Duration = "3",
                Progress = 30,
                ParentId = 5,
                ResourceName="Van Jack",
                TaskType="FixedWork"
            },
            new TaskData() {
                TaskId = 7,
                TaskName = "Customer strength",
                StartDate = new DateTime(2021, 04, 01),
                Duration = "3",
                Progress = 30,
                ParentId = 5,
                TaskType="FixedWork",
                ResourceName="Martin Tamer"
            },
            new TaskData() {
                TaskId = 8,
                TaskName = "Market opportunity analysis",
                StartDate = new DateTime(2021, 04, 01),
                Duration = "2",
                ParentId = 5,
                Progress = 30,
                TaskType="FixedWork",
                ResourceName="Jack Davolio"
            },
            new TaskData() {
                TaskId = 9,
                TaskName = "Project estimation",
                StartDate = new DateTime(2021, 03, 31),
                EndDate = new DateTime(2021, 04, 04),
                Duration="5"
            },
            new TaskData() {
                TaskId = 10,
                TaskName = "Develop floor plan for estimation",
                StartDate = new DateTime(2021, 03, 31),
                Duration = "3",
                Progress = 30,
                ParentId = 9,
                ResourceName="Fuller King",
                TaskType="FixedWork"
            },
            new TaskData() {
                TaskId = 11,
                TaskName = "List materials",
                StartDate = new DateTime(2021, 04, 02),
                Duration = "2",
                Progress = 30,
                ParentId = 9,
                TaskType="FixedWork",
                ResourceName="Martin Tamer"
            },
            new TaskData() {
                TaskId = 12,
                TaskName = "Estimation approval",
                StartDate = new DateTime(2021, 04, 04),
                Duration = "2",
                ParentId = 9,
                Progress = 30,
                TaskType="FixedWork",
                ResourceName="Margaret Buchanan"
            },
        };
        return Tasks;
    }
}
