@page "/tree-grid/remote-data"

@using Syncfusion.Blazor.TreeGrid
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Data
@using Syncfusion.Blazor
@using Syncfusion.Blazor.Buttons 
@*Hidden:Lines*@
@using ej2_blazor_selfdata
@inherits SampleBaseComponent;
@inject NavigationManager NavigationManager
<PageTitle>Blazor Tree Grid Remote Data Example - Syncfusion Demos</PageTitle>
<HeadContent>
    <meta name="description" content="This example demonstrates the Remote Data in Blazor Tree Grid Component. Explore here for more details." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@

<SampleDescription>
    <p>This sample demonstrates the way of binding remote services to the Tree Grid component. Here, the <a target='_blank' class='code' href='https://blazor.syncfusion.com/documentation/data/getting-started'>SfDataManager</a> is used to bind the remote data with Tree Grid.</p>
</SampleDescription>
<ActionDescription>
    <p>In this demo, parent rows are loaded in collapsed state.  You can load the child records also along with the parent records while loading data on-demand by enabling the <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.TreeGrid.SfTreeGrid-1.html#Syncfusion_Blazor_TreeGrid_SfTreeGrid_1_LoadChildOnDemand'>LoadChildOnDemand</a> property of Tree Grid.</p>
    <p>The <code>SfDataManager</code>, which will act as an interface between the service endpoint and the Tree Grid, will require the below minimal information to interact with service endpoint properly.
    </p>
   <ul>
       <li><a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.DataManager.html#Syncfusion_Blazor_DataManager_Url'>SfDataManager.Url</a> - Defines the service endpoint to fetch the data</li>
       <li><a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.DataManager.html#Syncfusion_Blazor_DataManager_Adaptor'>SfDataManager.Adaptor</a> - Defines the adaptor option. By default, <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Data.UrlAdaptor.html'>ODataAdaptor</a> is used for remote binding.</li>
    </ul>
    <p>Adaptor is responsible for processing the response and request from/to the service endpoint. The <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Data.html'>Syncfusion.Blazor.Data</a> namespace provides some predefined adaptors which are designed to interact with particular service endpoints. The predefined adaptors are,</p>
    <ul>
        <li><strong>UrlAdaptor</strong> - Use this to interact with any remote service. This is the base adaptor for all remote based adaptors.</li>
        <li><strong>ODataAdaptor</strong>- Use this to interact with OData endpoints.</li>
        <li><strong>ODataV4Adaptor</strong> - Use this to interact with OData V4 endpoints.</li>
        <li><strong>WebApiAdaptor</strong> - Use this to interact with Web API created under OData standards.</li>
    </ul>
    <p>More information on the data binding can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/treegrid/data-binding/?no-cache=1'>documentation</a> section.</p>
</ActionDescription>


<div class="col-lg-9 control-section">
    <div class="content-wrapper">
        <div class="row">
              <SfTreeGrid TValue="SelfReferenceData" Query="@GridQuery" LoadChildOnDemand="@loadchildondemand" IdMapping="TaskID" ParentIdMapping="ParentItem" Height="312" TreeColumnIndex="1" AllowPaging="true" HasChildMapping="isParent">
                <SfDataManager Url="https://blazor.syncfusion.com/services/production/api/SelfReferenceData" Adaptor="Adaptors.WebApiAdaptor" CrossDomain="true"></SfDataManager>
                <TreeGridPageSettings PageSize="@GridPageSize"></TreeGridPageSettings>
                  <TreeGridColumns>
                    <TreeGridColumn Field="TaskID" HeaderText="Task ID" Width="90" TextAlign="TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="TaskName" HeaderText="Task Name" Width="135"></TreeGridColumn>
                    <TreeGridColumn Field="Duration" HeaderText="Duration" Width="80" TextAlign="TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="Progress" HeaderText="Progress" Width="100"></TreeGridColumn>
                    <TreeGridColumn Field="Priority" HeaderText="Priority" Width="105"></TreeGridColumn>
                </TreeGridColumns>
            </SfTreeGrid>
        </div>
    </div>
</div>

<div class="col-lg-3 property-section">
    <div class="property-panel-header">Properties</div>
    <table id="property" title="Properties" style="width: 100%;">
        <tr style="height: 50px">
            <td>
                <SfCheckBox @bind-Checked="@loadchildondemand" @onchange="onChange" Label="Load with Child"></SfCheckBox>
            </td>
        </tr>
    </table>
</div>

@code{
    private bool loadchildondemand { get; set; } = false;
    private Query GridQuery { get; set; }
    private int GridPageSize {get; set;} = 12;
    //Hidden:Lines
    private string canonicalURL { get; set; }

    protected override void OnInitialized()
    {
        canonicalURL = NavigationManager.Uri.Split("?")[0];
    }
    //End:Hidden

    public void onChange(ChangeEventArgs args)
    {
        if ((bool)args.Value)
        {
            this.GridPageSize = 2;
            this.GridQuery = new Query().AddParams("loadchildondemand", true);
        }
        else
        {
            this.GridPageSize = 12;
            this.GridQuery = new Query().AddParams("loadchildondemand", false);
        }
    }
}
